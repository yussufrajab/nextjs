
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Institution
 * 
 */
export type Institution = $Result.DefaultSelection<Prisma.$InstitutionPayload>
/**
 * Model Employee
 * 
 */
export type Employee = $Result.DefaultSelection<Prisma.$EmployeePayload>
/**
 * Model EmployeeCertificate
 * 
 */
export type EmployeeCertificate = $Result.DefaultSelection<Prisma.$EmployeeCertificatePayload>
/**
 * Model ConfirmationRequest
 * 
 */
export type ConfirmationRequest = $Result.DefaultSelection<Prisma.$ConfirmationRequestPayload>
/**
 * Model PromotionRequest
 * 
 */
export type PromotionRequest = $Result.DefaultSelection<Prisma.$PromotionRequestPayload>
/**
 * Model LwopRequest
 * 
 */
export type LwopRequest = $Result.DefaultSelection<Prisma.$LwopRequestPayload>
/**
 * Model CadreChangeRequest
 * 
 */
export type CadreChangeRequest = $Result.DefaultSelection<Prisma.$CadreChangeRequestPayload>
/**
 * Model RetirementRequest
 * 
 */
export type RetirementRequest = $Result.DefaultSelection<Prisma.$RetirementRequestPayload>
/**
 * Model ResignationRequest
 * 
 */
export type ResignationRequest = $Result.DefaultSelection<Prisma.$ResignationRequestPayload>
/**
 * Model ServiceExtensionRequest
 * 
 */
export type ServiceExtensionRequest = $Result.DefaultSelection<Prisma.$ServiceExtensionRequestPayload>
/**
 * Model SeparationRequest
 * 
 */
export type SeparationRequest = $Result.DefaultSelection<Prisma.$SeparationRequestPayload>
/**
 * Model Complaint
 * 
 */
export type Complaint = $Result.DefaultSelection<Prisma.$ComplaintPayload>
/**
 * Model Notification
 * 
 */
export type Notification = $Result.DefaultSelection<Prisma.$NotificationPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.institution`: Exposes CRUD operations for the **Institution** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Institutions
    * const institutions = await prisma.institution.findMany()
    * ```
    */
  get institution(): Prisma.InstitutionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.employee`: Exposes CRUD operations for the **Employee** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Employees
    * const employees = await prisma.employee.findMany()
    * ```
    */
  get employee(): Prisma.EmployeeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.employeeCertificate`: Exposes CRUD operations for the **EmployeeCertificate** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EmployeeCertificates
    * const employeeCertificates = await prisma.employeeCertificate.findMany()
    * ```
    */
  get employeeCertificate(): Prisma.EmployeeCertificateDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.confirmationRequest`: Exposes CRUD operations for the **ConfirmationRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ConfirmationRequests
    * const confirmationRequests = await prisma.confirmationRequest.findMany()
    * ```
    */
  get confirmationRequest(): Prisma.ConfirmationRequestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.promotionRequest`: Exposes CRUD operations for the **PromotionRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PromotionRequests
    * const promotionRequests = await prisma.promotionRequest.findMany()
    * ```
    */
  get promotionRequest(): Prisma.PromotionRequestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.lwopRequest`: Exposes CRUD operations for the **LwopRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LwopRequests
    * const lwopRequests = await prisma.lwopRequest.findMany()
    * ```
    */
  get lwopRequest(): Prisma.LwopRequestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cadreChangeRequest`: Exposes CRUD operations for the **CadreChangeRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CadreChangeRequests
    * const cadreChangeRequests = await prisma.cadreChangeRequest.findMany()
    * ```
    */
  get cadreChangeRequest(): Prisma.CadreChangeRequestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.retirementRequest`: Exposes CRUD operations for the **RetirementRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RetirementRequests
    * const retirementRequests = await prisma.retirementRequest.findMany()
    * ```
    */
  get retirementRequest(): Prisma.RetirementRequestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.resignationRequest`: Exposes CRUD operations for the **ResignationRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ResignationRequests
    * const resignationRequests = await prisma.resignationRequest.findMany()
    * ```
    */
  get resignationRequest(): Prisma.ResignationRequestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.serviceExtensionRequest`: Exposes CRUD operations for the **ServiceExtensionRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ServiceExtensionRequests
    * const serviceExtensionRequests = await prisma.serviceExtensionRequest.findMany()
    * ```
    */
  get serviceExtensionRequest(): Prisma.ServiceExtensionRequestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.separationRequest`: Exposes CRUD operations for the **SeparationRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SeparationRequests
    * const separationRequests = await prisma.separationRequest.findMany()
    * ```
    */
  get separationRequest(): Prisma.SeparationRequestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.complaint`: Exposes CRUD operations for the **Complaint** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Complaints
    * const complaints = await prisma.complaint.findMany()
    * ```
    */
  get complaint(): Prisma.ComplaintDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **Notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.NotificationDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.13.0
   * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Institution: 'Institution',
    Employee: 'Employee',
    EmployeeCertificate: 'EmployeeCertificate',
    ConfirmationRequest: 'ConfirmationRequest',
    PromotionRequest: 'PromotionRequest',
    LwopRequest: 'LwopRequest',
    CadreChangeRequest: 'CadreChangeRequest',
    RetirementRequest: 'RetirementRequest',
    ResignationRequest: 'ResignationRequest',
    ServiceExtensionRequest: 'ServiceExtensionRequest',
    SeparationRequest: 'SeparationRequest',
    Complaint: 'Complaint',
    Notification: 'Notification'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "institution" | "employee" | "employeeCertificate" | "confirmationRequest" | "promotionRequest" | "lwopRequest" | "cadreChangeRequest" | "retirementRequest" | "resignationRequest" | "serviceExtensionRequest" | "separationRequest" | "complaint" | "notification"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Institution: {
        payload: Prisma.$InstitutionPayload<ExtArgs>
        fields: Prisma.InstitutionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InstitutionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InstitutionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload>
          }
          findFirst: {
            args: Prisma.InstitutionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InstitutionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload>
          }
          findMany: {
            args: Prisma.InstitutionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload>[]
          }
          create: {
            args: Prisma.InstitutionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload>
          }
          createMany: {
            args: Prisma.InstitutionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InstitutionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload>[]
          }
          delete: {
            args: Prisma.InstitutionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload>
          }
          update: {
            args: Prisma.InstitutionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload>
          }
          deleteMany: {
            args: Prisma.InstitutionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InstitutionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InstitutionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload>[]
          }
          upsert: {
            args: Prisma.InstitutionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitutionPayload>
          }
          aggregate: {
            args: Prisma.InstitutionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInstitution>
          }
          groupBy: {
            args: Prisma.InstitutionGroupByArgs<ExtArgs>
            result: $Utils.Optional<InstitutionGroupByOutputType>[]
          }
          count: {
            args: Prisma.InstitutionCountArgs<ExtArgs>
            result: $Utils.Optional<InstitutionCountAggregateOutputType> | number
          }
        }
      }
      Employee: {
        payload: Prisma.$EmployeePayload<ExtArgs>
        fields: Prisma.EmployeeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EmployeeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EmployeeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeePayload>
          }
          findFirst: {
            args: Prisma.EmployeeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EmployeeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeePayload>
          }
          findMany: {
            args: Prisma.EmployeeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeePayload>[]
          }
          create: {
            args: Prisma.EmployeeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeePayload>
          }
          createMany: {
            args: Prisma.EmployeeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EmployeeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeePayload>[]
          }
          delete: {
            args: Prisma.EmployeeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeePayload>
          }
          update: {
            args: Prisma.EmployeeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeePayload>
          }
          deleteMany: {
            args: Prisma.EmployeeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EmployeeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EmployeeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeePayload>[]
          }
          upsert: {
            args: Prisma.EmployeeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeePayload>
          }
          aggregate: {
            args: Prisma.EmployeeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmployee>
          }
          groupBy: {
            args: Prisma.EmployeeGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmployeeGroupByOutputType>[]
          }
          count: {
            args: Prisma.EmployeeCountArgs<ExtArgs>
            result: $Utils.Optional<EmployeeCountAggregateOutputType> | number
          }
        }
      }
      EmployeeCertificate: {
        payload: Prisma.$EmployeeCertificatePayload<ExtArgs>
        fields: Prisma.EmployeeCertificateFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EmployeeCertificateFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeeCertificatePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EmployeeCertificateFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeeCertificatePayload>
          }
          findFirst: {
            args: Prisma.EmployeeCertificateFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeeCertificatePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EmployeeCertificateFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeeCertificatePayload>
          }
          findMany: {
            args: Prisma.EmployeeCertificateFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeeCertificatePayload>[]
          }
          create: {
            args: Prisma.EmployeeCertificateCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeeCertificatePayload>
          }
          createMany: {
            args: Prisma.EmployeeCertificateCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EmployeeCertificateCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeeCertificatePayload>[]
          }
          delete: {
            args: Prisma.EmployeeCertificateDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeeCertificatePayload>
          }
          update: {
            args: Prisma.EmployeeCertificateUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeeCertificatePayload>
          }
          deleteMany: {
            args: Prisma.EmployeeCertificateDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EmployeeCertificateUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EmployeeCertificateUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeeCertificatePayload>[]
          }
          upsert: {
            args: Prisma.EmployeeCertificateUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployeeCertificatePayload>
          }
          aggregate: {
            args: Prisma.EmployeeCertificateAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmployeeCertificate>
          }
          groupBy: {
            args: Prisma.EmployeeCertificateGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmployeeCertificateGroupByOutputType>[]
          }
          count: {
            args: Prisma.EmployeeCertificateCountArgs<ExtArgs>
            result: $Utils.Optional<EmployeeCertificateCountAggregateOutputType> | number
          }
        }
      }
      ConfirmationRequest: {
        payload: Prisma.$ConfirmationRequestPayload<ExtArgs>
        fields: Prisma.ConfirmationRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConfirmationRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfirmationRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConfirmationRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfirmationRequestPayload>
          }
          findFirst: {
            args: Prisma.ConfirmationRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfirmationRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConfirmationRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfirmationRequestPayload>
          }
          findMany: {
            args: Prisma.ConfirmationRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfirmationRequestPayload>[]
          }
          create: {
            args: Prisma.ConfirmationRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfirmationRequestPayload>
          }
          createMany: {
            args: Prisma.ConfirmationRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ConfirmationRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfirmationRequestPayload>[]
          }
          delete: {
            args: Prisma.ConfirmationRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfirmationRequestPayload>
          }
          update: {
            args: Prisma.ConfirmationRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfirmationRequestPayload>
          }
          deleteMany: {
            args: Prisma.ConfirmationRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConfirmationRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ConfirmationRequestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfirmationRequestPayload>[]
          }
          upsert: {
            args: Prisma.ConfirmationRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConfirmationRequestPayload>
          }
          aggregate: {
            args: Prisma.ConfirmationRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConfirmationRequest>
          }
          groupBy: {
            args: Prisma.ConfirmationRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConfirmationRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConfirmationRequestCountArgs<ExtArgs>
            result: $Utils.Optional<ConfirmationRequestCountAggregateOutputType> | number
          }
        }
      }
      PromotionRequest: {
        payload: Prisma.$PromotionRequestPayload<ExtArgs>
        fields: Prisma.PromotionRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PromotionRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PromotionRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionRequestPayload>
          }
          findFirst: {
            args: Prisma.PromotionRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PromotionRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionRequestPayload>
          }
          findMany: {
            args: Prisma.PromotionRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionRequestPayload>[]
          }
          create: {
            args: Prisma.PromotionRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionRequestPayload>
          }
          createMany: {
            args: Prisma.PromotionRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PromotionRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionRequestPayload>[]
          }
          delete: {
            args: Prisma.PromotionRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionRequestPayload>
          }
          update: {
            args: Prisma.PromotionRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionRequestPayload>
          }
          deleteMany: {
            args: Prisma.PromotionRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PromotionRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PromotionRequestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionRequestPayload>[]
          }
          upsert: {
            args: Prisma.PromotionRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionRequestPayload>
          }
          aggregate: {
            args: Prisma.PromotionRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromotionRequest>
          }
          groupBy: {
            args: Prisma.PromotionRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<PromotionRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.PromotionRequestCountArgs<ExtArgs>
            result: $Utils.Optional<PromotionRequestCountAggregateOutputType> | number
          }
        }
      }
      LwopRequest: {
        payload: Prisma.$LwopRequestPayload<ExtArgs>
        fields: Prisma.LwopRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LwopRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LwopRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LwopRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LwopRequestPayload>
          }
          findFirst: {
            args: Prisma.LwopRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LwopRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LwopRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LwopRequestPayload>
          }
          findMany: {
            args: Prisma.LwopRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LwopRequestPayload>[]
          }
          create: {
            args: Prisma.LwopRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LwopRequestPayload>
          }
          createMany: {
            args: Prisma.LwopRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LwopRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LwopRequestPayload>[]
          }
          delete: {
            args: Prisma.LwopRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LwopRequestPayload>
          }
          update: {
            args: Prisma.LwopRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LwopRequestPayload>
          }
          deleteMany: {
            args: Prisma.LwopRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LwopRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LwopRequestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LwopRequestPayload>[]
          }
          upsert: {
            args: Prisma.LwopRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LwopRequestPayload>
          }
          aggregate: {
            args: Prisma.LwopRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLwopRequest>
          }
          groupBy: {
            args: Prisma.LwopRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<LwopRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.LwopRequestCountArgs<ExtArgs>
            result: $Utils.Optional<LwopRequestCountAggregateOutputType> | number
          }
        }
      }
      CadreChangeRequest: {
        payload: Prisma.$CadreChangeRequestPayload<ExtArgs>
        fields: Prisma.CadreChangeRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CadreChangeRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CadreChangeRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CadreChangeRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CadreChangeRequestPayload>
          }
          findFirst: {
            args: Prisma.CadreChangeRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CadreChangeRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CadreChangeRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CadreChangeRequestPayload>
          }
          findMany: {
            args: Prisma.CadreChangeRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CadreChangeRequestPayload>[]
          }
          create: {
            args: Prisma.CadreChangeRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CadreChangeRequestPayload>
          }
          createMany: {
            args: Prisma.CadreChangeRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CadreChangeRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CadreChangeRequestPayload>[]
          }
          delete: {
            args: Prisma.CadreChangeRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CadreChangeRequestPayload>
          }
          update: {
            args: Prisma.CadreChangeRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CadreChangeRequestPayload>
          }
          deleteMany: {
            args: Prisma.CadreChangeRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CadreChangeRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CadreChangeRequestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CadreChangeRequestPayload>[]
          }
          upsert: {
            args: Prisma.CadreChangeRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CadreChangeRequestPayload>
          }
          aggregate: {
            args: Prisma.CadreChangeRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCadreChangeRequest>
          }
          groupBy: {
            args: Prisma.CadreChangeRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<CadreChangeRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.CadreChangeRequestCountArgs<ExtArgs>
            result: $Utils.Optional<CadreChangeRequestCountAggregateOutputType> | number
          }
        }
      }
      RetirementRequest: {
        payload: Prisma.$RetirementRequestPayload<ExtArgs>
        fields: Prisma.RetirementRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RetirementRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RetirementRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RetirementRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RetirementRequestPayload>
          }
          findFirst: {
            args: Prisma.RetirementRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RetirementRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RetirementRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RetirementRequestPayload>
          }
          findMany: {
            args: Prisma.RetirementRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RetirementRequestPayload>[]
          }
          create: {
            args: Prisma.RetirementRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RetirementRequestPayload>
          }
          createMany: {
            args: Prisma.RetirementRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RetirementRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RetirementRequestPayload>[]
          }
          delete: {
            args: Prisma.RetirementRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RetirementRequestPayload>
          }
          update: {
            args: Prisma.RetirementRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RetirementRequestPayload>
          }
          deleteMany: {
            args: Prisma.RetirementRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RetirementRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RetirementRequestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RetirementRequestPayload>[]
          }
          upsert: {
            args: Prisma.RetirementRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RetirementRequestPayload>
          }
          aggregate: {
            args: Prisma.RetirementRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRetirementRequest>
          }
          groupBy: {
            args: Prisma.RetirementRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<RetirementRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.RetirementRequestCountArgs<ExtArgs>
            result: $Utils.Optional<RetirementRequestCountAggregateOutputType> | number
          }
        }
      }
      ResignationRequest: {
        payload: Prisma.$ResignationRequestPayload<ExtArgs>
        fields: Prisma.ResignationRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ResignationRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResignationRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ResignationRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResignationRequestPayload>
          }
          findFirst: {
            args: Prisma.ResignationRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResignationRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ResignationRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResignationRequestPayload>
          }
          findMany: {
            args: Prisma.ResignationRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResignationRequestPayload>[]
          }
          create: {
            args: Prisma.ResignationRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResignationRequestPayload>
          }
          createMany: {
            args: Prisma.ResignationRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ResignationRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResignationRequestPayload>[]
          }
          delete: {
            args: Prisma.ResignationRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResignationRequestPayload>
          }
          update: {
            args: Prisma.ResignationRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResignationRequestPayload>
          }
          deleteMany: {
            args: Prisma.ResignationRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ResignationRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ResignationRequestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResignationRequestPayload>[]
          }
          upsert: {
            args: Prisma.ResignationRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResignationRequestPayload>
          }
          aggregate: {
            args: Prisma.ResignationRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateResignationRequest>
          }
          groupBy: {
            args: Prisma.ResignationRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<ResignationRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.ResignationRequestCountArgs<ExtArgs>
            result: $Utils.Optional<ResignationRequestCountAggregateOutputType> | number
          }
        }
      }
      ServiceExtensionRequest: {
        payload: Prisma.$ServiceExtensionRequestPayload<ExtArgs>
        fields: Prisma.ServiceExtensionRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ServiceExtensionRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceExtensionRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ServiceExtensionRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceExtensionRequestPayload>
          }
          findFirst: {
            args: Prisma.ServiceExtensionRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceExtensionRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ServiceExtensionRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceExtensionRequestPayload>
          }
          findMany: {
            args: Prisma.ServiceExtensionRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceExtensionRequestPayload>[]
          }
          create: {
            args: Prisma.ServiceExtensionRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceExtensionRequestPayload>
          }
          createMany: {
            args: Prisma.ServiceExtensionRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ServiceExtensionRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceExtensionRequestPayload>[]
          }
          delete: {
            args: Prisma.ServiceExtensionRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceExtensionRequestPayload>
          }
          update: {
            args: Prisma.ServiceExtensionRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceExtensionRequestPayload>
          }
          deleteMany: {
            args: Prisma.ServiceExtensionRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ServiceExtensionRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ServiceExtensionRequestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceExtensionRequestPayload>[]
          }
          upsert: {
            args: Prisma.ServiceExtensionRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceExtensionRequestPayload>
          }
          aggregate: {
            args: Prisma.ServiceExtensionRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateServiceExtensionRequest>
          }
          groupBy: {
            args: Prisma.ServiceExtensionRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<ServiceExtensionRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.ServiceExtensionRequestCountArgs<ExtArgs>
            result: $Utils.Optional<ServiceExtensionRequestCountAggregateOutputType> | number
          }
        }
      }
      SeparationRequest: {
        payload: Prisma.$SeparationRequestPayload<ExtArgs>
        fields: Prisma.SeparationRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SeparationRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeparationRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SeparationRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeparationRequestPayload>
          }
          findFirst: {
            args: Prisma.SeparationRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeparationRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SeparationRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeparationRequestPayload>
          }
          findMany: {
            args: Prisma.SeparationRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeparationRequestPayload>[]
          }
          create: {
            args: Prisma.SeparationRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeparationRequestPayload>
          }
          createMany: {
            args: Prisma.SeparationRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SeparationRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeparationRequestPayload>[]
          }
          delete: {
            args: Prisma.SeparationRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeparationRequestPayload>
          }
          update: {
            args: Prisma.SeparationRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeparationRequestPayload>
          }
          deleteMany: {
            args: Prisma.SeparationRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SeparationRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SeparationRequestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeparationRequestPayload>[]
          }
          upsert: {
            args: Prisma.SeparationRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeparationRequestPayload>
          }
          aggregate: {
            args: Prisma.SeparationRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSeparationRequest>
          }
          groupBy: {
            args: Prisma.SeparationRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<SeparationRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.SeparationRequestCountArgs<ExtArgs>
            result: $Utils.Optional<SeparationRequestCountAggregateOutputType> | number
          }
        }
      }
      Complaint: {
        payload: Prisma.$ComplaintPayload<ExtArgs>
        fields: Prisma.ComplaintFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ComplaintFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComplaintPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ComplaintFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComplaintPayload>
          }
          findFirst: {
            args: Prisma.ComplaintFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComplaintPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ComplaintFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComplaintPayload>
          }
          findMany: {
            args: Prisma.ComplaintFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComplaintPayload>[]
          }
          create: {
            args: Prisma.ComplaintCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComplaintPayload>
          }
          createMany: {
            args: Prisma.ComplaintCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ComplaintCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComplaintPayload>[]
          }
          delete: {
            args: Prisma.ComplaintDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComplaintPayload>
          }
          update: {
            args: Prisma.ComplaintUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComplaintPayload>
          }
          deleteMany: {
            args: Prisma.ComplaintDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ComplaintUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ComplaintUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComplaintPayload>[]
          }
          upsert: {
            args: Prisma.ComplaintUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComplaintPayload>
          }
          aggregate: {
            args: Prisma.ComplaintAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComplaint>
          }
          groupBy: {
            args: Prisma.ComplaintGroupByArgs<ExtArgs>
            result: $Utils.Optional<ComplaintGroupByOutputType>[]
          }
          count: {
            args: Prisma.ComplaintCountArgs<ExtArgs>
            result: $Utils.Optional<ComplaintCountAggregateOutputType> | number
          }
        }
      }
      Notification: {
        payload: Prisma.$NotificationPayload<ExtArgs>
        fields: Prisma.NotificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findFirst: {
            args: Prisma.NotificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findMany: {
            args: Prisma.NotificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          create: {
            args: Prisma.NotificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          createMany: {
            args: Prisma.NotificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          delete: {
            args: Prisma.NotificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          update: {
            args: Prisma.NotificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          deleteMany: {
            args: Prisma.NotificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.NotificationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          upsert: {
            args: Prisma.NotificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.NotificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    institution?: InstitutionOmit
    employee?: EmployeeOmit
    employeeCertificate?: EmployeeCertificateOmit
    confirmationRequest?: ConfirmationRequestOmit
    promotionRequest?: PromotionRequestOmit
    lwopRequest?: LwopRequestOmit
    cadreChangeRequest?: CadreChangeRequestOmit
    retirementRequest?: RetirementRequestOmit
    resignationRequest?: ResignationRequestOmit
    serviceExtensionRequest?: ServiceExtensionRequestOmit
    separationRequest?: SeparationRequestOmit
    complaint?: ComplaintOmit
    notification?: NotificationOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    reviewedCadreChanges: number
    submittedCadreChanges: number
    complaints: number
    reviewedComplaints: number
    reviewedConfirmations: number
    submittedConfirmations: number
    reviewedLWOPs: number
    submittedLWOPs: number
    notifications: number
    reviewedPromotions: number
    submittedPromotions: number
    reviewedResignations: number
    submittedResignations: number
    reviewedRetirements: number
    submittedRetirements: number
    reviewedSeparations: number
    submittedSeparations: number
    reviewedServiceExtensions: number
    submittedServiceExtensions: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reviewedCadreChanges?: boolean | UserCountOutputTypeCountReviewedCadreChangesArgs
    submittedCadreChanges?: boolean | UserCountOutputTypeCountSubmittedCadreChangesArgs
    complaints?: boolean | UserCountOutputTypeCountComplaintsArgs
    reviewedComplaints?: boolean | UserCountOutputTypeCountReviewedComplaintsArgs
    reviewedConfirmations?: boolean | UserCountOutputTypeCountReviewedConfirmationsArgs
    submittedConfirmations?: boolean | UserCountOutputTypeCountSubmittedConfirmationsArgs
    reviewedLWOPs?: boolean | UserCountOutputTypeCountReviewedLWOPsArgs
    submittedLWOPs?: boolean | UserCountOutputTypeCountSubmittedLWOPsArgs
    notifications?: boolean | UserCountOutputTypeCountNotificationsArgs
    reviewedPromotions?: boolean | UserCountOutputTypeCountReviewedPromotionsArgs
    submittedPromotions?: boolean | UserCountOutputTypeCountSubmittedPromotionsArgs
    reviewedResignations?: boolean | UserCountOutputTypeCountReviewedResignationsArgs
    submittedResignations?: boolean | UserCountOutputTypeCountSubmittedResignationsArgs
    reviewedRetirements?: boolean | UserCountOutputTypeCountReviewedRetirementsArgs
    submittedRetirements?: boolean | UserCountOutputTypeCountSubmittedRetirementsArgs
    reviewedSeparations?: boolean | UserCountOutputTypeCountReviewedSeparationsArgs
    submittedSeparations?: boolean | UserCountOutputTypeCountSubmittedSeparationsArgs
    reviewedServiceExtensions?: boolean | UserCountOutputTypeCountReviewedServiceExtensionsArgs
    submittedServiceExtensions?: boolean | UserCountOutputTypeCountSubmittedServiceExtensionsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewedCadreChangesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CadreChangeRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSubmittedCadreChangesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CadreChangeRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountComplaintsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComplaintWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewedComplaintsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComplaintWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewedConfirmationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConfirmationRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSubmittedConfirmationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConfirmationRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewedLWOPsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LwopRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSubmittedLWOPsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LwopRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewedPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSubmittedPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewedResignationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ResignationRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSubmittedResignationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ResignationRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewedRetirementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RetirementRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSubmittedRetirementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RetirementRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewedSeparationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SeparationRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSubmittedSeparationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SeparationRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewedServiceExtensionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceExtensionRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSubmittedServiceExtensionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceExtensionRequestWhereInput
  }


  /**
   * Count Type InstitutionCountOutputType
   */

  export type InstitutionCountOutputType = {
    employees: number
    users: number
  }

  export type InstitutionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees?: boolean | InstitutionCountOutputTypeCountEmployeesArgs
    users?: boolean | InstitutionCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * InstitutionCountOutputType without action
   */
  export type InstitutionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InstitutionCountOutputType
     */
    select?: InstitutionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InstitutionCountOutputType without action
   */
  export type InstitutionCountOutputTypeCountEmployeesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmployeeWhereInput
  }

  /**
   * InstitutionCountOutputType without action
   */
  export type InstitutionCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type EmployeeCountOutputType
   */

  export type EmployeeCountOutputType = {
    cadreChangeRequests: number
    confirmationRequests: number
    certificates: number
    lwopRequests: number
    promotionRequests: number
    resignationRequests: number
    retirementRequests: number
    separationRequests: number
    serviceExtensionRequests: number
  }

  export type EmployeeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cadreChangeRequests?: boolean | EmployeeCountOutputTypeCountCadreChangeRequestsArgs
    confirmationRequests?: boolean | EmployeeCountOutputTypeCountConfirmationRequestsArgs
    certificates?: boolean | EmployeeCountOutputTypeCountCertificatesArgs
    lwopRequests?: boolean | EmployeeCountOutputTypeCountLwopRequestsArgs
    promotionRequests?: boolean | EmployeeCountOutputTypeCountPromotionRequestsArgs
    resignationRequests?: boolean | EmployeeCountOutputTypeCountResignationRequestsArgs
    retirementRequests?: boolean | EmployeeCountOutputTypeCountRetirementRequestsArgs
    separationRequests?: boolean | EmployeeCountOutputTypeCountSeparationRequestsArgs
    serviceExtensionRequests?: boolean | EmployeeCountOutputTypeCountServiceExtensionRequestsArgs
  }

  // Custom InputTypes
  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployeeCountOutputType
     */
    select?: EmployeeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountCadreChangeRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CadreChangeRequestWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountConfirmationRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConfirmationRequestWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountCertificatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmployeeCertificateWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountLwopRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LwopRequestWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountPromotionRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionRequestWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountResignationRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ResignationRequestWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountRetirementRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RetirementRequestWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountSeparationRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SeparationRequestWhereInput
  }

  /**
   * EmployeeCountOutputType without action
   */
  export type EmployeeCountOutputTypeCountServiceExtensionRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceExtensionRequestWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    name: string | null
    username: string | null
    password: string | null
    role: string | null
    active: boolean | null
    employeeId: string | null
    institutionId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    name: string | null
    username: string | null
    password: string | null
    role: string | null
    active: boolean | null
    employeeId: string | null
    institutionId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    username: number
    password: number
    role: number
    active: number
    employeeId: number
    institutionId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    username?: true
    password?: true
    role?: true
    active?: true
    employeeId?: true
    institutionId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    username?: true
    password?: true
    role?: true
    active?: true
    employeeId?: true
    institutionId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    username?: true
    password?: true
    role?: true
    active?: true
    employeeId?: true
    institutionId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    name: string
    username: string
    password: string
    role: string
    active: boolean
    employeeId: string | null
    institutionId: string
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    username?: boolean
    password?: boolean
    role?: boolean
    active?: boolean
    employeeId?: boolean
    institutionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    reviewedCadreChanges?: boolean | User$reviewedCadreChangesArgs<ExtArgs>
    submittedCadreChanges?: boolean | User$submittedCadreChangesArgs<ExtArgs>
    complaints?: boolean | User$complaintsArgs<ExtArgs>
    reviewedComplaints?: boolean | User$reviewedComplaintsArgs<ExtArgs>
    reviewedConfirmations?: boolean | User$reviewedConfirmationsArgs<ExtArgs>
    submittedConfirmations?: boolean | User$submittedConfirmationsArgs<ExtArgs>
    reviewedLWOPs?: boolean | User$reviewedLWOPsArgs<ExtArgs>
    submittedLWOPs?: boolean | User$submittedLWOPsArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    reviewedPromotions?: boolean | User$reviewedPromotionsArgs<ExtArgs>
    submittedPromotions?: boolean | User$submittedPromotionsArgs<ExtArgs>
    reviewedResignations?: boolean | User$reviewedResignationsArgs<ExtArgs>
    submittedResignations?: boolean | User$submittedResignationsArgs<ExtArgs>
    reviewedRetirements?: boolean | User$reviewedRetirementsArgs<ExtArgs>
    submittedRetirements?: boolean | User$submittedRetirementsArgs<ExtArgs>
    reviewedSeparations?: boolean | User$reviewedSeparationsArgs<ExtArgs>
    submittedSeparations?: boolean | User$submittedSeparationsArgs<ExtArgs>
    reviewedServiceExtensions?: boolean | User$reviewedServiceExtensionsArgs<ExtArgs>
    submittedServiceExtensions?: boolean | User$submittedServiceExtensionsArgs<ExtArgs>
    employee?: boolean | User$employeeArgs<ExtArgs>
    institution?: boolean | InstitutionDefaultArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    username?: boolean
    password?: boolean
    role?: boolean
    active?: boolean
    employeeId?: boolean
    institutionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | User$employeeArgs<ExtArgs>
    institution?: boolean | InstitutionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    username?: boolean
    password?: boolean
    role?: boolean
    active?: boolean
    employeeId?: boolean
    institutionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | User$employeeArgs<ExtArgs>
    institution?: boolean | InstitutionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    name?: boolean
    username?: boolean
    password?: boolean
    role?: boolean
    active?: boolean
    employeeId?: boolean
    institutionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "username" | "password" | "role" | "active" | "employeeId" | "institutionId" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reviewedCadreChanges?: boolean | User$reviewedCadreChangesArgs<ExtArgs>
    submittedCadreChanges?: boolean | User$submittedCadreChangesArgs<ExtArgs>
    complaints?: boolean | User$complaintsArgs<ExtArgs>
    reviewedComplaints?: boolean | User$reviewedComplaintsArgs<ExtArgs>
    reviewedConfirmations?: boolean | User$reviewedConfirmationsArgs<ExtArgs>
    submittedConfirmations?: boolean | User$submittedConfirmationsArgs<ExtArgs>
    reviewedLWOPs?: boolean | User$reviewedLWOPsArgs<ExtArgs>
    submittedLWOPs?: boolean | User$submittedLWOPsArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    reviewedPromotions?: boolean | User$reviewedPromotionsArgs<ExtArgs>
    submittedPromotions?: boolean | User$submittedPromotionsArgs<ExtArgs>
    reviewedResignations?: boolean | User$reviewedResignationsArgs<ExtArgs>
    submittedResignations?: boolean | User$submittedResignationsArgs<ExtArgs>
    reviewedRetirements?: boolean | User$reviewedRetirementsArgs<ExtArgs>
    submittedRetirements?: boolean | User$submittedRetirementsArgs<ExtArgs>
    reviewedSeparations?: boolean | User$reviewedSeparationsArgs<ExtArgs>
    submittedSeparations?: boolean | User$submittedSeparationsArgs<ExtArgs>
    reviewedServiceExtensions?: boolean | User$reviewedServiceExtensionsArgs<ExtArgs>
    submittedServiceExtensions?: boolean | User$submittedServiceExtensionsArgs<ExtArgs>
    employee?: boolean | User$employeeArgs<ExtArgs>
    institution?: boolean | InstitutionDefaultArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | User$employeeArgs<ExtArgs>
    institution?: boolean | InstitutionDefaultArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | User$employeeArgs<ExtArgs>
    institution?: boolean | InstitutionDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      reviewedCadreChanges: Prisma.$CadreChangeRequestPayload<ExtArgs>[]
      submittedCadreChanges: Prisma.$CadreChangeRequestPayload<ExtArgs>[]
      complaints: Prisma.$ComplaintPayload<ExtArgs>[]
      reviewedComplaints: Prisma.$ComplaintPayload<ExtArgs>[]
      reviewedConfirmations: Prisma.$ConfirmationRequestPayload<ExtArgs>[]
      submittedConfirmations: Prisma.$ConfirmationRequestPayload<ExtArgs>[]
      reviewedLWOPs: Prisma.$LwopRequestPayload<ExtArgs>[]
      submittedLWOPs: Prisma.$LwopRequestPayload<ExtArgs>[]
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
      reviewedPromotions: Prisma.$PromotionRequestPayload<ExtArgs>[]
      submittedPromotions: Prisma.$PromotionRequestPayload<ExtArgs>[]
      reviewedResignations: Prisma.$ResignationRequestPayload<ExtArgs>[]
      submittedResignations: Prisma.$ResignationRequestPayload<ExtArgs>[]
      reviewedRetirements: Prisma.$RetirementRequestPayload<ExtArgs>[]
      submittedRetirements: Prisma.$RetirementRequestPayload<ExtArgs>[]
      reviewedSeparations: Prisma.$SeparationRequestPayload<ExtArgs>[]
      submittedSeparations: Prisma.$SeparationRequestPayload<ExtArgs>[]
      reviewedServiceExtensions: Prisma.$ServiceExtensionRequestPayload<ExtArgs>[]
      submittedServiceExtensions: Prisma.$ServiceExtensionRequestPayload<ExtArgs>[]
      employee: Prisma.$EmployeePayload<ExtArgs> | null
      institution: Prisma.$InstitutionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      username: string
      password: string
      role: string
      active: boolean
      employeeId: string | null
      institutionId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reviewedCadreChanges<T extends User$reviewedCadreChangesArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewedCadreChangesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CadreChangeRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    submittedCadreChanges<T extends User$submittedCadreChangesArgs<ExtArgs> = {}>(args?: Subset<T, User$submittedCadreChangesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CadreChangeRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    complaints<T extends User$complaintsArgs<ExtArgs> = {}>(args?: Subset<T, User$complaintsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComplaintPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviewedComplaints<T extends User$reviewedComplaintsArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewedComplaintsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComplaintPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviewedConfirmations<T extends User$reviewedConfirmationsArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewedConfirmationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfirmationRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    submittedConfirmations<T extends User$submittedConfirmationsArgs<ExtArgs> = {}>(args?: Subset<T, User$submittedConfirmationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfirmationRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviewedLWOPs<T extends User$reviewedLWOPsArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewedLWOPsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LwopRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    submittedLWOPs<T extends User$submittedLWOPsArgs<ExtArgs> = {}>(args?: Subset<T, User$submittedLWOPsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LwopRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notifications<T extends User$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, User$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviewedPromotions<T extends User$reviewedPromotionsArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewedPromotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    submittedPromotions<T extends User$submittedPromotionsArgs<ExtArgs> = {}>(args?: Subset<T, User$submittedPromotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviewedResignations<T extends User$reviewedResignationsArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewedResignationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResignationRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    submittedResignations<T extends User$submittedResignationsArgs<ExtArgs> = {}>(args?: Subset<T, User$submittedResignationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResignationRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviewedRetirements<T extends User$reviewedRetirementsArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewedRetirementsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RetirementRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    submittedRetirements<T extends User$submittedRetirementsArgs<ExtArgs> = {}>(args?: Subset<T, User$submittedRetirementsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RetirementRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviewedSeparations<T extends User$reviewedSeparationsArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewedSeparationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeparationRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    submittedSeparations<T extends User$submittedSeparationsArgs<ExtArgs> = {}>(args?: Subset<T, User$submittedSeparationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeparationRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviewedServiceExtensions<T extends User$reviewedServiceExtensionsArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewedServiceExtensionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceExtensionRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    submittedServiceExtensions<T extends User$submittedServiceExtensionsArgs<ExtArgs> = {}>(args?: Subset<T, User$submittedServiceExtensionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceExtensionRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    employee<T extends User$employeeArgs<ExtArgs> = {}>(args?: Subset<T, User$employeeArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    institution<T extends InstitutionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InstitutionDefaultArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'String'>
    readonly active: FieldRef<"User", 'Boolean'>
    readonly employeeId: FieldRef<"User", 'String'>
    readonly institutionId: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.reviewedCadreChanges
   */
  export type User$reviewedCadreChangesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CadreChangeRequest
     */
    select?: CadreChangeRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CadreChangeRequest
     */
    omit?: CadreChangeRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CadreChangeRequestInclude<ExtArgs> | null
    where?: CadreChangeRequestWhereInput
    orderBy?: CadreChangeRequestOrderByWithRelationInput | CadreChangeRequestOrderByWithRelationInput[]
    cursor?: CadreChangeRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CadreChangeRequestScalarFieldEnum | CadreChangeRequestScalarFieldEnum[]
  }

  /**
   * User.submittedCadreChanges
   */
  export type User$submittedCadreChangesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CadreChangeRequest
     */
    select?: CadreChangeRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CadreChangeRequest
     */
    omit?: CadreChangeRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CadreChangeRequestInclude<ExtArgs> | null
    where?: CadreChangeRequestWhereInput
    orderBy?: CadreChangeRequestOrderByWithRelationInput | CadreChangeRequestOrderByWithRelationInput[]
    cursor?: CadreChangeRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CadreChangeRequestScalarFieldEnum | CadreChangeRequestScalarFieldEnum[]
  }

  /**
   * User.complaints
   */
  export type User$complaintsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Complaint
     */
    select?: ComplaintSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Complaint
     */
    omit?: ComplaintOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComplaintInclude<ExtArgs> | null
    where?: ComplaintWhereInput
    orderBy?: ComplaintOrderByWithRelationInput | ComplaintOrderByWithRelationInput[]
    cursor?: ComplaintWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComplaintScalarFieldEnum | ComplaintScalarFieldEnum[]
  }

  /**
   * User.reviewedComplaints
   */
  export type User$reviewedComplaintsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Complaint
     */
    select?: ComplaintSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Complaint
     */
    omit?: ComplaintOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComplaintInclude<ExtArgs> | null
    where?: ComplaintWhereInput
    orderBy?: ComplaintOrderByWithRelationInput | ComplaintOrderByWithRelationInput[]
    cursor?: ComplaintWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComplaintScalarFieldEnum | ComplaintScalarFieldEnum[]
  }

  /**
   * User.reviewedConfirmations
   */
  export type User$reviewedConfirmationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfirmationRequest
     */
    select?: ConfirmationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfirmationRequest
     */
    omit?: ConfirmationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfirmationRequestInclude<ExtArgs> | null
    where?: ConfirmationRequestWhereInput
    orderBy?: ConfirmationRequestOrderByWithRelationInput | ConfirmationRequestOrderByWithRelationInput[]
    cursor?: ConfirmationRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConfirmationRequestScalarFieldEnum | ConfirmationRequestScalarFieldEnum[]
  }

  /**
   * User.submittedConfirmations
   */
  export type User$submittedConfirmationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfirmationRequest
     */
    select?: ConfirmationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfirmationRequest
     */
    omit?: ConfirmationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfirmationRequestInclude<ExtArgs> | null
    where?: ConfirmationRequestWhereInput
    orderBy?: ConfirmationRequestOrderByWithRelationInput | ConfirmationRequestOrderByWithRelationInput[]
    cursor?: ConfirmationRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConfirmationRequestScalarFieldEnum | ConfirmationRequestScalarFieldEnum[]
  }

  /**
   * User.reviewedLWOPs
   */
  export type User$reviewedLWOPsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LwopRequest
     */
    select?: LwopRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LwopRequest
     */
    omit?: LwopRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LwopRequestInclude<ExtArgs> | null
    where?: LwopRequestWhereInput
    orderBy?: LwopRequestOrderByWithRelationInput | LwopRequestOrderByWithRelationInput[]
    cursor?: LwopRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LwopRequestScalarFieldEnum | LwopRequestScalarFieldEnum[]
  }

  /**
   * User.submittedLWOPs
   */
  export type User$submittedLWOPsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LwopRequest
     */
    select?: LwopRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LwopRequest
     */
    omit?: LwopRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LwopRequestInclude<ExtArgs> | null
    where?: LwopRequestWhereInput
    orderBy?: LwopRequestOrderByWithRelationInput | LwopRequestOrderByWithRelationInput[]
    cursor?: LwopRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LwopRequestScalarFieldEnum | LwopRequestScalarFieldEnum[]
  }

  /**
   * User.notifications
   */
  export type User$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User.reviewedPromotions
   */
  export type User$reviewedPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionRequest
     */
    select?: PromotionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionRequest
     */
    omit?: PromotionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionRequestInclude<ExtArgs> | null
    where?: PromotionRequestWhereInput
    orderBy?: PromotionRequestOrderByWithRelationInput | PromotionRequestOrderByWithRelationInput[]
    cursor?: PromotionRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionRequestScalarFieldEnum | PromotionRequestScalarFieldEnum[]
  }

  /**
   * User.submittedPromotions
   */
  export type User$submittedPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionRequest
     */
    select?: PromotionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionRequest
     */
    omit?: PromotionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionRequestInclude<ExtArgs> | null
    where?: PromotionRequestWhereInput
    orderBy?: PromotionRequestOrderByWithRelationInput | PromotionRequestOrderByWithRelationInput[]
    cursor?: PromotionRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionRequestScalarFieldEnum | PromotionRequestScalarFieldEnum[]
  }

  /**
   * User.reviewedResignations
   */
  export type User$reviewedResignationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResignationRequest
     */
    select?: ResignationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResignationRequest
     */
    omit?: ResignationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResignationRequestInclude<ExtArgs> | null
    where?: ResignationRequestWhereInput
    orderBy?: ResignationRequestOrderByWithRelationInput | ResignationRequestOrderByWithRelationInput[]
    cursor?: ResignationRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ResignationRequestScalarFieldEnum | ResignationRequestScalarFieldEnum[]
  }

  /**
   * User.submittedResignations
   */
  export type User$submittedResignationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResignationRequest
     */
    select?: ResignationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResignationRequest
     */
    omit?: ResignationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResignationRequestInclude<ExtArgs> | null
    where?: ResignationRequestWhereInput
    orderBy?: ResignationRequestOrderByWithRelationInput | ResignationRequestOrderByWithRelationInput[]
    cursor?: ResignationRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ResignationRequestScalarFieldEnum | ResignationRequestScalarFieldEnum[]
  }

  /**
   * User.reviewedRetirements
   */
  export type User$reviewedRetirementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RetirementRequest
     */
    select?: RetirementRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RetirementRequest
     */
    omit?: RetirementRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RetirementRequestInclude<ExtArgs> | null
    where?: RetirementRequestWhereInput
    orderBy?: RetirementRequestOrderByWithRelationInput | RetirementRequestOrderByWithRelationInput[]
    cursor?: RetirementRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RetirementRequestScalarFieldEnum | RetirementRequestScalarFieldEnum[]
  }

  /**
   * User.submittedRetirements
   */
  export type User$submittedRetirementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RetirementRequest
     */
    select?: RetirementRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RetirementRequest
     */
    omit?: RetirementRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RetirementRequestInclude<ExtArgs> | null
    where?: RetirementRequestWhereInput
    orderBy?: RetirementRequestOrderByWithRelationInput | RetirementRequestOrderByWithRelationInput[]
    cursor?: RetirementRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RetirementRequestScalarFieldEnum | RetirementRequestScalarFieldEnum[]
  }

  /**
   * User.reviewedSeparations
   */
  export type User$reviewedSeparationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeparationRequest
     */
    select?: SeparationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeparationRequest
     */
    omit?: SeparationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeparationRequestInclude<ExtArgs> | null
    where?: SeparationRequestWhereInput
    orderBy?: SeparationRequestOrderByWithRelationInput | SeparationRequestOrderByWithRelationInput[]
    cursor?: SeparationRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SeparationRequestScalarFieldEnum | SeparationRequestScalarFieldEnum[]
  }

  /**
   * User.submittedSeparations
   */
  export type User$submittedSeparationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeparationRequest
     */
    select?: SeparationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeparationRequest
     */
    omit?: SeparationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeparationRequestInclude<ExtArgs> | null
    where?: SeparationRequestWhereInput
    orderBy?: SeparationRequestOrderByWithRelationInput | SeparationRequestOrderByWithRelationInput[]
    cursor?: SeparationRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SeparationRequestScalarFieldEnum | SeparationRequestScalarFieldEnum[]
  }

  /**
   * User.reviewedServiceExtensions
   */
  export type User$reviewedServiceExtensionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceExtensionRequest
     */
    select?: ServiceExtensionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceExtensionRequest
     */
    omit?: ServiceExtensionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceExtensionRequestInclude<ExtArgs> | null
    where?: ServiceExtensionRequestWhereInput
    orderBy?: ServiceExtensionRequestOrderByWithRelationInput | ServiceExtensionRequestOrderByWithRelationInput[]
    cursor?: ServiceExtensionRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceExtensionRequestScalarFieldEnum | ServiceExtensionRequestScalarFieldEnum[]
  }

  /**
   * User.submittedServiceExtensions
   */
  export type User$submittedServiceExtensionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceExtensionRequest
     */
    select?: ServiceExtensionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceExtensionRequest
     */
    omit?: ServiceExtensionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceExtensionRequestInclude<ExtArgs> | null
    where?: ServiceExtensionRequestWhereInput
    orderBy?: ServiceExtensionRequestOrderByWithRelationInput | ServiceExtensionRequestOrderByWithRelationInput[]
    cursor?: ServiceExtensionRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceExtensionRequestScalarFieldEnum | ServiceExtensionRequestScalarFieldEnum[]
  }

  /**
   * User.employee
   */
  export type User$employeeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employee
     */
    select?: EmployeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employee
     */
    omit?: EmployeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeInclude<ExtArgs> | null
    where?: EmployeeWhereInput
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Institution
   */

  export type AggregateInstitution = {
    _count: InstitutionCountAggregateOutputType | null
    _min: InstitutionMinAggregateOutputType | null
    _max: InstitutionMaxAggregateOutputType | null
  }

  export type InstitutionMinAggregateOutputType = {
    id: string | null
    name: string | null
  }

  export type InstitutionMaxAggregateOutputType = {
    id: string | null
    name: string | null
  }

  export type InstitutionCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type InstitutionMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type InstitutionMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type InstitutionCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type InstitutionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Institution to aggregate.
     */
    where?: InstitutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Institutions to fetch.
     */
    orderBy?: InstitutionOrderByWithRelationInput | InstitutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InstitutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Institutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Institutions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Institutions
    **/
    _count?: true | InstitutionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InstitutionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InstitutionMaxAggregateInputType
  }

  export type GetInstitutionAggregateType<T extends InstitutionAggregateArgs> = {
        [P in keyof T & keyof AggregateInstitution]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInstitution[P]>
      : GetScalarType<T[P], AggregateInstitution[P]>
  }




  export type InstitutionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InstitutionWhereInput
    orderBy?: InstitutionOrderByWithAggregationInput | InstitutionOrderByWithAggregationInput[]
    by: InstitutionScalarFieldEnum[] | InstitutionScalarFieldEnum
    having?: InstitutionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InstitutionCountAggregateInputType | true
    _min?: InstitutionMinAggregateInputType
    _max?: InstitutionMaxAggregateInputType
  }

  export type InstitutionGroupByOutputType = {
    id: string
    name: string
    _count: InstitutionCountAggregateOutputType | null
    _min: InstitutionMinAggregateOutputType | null
    _max: InstitutionMaxAggregateOutputType | null
  }

  type GetInstitutionGroupByPayload<T extends InstitutionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InstitutionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InstitutionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InstitutionGroupByOutputType[P]>
            : GetScalarType<T[P], InstitutionGroupByOutputType[P]>
        }
      >
    >


  export type InstitutionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    employees?: boolean | Institution$employeesArgs<ExtArgs>
    users?: boolean | Institution$usersArgs<ExtArgs>
    _count?: boolean | InstitutionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["institution"]>

  export type InstitutionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["institution"]>

  export type InstitutionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["institution"]>

  export type InstitutionSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type InstitutionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["institution"]>
  export type InstitutionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employees?: boolean | Institution$employeesArgs<ExtArgs>
    users?: boolean | Institution$usersArgs<ExtArgs>
    _count?: boolean | InstitutionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type InstitutionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type InstitutionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $InstitutionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Institution"
    objects: {
      employees: Prisma.$EmployeePayload<ExtArgs>[]
      users: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
    }, ExtArgs["result"]["institution"]>
    composites: {}
  }

  type InstitutionGetPayload<S extends boolean | null | undefined | InstitutionDefaultArgs> = $Result.GetResult<Prisma.$InstitutionPayload, S>

  type InstitutionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InstitutionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InstitutionCountAggregateInputType | true
    }

  export interface InstitutionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Institution'], meta: { name: 'Institution' } }
    /**
     * Find zero or one Institution that matches the filter.
     * @param {InstitutionFindUniqueArgs} args - Arguments to find a Institution
     * @example
     * // Get one Institution
     * const institution = await prisma.institution.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InstitutionFindUniqueArgs>(args: SelectSubset<T, InstitutionFindUniqueArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Institution that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InstitutionFindUniqueOrThrowArgs} args - Arguments to find a Institution
     * @example
     * // Get one Institution
     * const institution = await prisma.institution.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InstitutionFindUniqueOrThrowArgs>(args: SelectSubset<T, InstitutionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Institution that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitutionFindFirstArgs} args - Arguments to find a Institution
     * @example
     * // Get one Institution
     * const institution = await prisma.institution.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InstitutionFindFirstArgs>(args?: SelectSubset<T, InstitutionFindFirstArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Institution that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitutionFindFirstOrThrowArgs} args - Arguments to find a Institution
     * @example
     * // Get one Institution
     * const institution = await prisma.institution.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InstitutionFindFirstOrThrowArgs>(args?: SelectSubset<T, InstitutionFindFirstOrThrowArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Institutions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitutionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Institutions
     * const institutions = await prisma.institution.findMany()
     * 
     * // Get first 10 Institutions
     * const institutions = await prisma.institution.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const institutionWithIdOnly = await prisma.institution.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InstitutionFindManyArgs>(args?: SelectSubset<T, InstitutionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Institution.
     * @param {InstitutionCreateArgs} args - Arguments to create a Institution.
     * @example
     * // Create one Institution
     * const Institution = await prisma.institution.create({
     *   data: {
     *     // ... data to create a Institution
     *   }
     * })
     * 
     */
    create<T extends InstitutionCreateArgs>(args: SelectSubset<T, InstitutionCreateArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Institutions.
     * @param {InstitutionCreateManyArgs} args - Arguments to create many Institutions.
     * @example
     * // Create many Institutions
     * const institution = await prisma.institution.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InstitutionCreateManyArgs>(args?: SelectSubset<T, InstitutionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Institutions and returns the data saved in the database.
     * @param {InstitutionCreateManyAndReturnArgs} args - Arguments to create many Institutions.
     * @example
     * // Create many Institutions
     * const institution = await prisma.institution.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Institutions and only return the `id`
     * const institutionWithIdOnly = await prisma.institution.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InstitutionCreateManyAndReturnArgs>(args?: SelectSubset<T, InstitutionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Institution.
     * @param {InstitutionDeleteArgs} args - Arguments to delete one Institution.
     * @example
     * // Delete one Institution
     * const Institution = await prisma.institution.delete({
     *   where: {
     *     // ... filter to delete one Institution
     *   }
     * })
     * 
     */
    delete<T extends InstitutionDeleteArgs>(args: SelectSubset<T, InstitutionDeleteArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Institution.
     * @param {InstitutionUpdateArgs} args - Arguments to update one Institution.
     * @example
     * // Update one Institution
     * const institution = await prisma.institution.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InstitutionUpdateArgs>(args: SelectSubset<T, InstitutionUpdateArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Institutions.
     * @param {InstitutionDeleteManyArgs} args - Arguments to filter Institutions to delete.
     * @example
     * // Delete a few Institutions
     * const { count } = await prisma.institution.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InstitutionDeleteManyArgs>(args?: SelectSubset<T, InstitutionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Institutions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitutionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Institutions
     * const institution = await prisma.institution.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InstitutionUpdateManyArgs>(args: SelectSubset<T, InstitutionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Institutions and returns the data updated in the database.
     * @param {InstitutionUpdateManyAndReturnArgs} args - Arguments to update many Institutions.
     * @example
     * // Update many Institutions
     * const institution = await prisma.institution.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Institutions and only return the `id`
     * const institutionWithIdOnly = await prisma.institution.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InstitutionUpdateManyAndReturnArgs>(args: SelectSubset<T, InstitutionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Institution.
     * @param {InstitutionUpsertArgs} args - Arguments to update or create a Institution.
     * @example
     * // Update or create a Institution
     * const institution = await prisma.institution.upsert({
     *   create: {
     *     // ... data to create a Institution
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Institution we want to update
     *   }
     * })
     */
    upsert<T extends InstitutionUpsertArgs>(args: SelectSubset<T, InstitutionUpsertArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Institutions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitutionCountArgs} args - Arguments to filter Institutions to count.
     * @example
     * // Count the number of Institutions
     * const count = await prisma.institution.count({
     *   where: {
     *     // ... the filter for the Institutions we want to count
     *   }
     * })
    **/
    count<T extends InstitutionCountArgs>(
      args?: Subset<T, InstitutionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InstitutionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Institution.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitutionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InstitutionAggregateArgs>(args: Subset<T, InstitutionAggregateArgs>): Prisma.PrismaPromise<GetInstitutionAggregateType<T>>

    /**
     * Group by Institution.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitutionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InstitutionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InstitutionGroupByArgs['orderBy'] }
        : { orderBy?: InstitutionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InstitutionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInstitutionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Institution model
   */
  readonly fields: InstitutionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Institution.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InstitutionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employees<T extends Institution$employeesArgs<ExtArgs> = {}>(args?: Subset<T, Institution$employeesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends Institution$usersArgs<ExtArgs> = {}>(args?: Subset<T, Institution$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Institution model
   */
  interface InstitutionFieldRefs {
    readonly id: FieldRef<"Institution", 'String'>
    readonly name: FieldRef<"Institution", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Institution findUnique
   */
  export type InstitutionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Institution
     */
    omit?: InstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * Filter, which Institution to fetch.
     */
    where: InstitutionWhereUniqueInput
  }

  /**
   * Institution findUniqueOrThrow
   */
  export type InstitutionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Institution
     */
    omit?: InstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * Filter, which Institution to fetch.
     */
    where: InstitutionWhereUniqueInput
  }

  /**
   * Institution findFirst
   */
  export type InstitutionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Institution
     */
    omit?: InstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * Filter, which Institution to fetch.
     */
    where?: InstitutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Institutions to fetch.
     */
    orderBy?: InstitutionOrderByWithRelationInput | InstitutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Institutions.
     */
    cursor?: InstitutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Institutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Institutions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Institutions.
     */
    distinct?: InstitutionScalarFieldEnum | InstitutionScalarFieldEnum[]
  }

  /**
   * Institution findFirstOrThrow
   */
  export type InstitutionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Institution
     */
    omit?: InstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * Filter, which Institution to fetch.
     */
    where?: InstitutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Institutions to fetch.
     */
    orderBy?: InstitutionOrderByWithRelationInput | InstitutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Institutions.
     */
    cursor?: InstitutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Institutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Institutions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Institutions.
     */
    distinct?: InstitutionScalarFieldEnum | InstitutionScalarFieldEnum[]
  }

  /**
   * Institution findMany
   */
  export type InstitutionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Institution
     */
    omit?: InstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * Filter, which Institutions to fetch.
     */
    where?: InstitutionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Institutions to fetch.
     */
    orderBy?: InstitutionOrderByWithRelationInput | InstitutionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Institutions.
     */
    cursor?: InstitutionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Institutions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Institutions.
     */
    skip?: number
    distinct?: InstitutionScalarFieldEnum | InstitutionScalarFieldEnum[]
  }

  /**
   * Institution create
   */
  export type InstitutionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Institution
     */
    omit?: InstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * The data needed to create a Institution.
     */
    data: XOR<InstitutionCreateInput, InstitutionUncheckedCreateInput>
  }

  /**
   * Institution createMany
   */
  export type InstitutionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Institutions.
     */
    data: InstitutionCreateManyInput | InstitutionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Institution createManyAndReturn
   */
  export type InstitutionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Institution
     */
    omit?: InstitutionOmit<ExtArgs> | null
    /**
     * The data used to create many Institutions.
     */
    data: InstitutionCreateManyInput | InstitutionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Institution update
   */
  export type InstitutionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Institution
     */
    omit?: InstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * The data needed to update a Institution.
     */
    data: XOR<InstitutionUpdateInput, InstitutionUncheckedUpdateInput>
    /**
     * Choose, which Institution to update.
     */
    where: InstitutionWhereUniqueInput
  }

  /**
   * Institution updateMany
   */
  export type InstitutionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Institutions.
     */
    data: XOR<InstitutionUpdateManyMutationInput, InstitutionUncheckedUpdateManyInput>
    /**
     * Filter which Institutions to update
     */
    where?: InstitutionWhereInput
    /**
     * Limit how many Institutions to update.
     */
    limit?: number
  }

  /**
   * Institution updateManyAndReturn
   */
  export type InstitutionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Institution
     */
    omit?: InstitutionOmit<ExtArgs> | null
    /**
     * The data used to update Institutions.
     */
    data: XOR<InstitutionUpdateManyMutationInput, InstitutionUncheckedUpdateManyInput>
    /**
     * Filter which Institutions to update
     */
    where?: InstitutionWhereInput
    /**
     * Limit how many Institutions to update.
     */
    limit?: number
  }

  /**
   * Institution upsert
   */
  export type InstitutionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Institution
     */
    omit?: InstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * The filter to search for the Institution to update in case it exists.
     */
    where: InstitutionWhereUniqueInput
    /**
     * In case the Institution found by the `where` argument doesn't exist, create a new Institution with this data.
     */
    create: XOR<InstitutionCreateInput, InstitutionUncheckedCreateInput>
    /**
     * In case the Institution was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InstitutionUpdateInput, InstitutionUncheckedUpdateInput>
  }

  /**
   * Institution delete
   */
  export type InstitutionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Institution
     */
    omit?: InstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
    /**
     * Filter which Institution to delete.
     */
    where: InstitutionWhereUniqueInput
  }

  /**
   * Institution deleteMany
   */
  export type InstitutionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Institutions to delete
     */
    where?: InstitutionWhereInput
    /**
     * Limit how many Institutions to delete.
     */
    limit?: number
  }

  /**
   * Institution.employees
   */
  export type Institution$employeesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employee
     */
    select?: EmployeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employee
     */
    omit?: EmployeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeInclude<ExtArgs> | null
    where?: EmployeeWhereInput
    orderBy?: EmployeeOrderByWithRelationInput | EmployeeOrderByWithRelationInput[]
    cursor?: EmployeeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmployeeScalarFieldEnum | EmployeeScalarFieldEnum[]
  }

  /**
   * Institution.users
   */
  export type Institution$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Institution without action
   */
  export type InstitutionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Institution
     */
    select?: InstitutionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Institution
     */
    omit?: InstitutionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitutionInclude<ExtArgs> | null
  }


  /**
   * Model Employee
   */

  export type AggregateEmployee = {
    _count: EmployeeCountAggregateOutputType | null
    _min: EmployeeMinAggregateOutputType | null
    _max: EmployeeMaxAggregateOutputType | null
  }

  export type EmployeeMinAggregateOutputType = {
    id: string | null
    employeeEntityId: string | null
    name: string | null
    gender: string | null
    profileImageUrl: string | null
    dateOfBirth: Date | null
    placeOfBirth: string | null
    region: string | null
    countryOfBirth: string | null
    zanId: string | null
    phoneNumber: string | null
    contactAddress: string | null
    zssfNumber: string | null
    payrollNumber: string | null
    cadre: string | null
    salaryScale: string | null
    ministry: string | null
    department: string | null
    appointmentType: string | null
    contractType: string | null
    recentTitleDate: Date | null
    currentReportingOffice: string | null
    currentWorkplace: string | null
    employmentDate: Date | null
    confirmationDate: Date | null
    retirementDate: Date | null
    status: string | null
    ardhilHaliUrl: string | null
    confirmationLetterUrl: string | null
    jobContractUrl: string | null
    birthCertificateUrl: string | null
    institutionId: string | null
  }

  export type EmployeeMaxAggregateOutputType = {
    id: string | null
    employeeEntityId: string | null
    name: string | null
    gender: string | null
    profileImageUrl: string | null
    dateOfBirth: Date | null
    placeOfBirth: string | null
    region: string | null
    countryOfBirth: string | null
    zanId: string | null
    phoneNumber: string | null
    contactAddress: string | null
    zssfNumber: string | null
    payrollNumber: string | null
    cadre: string | null
    salaryScale: string | null
    ministry: string | null
    department: string | null
    appointmentType: string | null
    contractType: string | null
    recentTitleDate: Date | null
    currentReportingOffice: string | null
    currentWorkplace: string | null
    employmentDate: Date | null
    confirmationDate: Date | null
    retirementDate: Date | null
    status: string | null
    ardhilHaliUrl: string | null
    confirmationLetterUrl: string | null
    jobContractUrl: string | null
    birthCertificateUrl: string | null
    institutionId: string | null
  }

  export type EmployeeCountAggregateOutputType = {
    id: number
    employeeEntityId: number
    name: number
    gender: number
    profileImageUrl: number
    dateOfBirth: number
    placeOfBirth: number
    region: number
    countryOfBirth: number
    zanId: number
    phoneNumber: number
    contactAddress: number
    zssfNumber: number
    payrollNumber: number
    cadre: number
    salaryScale: number
    ministry: number
    department: number
    appointmentType: number
    contractType: number
    recentTitleDate: number
    currentReportingOffice: number
    currentWorkplace: number
    employmentDate: number
    confirmationDate: number
    retirementDate: number
    status: number
    ardhilHaliUrl: number
    confirmationLetterUrl: number
    jobContractUrl: number
    birthCertificateUrl: number
    institutionId: number
    _all: number
  }


  export type EmployeeMinAggregateInputType = {
    id?: true
    employeeEntityId?: true
    name?: true
    gender?: true
    profileImageUrl?: true
    dateOfBirth?: true
    placeOfBirth?: true
    region?: true
    countryOfBirth?: true
    zanId?: true
    phoneNumber?: true
    contactAddress?: true
    zssfNumber?: true
    payrollNumber?: true
    cadre?: true
    salaryScale?: true
    ministry?: true
    department?: true
    appointmentType?: true
    contractType?: true
    recentTitleDate?: true
    currentReportingOffice?: true
    currentWorkplace?: true
    employmentDate?: true
    confirmationDate?: true
    retirementDate?: true
    status?: true
    ardhilHaliUrl?: true
    confirmationLetterUrl?: true
    jobContractUrl?: true
    birthCertificateUrl?: true
    institutionId?: true
  }

  export type EmployeeMaxAggregateInputType = {
    id?: true
    employeeEntityId?: true
    name?: true
    gender?: true
    profileImageUrl?: true
    dateOfBirth?: true
    placeOfBirth?: true
    region?: true
    countryOfBirth?: true
    zanId?: true
    phoneNumber?: true
    contactAddress?: true
    zssfNumber?: true
    payrollNumber?: true
    cadre?: true
    salaryScale?: true
    ministry?: true
    department?: true
    appointmentType?: true
    contractType?: true
    recentTitleDate?: true
    currentReportingOffice?: true
    currentWorkplace?: true
    employmentDate?: true
    confirmationDate?: true
    retirementDate?: true
    status?: true
    ardhilHaliUrl?: true
    confirmationLetterUrl?: true
    jobContractUrl?: true
    birthCertificateUrl?: true
    institutionId?: true
  }

  export type EmployeeCountAggregateInputType = {
    id?: true
    employeeEntityId?: true
    name?: true
    gender?: true
    profileImageUrl?: true
    dateOfBirth?: true
    placeOfBirth?: true
    region?: true
    countryOfBirth?: true
    zanId?: true
    phoneNumber?: true
    contactAddress?: true
    zssfNumber?: true
    payrollNumber?: true
    cadre?: true
    salaryScale?: true
    ministry?: true
    department?: true
    appointmentType?: true
    contractType?: true
    recentTitleDate?: true
    currentReportingOffice?: true
    currentWorkplace?: true
    employmentDate?: true
    confirmationDate?: true
    retirementDate?: true
    status?: true
    ardhilHaliUrl?: true
    confirmationLetterUrl?: true
    jobContractUrl?: true
    birthCertificateUrl?: true
    institutionId?: true
    _all?: true
  }

  export type EmployeeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Employee to aggregate.
     */
    where?: EmployeeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Employees to fetch.
     */
    orderBy?: EmployeeOrderByWithRelationInput | EmployeeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EmployeeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Employees
    **/
    _count?: true | EmployeeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmployeeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmployeeMaxAggregateInputType
  }

  export type GetEmployeeAggregateType<T extends EmployeeAggregateArgs> = {
        [P in keyof T & keyof AggregateEmployee]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmployee[P]>
      : GetScalarType<T[P], AggregateEmployee[P]>
  }




  export type EmployeeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmployeeWhereInput
    orderBy?: EmployeeOrderByWithAggregationInput | EmployeeOrderByWithAggregationInput[]
    by: EmployeeScalarFieldEnum[] | EmployeeScalarFieldEnum
    having?: EmployeeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmployeeCountAggregateInputType | true
    _min?: EmployeeMinAggregateInputType
    _max?: EmployeeMaxAggregateInputType
  }

  export type EmployeeGroupByOutputType = {
    id: string
    employeeEntityId: string | null
    name: string
    gender: string
    profileImageUrl: string | null
    dateOfBirth: Date | null
    placeOfBirth: string | null
    region: string | null
    countryOfBirth: string | null
    zanId: string
    phoneNumber: string | null
    contactAddress: string | null
    zssfNumber: string | null
    payrollNumber: string | null
    cadre: string | null
    salaryScale: string | null
    ministry: string | null
    department: string | null
    appointmentType: string | null
    contractType: string | null
    recentTitleDate: Date | null
    currentReportingOffice: string | null
    currentWorkplace: string | null
    employmentDate: Date | null
    confirmationDate: Date | null
    retirementDate: Date | null
    status: string | null
    ardhilHaliUrl: string | null
    confirmationLetterUrl: string | null
    jobContractUrl: string | null
    birthCertificateUrl: string | null
    institutionId: string
    _count: EmployeeCountAggregateOutputType | null
    _min: EmployeeMinAggregateOutputType | null
    _max: EmployeeMaxAggregateOutputType | null
  }

  type GetEmployeeGroupByPayload<T extends EmployeeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmployeeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmployeeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmployeeGroupByOutputType[P]>
            : GetScalarType<T[P], EmployeeGroupByOutputType[P]>
        }
      >
    >


  export type EmployeeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employeeEntityId?: boolean
    name?: boolean
    gender?: boolean
    profileImageUrl?: boolean
    dateOfBirth?: boolean
    placeOfBirth?: boolean
    region?: boolean
    countryOfBirth?: boolean
    zanId?: boolean
    phoneNumber?: boolean
    contactAddress?: boolean
    zssfNumber?: boolean
    payrollNumber?: boolean
    cadre?: boolean
    salaryScale?: boolean
    ministry?: boolean
    department?: boolean
    appointmentType?: boolean
    contractType?: boolean
    recentTitleDate?: boolean
    currentReportingOffice?: boolean
    currentWorkplace?: boolean
    employmentDate?: boolean
    confirmationDate?: boolean
    retirementDate?: boolean
    status?: boolean
    ardhilHaliUrl?: boolean
    confirmationLetterUrl?: boolean
    jobContractUrl?: boolean
    birthCertificateUrl?: boolean
    institutionId?: boolean
    cadreChangeRequests?: boolean | Employee$cadreChangeRequestsArgs<ExtArgs>
    confirmationRequests?: boolean | Employee$confirmationRequestsArgs<ExtArgs>
    institution?: boolean | InstitutionDefaultArgs<ExtArgs>
    certificates?: boolean | Employee$certificatesArgs<ExtArgs>
    lwopRequests?: boolean | Employee$lwopRequestsArgs<ExtArgs>
    promotionRequests?: boolean | Employee$promotionRequestsArgs<ExtArgs>
    resignationRequests?: boolean | Employee$resignationRequestsArgs<ExtArgs>
    retirementRequests?: boolean | Employee$retirementRequestsArgs<ExtArgs>
    separationRequests?: boolean | Employee$separationRequestsArgs<ExtArgs>
    serviceExtensionRequests?: boolean | Employee$serviceExtensionRequestsArgs<ExtArgs>
    user?: boolean | Employee$userArgs<ExtArgs>
    _count?: boolean | EmployeeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["employee"]>

  export type EmployeeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employeeEntityId?: boolean
    name?: boolean
    gender?: boolean
    profileImageUrl?: boolean
    dateOfBirth?: boolean
    placeOfBirth?: boolean
    region?: boolean
    countryOfBirth?: boolean
    zanId?: boolean
    phoneNumber?: boolean
    contactAddress?: boolean
    zssfNumber?: boolean
    payrollNumber?: boolean
    cadre?: boolean
    salaryScale?: boolean
    ministry?: boolean
    department?: boolean
    appointmentType?: boolean
    contractType?: boolean
    recentTitleDate?: boolean
    currentReportingOffice?: boolean
    currentWorkplace?: boolean
    employmentDate?: boolean
    confirmationDate?: boolean
    retirementDate?: boolean
    status?: boolean
    ardhilHaliUrl?: boolean
    confirmationLetterUrl?: boolean
    jobContractUrl?: boolean
    birthCertificateUrl?: boolean
    institutionId?: boolean
    institution?: boolean | InstitutionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["employee"]>

  export type EmployeeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employeeEntityId?: boolean
    name?: boolean
    gender?: boolean
    profileImageUrl?: boolean
    dateOfBirth?: boolean
    placeOfBirth?: boolean
    region?: boolean
    countryOfBirth?: boolean
    zanId?: boolean
    phoneNumber?: boolean
    contactAddress?: boolean
    zssfNumber?: boolean
    payrollNumber?: boolean
    cadre?: boolean
    salaryScale?: boolean
    ministry?: boolean
    department?: boolean
    appointmentType?: boolean
    contractType?: boolean
    recentTitleDate?: boolean
    currentReportingOffice?: boolean
    currentWorkplace?: boolean
    employmentDate?: boolean
    confirmationDate?: boolean
    retirementDate?: boolean
    status?: boolean
    ardhilHaliUrl?: boolean
    confirmationLetterUrl?: boolean
    jobContractUrl?: boolean
    birthCertificateUrl?: boolean
    institutionId?: boolean
    institution?: boolean | InstitutionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["employee"]>

  export type EmployeeSelectScalar = {
    id?: boolean
    employeeEntityId?: boolean
    name?: boolean
    gender?: boolean
    profileImageUrl?: boolean
    dateOfBirth?: boolean
    placeOfBirth?: boolean
    region?: boolean
    countryOfBirth?: boolean
    zanId?: boolean
    phoneNumber?: boolean
    contactAddress?: boolean
    zssfNumber?: boolean
    payrollNumber?: boolean
    cadre?: boolean
    salaryScale?: boolean
    ministry?: boolean
    department?: boolean
    appointmentType?: boolean
    contractType?: boolean
    recentTitleDate?: boolean
    currentReportingOffice?: boolean
    currentWorkplace?: boolean
    employmentDate?: boolean
    confirmationDate?: boolean
    retirementDate?: boolean
    status?: boolean
    ardhilHaliUrl?: boolean
    confirmationLetterUrl?: boolean
    jobContractUrl?: boolean
    birthCertificateUrl?: boolean
    institutionId?: boolean
  }

  export type EmployeeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "employeeEntityId" | "name" | "gender" | "profileImageUrl" | "dateOfBirth" | "placeOfBirth" | "region" | "countryOfBirth" | "zanId" | "phoneNumber" | "contactAddress" | "zssfNumber" | "payrollNumber" | "cadre" | "salaryScale" | "ministry" | "department" | "appointmentType" | "contractType" | "recentTitleDate" | "currentReportingOffice" | "currentWorkplace" | "employmentDate" | "confirmationDate" | "retirementDate" | "status" | "ardhilHaliUrl" | "confirmationLetterUrl" | "jobContractUrl" | "birthCertificateUrl" | "institutionId", ExtArgs["result"]["employee"]>
  export type EmployeeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cadreChangeRequests?: boolean | Employee$cadreChangeRequestsArgs<ExtArgs>
    confirmationRequests?: boolean | Employee$confirmationRequestsArgs<ExtArgs>
    institution?: boolean | InstitutionDefaultArgs<ExtArgs>
    certificates?: boolean | Employee$certificatesArgs<ExtArgs>
    lwopRequests?: boolean | Employee$lwopRequestsArgs<ExtArgs>
    promotionRequests?: boolean | Employee$promotionRequestsArgs<ExtArgs>
    resignationRequests?: boolean | Employee$resignationRequestsArgs<ExtArgs>
    retirementRequests?: boolean | Employee$retirementRequestsArgs<ExtArgs>
    separationRequests?: boolean | Employee$separationRequestsArgs<ExtArgs>
    serviceExtensionRequests?: boolean | Employee$serviceExtensionRequestsArgs<ExtArgs>
    user?: boolean | Employee$userArgs<ExtArgs>
    _count?: boolean | EmployeeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EmployeeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    institution?: boolean | InstitutionDefaultArgs<ExtArgs>
  }
  export type EmployeeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    institution?: boolean | InstitutionDefaultArgs<ExtArgs>
  }

  export type $EmployeePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Employee"
    objects: {
      cadreChangeRequests: Prisma.$CadreChangeRequestPayload<ExtArgs>[]
      confirmationRequests: Prisma.$ConfirmationRequestPayload<ExtArgs>[]
      institution: Prisma.$InstitutionPayload<ExtArgs>
      certificates: Prisma.$EmployeeCertificatePayload<ExtArgs>[]
      lwopRequests: Prisma.$LwopRequestPayload<ExtArgs>[]
      promotionRequests: Prisma.$PromotionRequestPayload<ExtArgs>[]
      resignationRequests: Prisma.$ResignationRequestPayload<ExtArgs>[]
      retirementRequests: Prisma.$RetirementRequestPayload<ExtArgs>[]
      separationRequests: Prisma.$SeparationRequestPayload<ExtArgs>[]
      serviceExtensionRequests: Prisma.$ServiceExtensionRequestPayload<ExtArgs>[]
      user: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      employeeEntityId: string | null
      name: string
      gender: string
      profileImageUrl: string | null
      dateOfBirth: Date | null
      placeOfBirth: string | null
      region: string | null
      countryOfBirth: string | null
      zanId: string
      phoneNumber: string | null
      contactAddress: string | null
      zssfNumber: string | null
      payrollNumber: string | null
      cadre: string | null
      salaryScale: string | null
      ministry: string | null
      department: string | null
      appointmentType: string | null
      contractType: string | null
      recentTitleDate: Date | null
      currentReportingOffice: string | null
      currentWorkplace: string | null
      employmentDate: Date | null
      confirmationDate: Date | null
      retirementDate: Date | null
      status: string | null
      ardhilHaliUrl: string | null
      confirmationLetterUrl: string | null
      jobContractUrl: string | null
      birthCertificateUrl: string | null
      institutionId: string
    }, ExtArgs["result"]["employee"]>
    composites: {}
  }

  type EmployeeGetPayload<S extends boolean | null | undefined | EmployeeDefaultArgs> = $Result.GetResult<Prisma.$EmployeePayload, S>

  type EmployeeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EmployeeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmployeeCountAggregateInputType | true
    }

  export interface EmployeeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Employee'], meta: { name: 'Employee' } }
    /**
     * Find zero or one Employee that matches the filter.
     * @param {EmployeeFindUniqueArgs} args - Arguments to find a Employee
     * @example
     * // Get one Employee
     * const employee = await prisma.employee.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EmployeeFindUniqueArgs>(args: SelectSubset<T, EmployeeFindUniqueArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Employee that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EmployeeFindUniqueOrThrowArgs} args - Arguments to find a Employee
     * @example
     * // Get one Employee
     * const employee = await prisma.employee.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EmployeeFindUniqueOrThrowArgs>(args: SelectSubset<T, EmployeeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Employee that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployeeFindFirstArgs} args - Arguments to find a Employee
     * @example
     * // Get one Employee
     * const employee = await prisma.employee.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EmployeeFindFirstArgs>(args?: SelectSubset<T, EmployeeFindFirstArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Employee that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployeeFindFirstOrThrowArgs} args - Arguments to find a Employee
     * @example
     * // Get one Employee
     * const employee = await prisma.employee.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EmployeeFindFirstOrThrowArgs>(args?: SelectSubset<T, EmployeeFindFirstOrThrowArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Employees that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployeeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Employees
     * const employees = await prisma.employee.findMany()
     * 
     * // Get first 10 Employees
     * const employees = await prisma.employee.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const employeeWithIdOnly = await prisma.employee.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EmployeeFindManyArgs>(args?: SelectSubset<T, EmployeeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Employee.
     * @param {EmployeeCreateArgs} args - Arguments to create a Employee.
     * @example
     * // Create one Employee
     * const Employee = await prisma.employee.create({
     *   data: {
     *     // ... data to create a Employee
     *   }
     * })
     * 
     */
    create<T extends EmployeeCreateArgs>(args: SelectSubset<T, EmployeeCreateArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Employees.
     * @param {EmployeeCreateManyArgs} args - Arguments to create many Employees.
     * @example
     * // Create many Employees
     * const employee = await prisma.employee.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EmployeeCreateManyArgs>(args?: SelectSubset<T, EmployeeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Employees and returns the data saved in the database.
     * @param {EmployeeCreateManyAndReturnArgs} args - Arguments to create many Employees.
     * @example
     * // Create many Employees
     * const employee = await prisma.employee.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Employees and only return the `id`
     * const employeeWithIdOnly = await prisma.employee.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EmployeeCreateManyAndReturnArgs>(args?: SelectSubset<T, EmployeeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Employee.
     * @param {EmployeeDeleteArgs} args - Arguments to delete one Employee.
     * @example
     * // Delete one Employee
     * const Employee = await prisma.employee.delete({
     *   where: {
     *     // ... filter to delete one Employee
     *   }
     * })
     * 
     */
    delete<T extends EmployeeDeleteArgs>(args: SelectSubset<T, EmployeeDeleteArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Employee.
     * @param {EmployeeUpdateArgs} args - Arguments to update one Employee.
     * @example
     * // Update one Employee
     * const employee = await prisma.employee.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EmployeeUpdateArgs>(args: SelectSubset<T, EmployeeUpdateArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Employees.
     * @param {EmployeeDeleteManyArgs} args - Arguments to filter Employees to delete.
     * @example
     * // Delete a few Employees
     * const { count } = await prisma.employee.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EmployeeDeleteManyArgs>(args?: SelectSubset<T, EmployeeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployeeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Employees
     * const employee = await prisma.employee.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EmployeeUpdateManyArgs>(args: SelectSubset<T, EmployeeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Employees and returns the data updated in the database.
     * @param {EmployeeUpdateManyAndReturnArgs} args - Arguments to update many Employees.
     * @example
     * // Update many Employees
     * const employee = await prisma.employee.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Employees and only return the `id`
     * const employeeWithIdOnly = await prisma.employee.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EmployeeUpdateManyAndReturnArgs>(args: SelectSubset<T, EmployeeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Employee.
     * @param {EmployeeUpsertArgs} args - Arguments to update or create a Employee.
     * @example
     * // Update or create a Employee
     * const employee = await prisma.employee.upsert({
     *   create: {
     *     // ... data to create a Employee
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Employee we want to update
     *   }
     * })
     */
    upsert<T extends EmployeeUpsertArgs>(args: SelectSubset<T, EmployeeUpsertArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployeeCountArgs} args - Arguments to filter Employees to count.
     * @example
     * // Count the number of Employees
     * const count = await prisma.employee.count({
     *   where: {
     *     // ... the filter for the Employees we want to count
     *   }
     * })
    **/
    count<T extends EmployeeCountArgs>(
      args?: Subset<T, EmployeeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmployeeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Employee.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployeeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmployeeAggregateArgs>(args: Subset<T, EmployeeAggregateArgs>): Prisma.PrismaPromise<GetEmployeeAggregateType<T>>

    /**
     * Group by Employee.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployeeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EmployeeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EmployeeGroupByArgs['orderBy'] }
        : { orderBy?: EmployeeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EmployeeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmployeeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Employee model
   */
  readonly fields: EmployeeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Employee.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EmployeeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cadreChangeRequests<T extends Employee$cadreChangeRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Employee$cadreChangeRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CadreChangeRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    confirmationRequests<T extends Employee$confirmationRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Employee$confirmationRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfirmationRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    institution<T extends InstitutionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InstitutionDefaultArgs<ExtArgs>>): Prisma__InstitutionClient<$Result.GetResult<Prisma.$InstitutionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    certificates<T extends Employee$certificatesArgs<ExtArgs> = {}>(args?: Subset<T, Employee$certificatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmployeeCertificatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    lwopRequests<T extends Employee$lwopRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Employee$lwopRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LwopRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    promotionRequests<T extends Employee$promotionRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Employee$promotionRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    resignationRequests<T extends Employee$resignationRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Employee$resignationRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResignationRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    retirementRequests<T extends Employee$retirementRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Employee$retirementRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RetirementRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    separationRequests<T extends Employee$separationRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Employee$separationRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeparationRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    serviceExtensionRequests<T extends Employee$serviceExtensionRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Employee$serviceExtensionRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceExtensionRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user<T extends Employee$userArgs<ExtArgs> = {}>(args?: Subset<T, Employee$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Employee model
   */
  interface EmployeeFieldRefs {
    readonly id: FieldRef<"Employee", 'String'>
    readonly employeeEntityId: FieldRef<"Employee", 'String'>
    readonly name: FieldRef<"Employee", 'String'>
    readonly gender: FieldRef<"Employee", 'String'>
    readonly profileImageUrl: FieldRef<"Employee", 'String'>
    readonly dateOfBirth: FieldRef<"Employee", 'DateTime'>
    readonly placeOfBirth: FieldRef<"Employee", 'String'>
    readonly region: FieldRef<"Employee", 'String'>
    readonly countryOfBirth: FieldRef<"Employee", 'String'>
    readonly zanId: FieldRef<"Employee", 'String'>
    readonly phoneNumber: FieldRef<"Employee", 'String'>
    readonly contactAddress: FieldRef<"Employee", 'String'>
    readonly zssfNumber: FieldRef<"Employee", 'String'>
    readonly payrollNumber: FieldRef<"Employee", 'String'>
    readonly cadre: FieldRef<"Employee", 'String'>
    readonly salaryScale: FieldRef<"Employee", 'String'>
    readonly ministry: FieldRef<"Employee", 'String'>
    readonly department: FieldRef<"Employee", 'String'>
    readonly appointmentType: FieldRef<"Employee", 'String'>
    readonly contractType: FieldRef<"Employee", 'String'>
    readonly recentTitleDate: FieldRef<"Employee", 'DateTime'>
    readonly currentReportingOffice: FieldRef<"Employee", 'String'>
    readonly currentWorkplace: FieldRef<"Employee", 'String'>
    readonly employmentDate: FieldRef<"Employee", 'DateTime'>
    readonly confirmationDate: FieldRef<"Employee", 'DateTime'>
    readonly retirementDate: FieldRef<"Employee", 'DateTime'>
    readonly status: FieldRef<"Employee", 'String'>
    readonly ardhilHaliUrl: FieldRef<"Employee", 'String'>
    readonly confirmationLetterUrl: FieldRef<"Employee", 'String'>
    readonly jobContractUrl: FieldRef<"Employee", 'String'>
    readonly birthCertificateUrl: FieldRef<"Employee", 'String'>
    readonly institutionId: FieldRef<"Employee", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Employee findUnique
   */
  export type EmployeeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employee
     */
    select?: EmployeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employee
     */
    omit?: EmployeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeInclude<ExtArgs> | null
    /**
     * Filter, which Employee to fetch.
     */
    where: EmployeeWhereUniqueInput
  }

  /**
   * Employee findUniqueOrThrow
   */
  export type EmployeeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employee
     */
    select?: EmployeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employee
     */
    omit?: EmployeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeInclude<ExtArgs> | null
    /**
     * Filter, which Employee to fetch.
     */
    where: EmployeeWhereUniqueInput
  }

  /**
   * Employee findFirst
   */
  export type EmployeeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employee
     */
    select?: EmployeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employee
     */
    omit?: EmployeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeInclude<ExtArgs> | null
    /**
     * Filter, which Employee to fetch.
     */
    where?: EmployeeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Employees to fetch.
     */
    orderBy?: EmployeeOrderByWithRelationInput | EmployeeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Employees.
     */
    cursor?: EmployeeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Employees.
     */
    distinct?: EmployeeScalarFieldEnum | EmployeeScalarFieldEnum[]
  }

  /**
   * Employee findFirstOrThrow
   */
  export type EmployeeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employee
     */
    select?: EmployeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employee
     */
    omit?: EmployeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeInclude<ExtArgs> | null
    /**
     * Filter, which Employee to fetch.
     */
    where?: EmployeeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Employees to fetch.
     */
    orderBy?: EmployeeOrderByWithRelationInput | EmployeeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Employees.
     */
    cursor?: EmployeeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Employees.
     */
    distinct?: EmployeeScalarFieldEnum | EmployeeScalarFieldEnum[]
  }

  /**
   * Employee findMany
   */
  export type EmployeeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employee
     */
    select?: EmployeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employee
     */
    omit?: EmployeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeInclude<ExtArgs> | null
    /**
     * Filter, which Employees to fetch.
     */
    where?: EmployeeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Employees to fetch.
     */
    orderBy?: EmployeeOrderByWithRelationInput | EmployeeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Employees.
     */
    cursor?: EmployeeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Employees.
     */
    skip?: number
    distinct?: EmployeeScalarFieldEnum | EmployeeScalarFieldEnum[]
  }

  /**
   * Employee create
   */
  export type EmployeeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employee
     */
    select?: EmployeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employee
     */
    omit?: EmployeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeInclude<ExtArgs> | null
    /**
     * The data needed to create a Employee.
     */
    data: XOR<EmployeeCreateInput, EmployeeUncheckedCreateInput>
  }

  /**
   * Employee createMany
   */
  export type EmployeeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Employees.
     */
    data: EmployeeCreateManyInput | EmployeeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Employee createManyAndReturn
   */
  export type EmployeeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employee
     */
    select?: EmployeeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Employee
     */
    omit?: EmployeeOmit<ExtArgs> | null
    /**
     * The data used to create many Employees.
     */
    data: EmployeeCreateManyInput | EmployeeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Employee update
   */
  export type EmployeeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employee
     */
    select?: EmployeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employee
     */
    omit?: EmployeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeInclude<ExtArgs> | null
    /**
     * The data needed to update a Employee.
     */
    data: XOR<EmployeeUpdateInput, EmployeeUncheckedUpdateInput>
    /**
     * Choose, which Employee to update.
     */
    where: EmployeeWhereUniqueInput
  }

  /**
   * Employee updateMany
   */
  export type EmployeeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Employees.
     */
    data: XOR<EmployeeUpdateManyMutationInput, EmployeeUncheckedUpdateManyInput>
    /**
     * Filter which Employees to update
     */
    where?: EmployeeWhereInput
    /**
     * Limit how many Employees to update.
     */
    limit?: number
  }

  /**
   * Employee updateManyAndReturn
   */
  export type EmployeeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employee
     */
    select?: EmployeeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Employee
     */
    omit?: EmployeeOmit<ExtArgs> | null
    /**
     * The data used to update Employees.
     */
    data: XOR<EmployeeUpdateManyMutationInput, EmployeeUncheckedUpdateManyInput>
    /**
     * Filter which Employees to update
     */
    where?: EmployeeWhereInput
    /**
     * Limit how many Employees to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Employee upsert
   */
  export type EmployeeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employee
     */
    select?: EmployeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employee
     */
    omit?: EmployeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeInclude<ExtArgs> | null
    /**
     * The filter to search for the Employee to update in case it exists.
     */
    where: EmployeeWhereUniqueInput
    /**
     * In case the Employee found by the `where` argument doesn't exist, create a new Employee with this data.
     */
    create: XOR<EmployeeCreateInput, EmployeeUncheckedCreateInput>
    /**
     * In case the Employee was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EmployeeUpdateInput, EmployeeUncheckedUpdateInput>
  }

  /**
   * Employee delete
   */
  export type EmployeeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employee
     */
    select?: EmployeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employee
     */
    omit?: EmployeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeInclude<ExtArgs> | null
    /**
     * Filter which Employee to delete.
     */
    where: EmployeeWhereUniqueInput
  }

  /**
   * Employee deleteMany
   */
  export type EmployeeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Employees to delete
     */
    where?: EmployeeWhereInput
    /**
     * Limit how many Employees to delete.
     */
    limit?: number
  }

  /**
   * Employee.cadreChangeRequests
   */
  export type Employee$cadreChangeRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CadreChangeRequest
     */
    select?: CadreChangeRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CadreChangeRequest
     */
    omit?: CadreChangeRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CadreChangeRequestInclude<ExtArgs> | null
    where?: CadreChangeRequestWhereInput
    orderBy?: CadreChangeRequestOrderByWithRelationInput | CadreChangeRequestOrderByWithRelationInput[]
    cursor?: CadreChangeRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CadreChangeRequestScalarFieldEnum | CadreChangeRequestScalarFieldEnum[]
  }

  /**
   * Employee.confirmationRequests
   */
  export type Employee$confirmationRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfirmationRequest
     */
    select?: ConfirmationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfirmationRequest
     */
    omit?: ConfirmationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfirmationRequestInclude<ExtArgs> | null
    where?: ConfirmationRequestWhereInput
    orderBy?: ConfirmationRequestOrderByWithRelationInput | ConfirmationRequestOrderByWithRelationInput[]
    cursor?: ConfirmationRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConfirmationRequestScalarFieldEnum | ConfirmationRequestScalarFieldEnum[]
  }

  /**
   * Employee.certificates
   */
  export type Employee$certificatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployeeCertificate
     */
    select?: EmployeeCertificateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmployeeCertificate
     */
    omit?: EmployeeCertificateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeCertificateInclude<ExtArgs> | null
    where?: EmployeeCertificateWhereInput
    orderBy?: EmployeeCertificateOrderByWithRelationInput | EmployeeCertificateOrderByWithRelationInput[]
    cursor?: EmployeeCertificateWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EmployeeCertificateScalarFieldEnum | EmployeeCertificateScalarFieldEnum[]
  }

  /**
   * Employee.lwopRequests
   */
  export type Employee$lwopRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LwopRequest
     */
    select?: LwopRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LwopRequest
     */
    omit?: LwopRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LwopRequestInclude<ExtArgs> | null
    where?: LwopRequestWhereInput
    orderBy?: LwopRequestOrderByWithRelationInput | LwopRequestOrderByWithRelationInput[]
    cursor?: LwopRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LwopRequestScalarFieldEnum | LwopRequestScalarFieldEnum[]
  }

  /**
   * Employee.promotionRequests
   */
  export type Employee$promotionRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionRequest
     */
    select?: PromotionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionRequest
     */
    omit?: PromotionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionRequestInclude<ExtArgs> | null
    where?: PromotionRequestWhereInput
    orderBy?: PromotionRequestOrderByWithRelationInput | PromotionRequestOrderByWithRelationInput[]
    cursor?: PromotionRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionRequestScalarFieldEnum | PromotionRequestScalarFieldEnum[]
  }

  /**
   * Employee.resignationRequests
   */
  export type Employee$resignationRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResignationRequest
     */
    select?: ResignationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResignationRequest
     */
    omit?: ResignationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResignationRequestInclude<ExtArgs> | null
    where?: ResignationRequestWhereInput
    orderBy?: ResignationRequestOrderByWithRelationInput | ResignationRequestOrderByWithRelationInput[]
    cursor?: ResignationRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ResignationRequestScalarFieldEnum | ResignationRequestScalarFieldEnum[]
  }

  /**
   * Employee.retirementRequests
   */
  export type Employee$retirementRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RetirementRequest
     */
    select?: RetirementRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RetirementRequest
     */
    omit?: RetirementRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RetirementRequestInclude<ExtArgs> | null
    where?: RetirementRequestWhereInput
    orderBy?: RetirementRequestOrderByWithRelationInput | RetirementRequestOrderByWithRelationInput[]
    cursor?: RetirementRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RetirementRequestScalarFieldEnum | RetirementRequestScalarFieldEnum[]
  }

  /**
   * Employee.separationRequests
   */
  export type Employee$separationRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeparationRequest
     */
    select?: SeparationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeparationRequest
     */
    omit?: SeparationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeparationRequestInclude<ExtArgs> | null
    where?: SeparationRequestWhereInput
    orderBy?: SeparationRequestOrderByWithRelationInput | SeparationRequestOrderByWithRelationInput[]
    cursor?: SeparationRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SeparationRequestScalarFieldEnum | SeparationRequestScalarFieldEnum[]
  }

  /**
   * Employee.serviceExtensionRequests
   */
  export type Employee$serviceExtensionRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceExtensionRequest
     */
    select?: ServiceExtensionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceExtensionRequest
     */
    omit?: ServiceExtensionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceExtensionRequestInclude<ExtArgs> | null
    where?: ServiceExtensionRequestWhereInput
    orderBy?: ServiceExtensionRequestOrderByWithRelationInput | ServiceExtensionRequestOrderByWithRelationInput[]
    cursor?: ServiceExtensionRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceExtensionRequestScalarFieldEnum | ServiceExtensionRequestScalarFieldEnum[]
  }

  /**
   * Employee.user
   */
  export type Employee$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Employee without action
   */
  export type EmployeeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employee
     */
    select?: EmployeeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employee
     */
    omit?: EmployeeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeInclude<ExtArgs> | null
  }


  /**
   * Model EmployeeCertificate
   */

  export type AggregateEmployeeCertificate = {
    _count: EmployeeCertificateCountAggregateOutputType | null
    _min: EmployeeCertificateMinAggregateOutputType | null
    _max: EmployeeCertificateMaxAggregateOutputType | null
  }

  export type EmployeeCertificateMinAggregateOutputType = {
    id: string | null
    type: string | null
    name: string | null
    url: string | null
    employeeId: string | null
  }

  export type EmployeeCertificateMaxAggregateOutputType = {
    id: string | null
    type: string | null
    name: string | null
    url: string | null
    employeeId: string | null
  }

  export type EmployeeCertificateCountAggregateOutputType = {
    id: number
    type: number
    name: number
    url: number
    employeeId: number
    _all: number
  }


  export type EmployeeCertificateMinAggregateInputType = {
    id?: true
    type?: true
    name?: true
    url?: true
    employeeId?: true
  }

  export type EmployeeCertificateMaxAggregateInputType = {
    id?: true
    type?: true
    name?: true
    url?: true
    employeeId?: true
  }

  export type EmployeeCertificateCountAggregateInputType = {
    id?: true
    type?: true
    name?: true
    url?: true
    employeeId?: true
    _all?: true
  }

  export type EmployeeCertificateAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EmployeeCertificate to aggregate.
     */
    where?: EmployeeCertificateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EmployeeCertificates to fetch.
     */
    orderBy?: EmployeeCertificateOrderByWithRelationInput | EmployeeCertificateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EmployeeCertificateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EmployeeCertificates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EmployeeCertificates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EmployeeCertificates
    **/
    _count?: true | EmployeeCertificateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmployeeCertificateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmployeeCertificateMaxAggregateInputType
  }

  export type GetEmployeeCertificateAggregateType<T extends EmployeeCertificateAggregateArgs> = {
        [P in keyof T & keyof AggregateEmployeeCertificate]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmployeeCertificate[P]>
      : GetScalarType<T[P], AggregateEmployeeCertificate[P]>
  }




  export type EmployeeCertificateGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmployeeCertificateWhereInput
    orderBy?: EmployeeCertificateOrderByWithAggregationInput | EmployeeCertificateOrderByWithAggregationInput[]
    by: EmployeeCertificateScalarFieldEnum[] | EmployeeCertificateScalarFieldEnum
    having?: EmployeeCertificateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmployeeCertificateCountAggregateInputType | true
    _min?: EmployeeCertificateMinAggregateInputType
    _max?: EmployeeCertificateMaxAggregateInputType
  }

  export type EmployeeCertificateGroupByOutputType = {
    id: string
    type: string
    name: string
    url: string | null
    employeeId: string
    _count: EmployeeCertificateCountAggregateOutputType | null
    _min: EmployeeCertificateMinAggregateOutputType | null
    _max: EmployeeCertificateMaxAggregateOutputType | null
  }

  type GetEmployeeCertificateGroupByPayload<T extends EmployeeCertificateGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmployeeCertificateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmployeeCertificateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmployeeCertificateGroupByOutputType[P]>
            : GetScalarType<T[P], EmployeeCertificateGroupByOutputType[P]>
        }
      >
    >


  export type EmployeeCertificateSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    name?: boolean
    url?: boolean
    employeeId?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["employeeCertificate"]>

  export type EmployeeCertificateSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    name?: boolean
    url?: boolean
    employeeId?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["employeeCertificate"]>

  export type EmployeeCertificateSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    name?: boolean
    url?: boolean
    employeeId?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["employeeCertificate"]>

  export type EmployeeCertificateSelectScalar = {
    id?: boolean
    type?: boolean
    name?: boolean
    url?: boolean
    employeeId?: boolean
  }

  export type EmployeeCertificateOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "name" | "url" | "employeeId", ExtArgs["result"]["employeeCertificate"]>
  export type EmployeeCertificateInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
  }
  export type EmployeeCertificateIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
  }
  export type EmployeeCertificateIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
  }

  export type $EmployeeCertificatePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EmployeeCertificate"
    objects: {
      employee: Prisma.$EmployeePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      type: string
      name: string
      url: string | null
      employeeId: string
    }, ExtArgs["result"]["employeeCertificate"]>
    composites: {}
  }

  type EmployeeCertificateGetPayload<S extends boolean | null | undefined | EmployeeCertificateDefaultArgs> = $Result.GetResult<Prisma.$EmployeeCertificatePayload, S>

  type EmployeeCertificateCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EmployeeCertificateFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmployeeCertificateCountAggregateInputType | true
    }

  export interface EmployeeCertificateDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EmployeeCertificate'], meta: { name: 'EmployeeCertificate' } }
    /**
     * Find zero or one EmployeeCertificate that matches the filter.
     * @param {EmployeeCertificateFindUniqueArgs} args - Arguments to find a EmployeeCertificate
     * @example
     * // Get one EmployeeCertificate
     * const employeeCertificate = await prisma.employeeCertificate.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EmployeeCertificateFindUniqueArgs>(args: SelectSubset<T, EmployeeCertificateFindUniqueArgs<ExtArgs>>): Prisma__EmployeeCertificateClient<$Result.GetResult<Prisma.$EmployeeCertificatePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EmployeeCertificate that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EmployeeCertificateFindUniqueOrThrowArgs} args - Arguments to find a EmployeeCertificate
     * @example
     * // Get one EmployeeCertificate
     * const employeeCertificate = await prisma.employeeCertificate.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EmployeeCertificateFindUniqueOrThrowArgs>(args: SelectSubset<T, EmployeeCertificateFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EmployeeCertificateClient<$Result.GetResult<Prisma.$EmployeeCertificatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EmployeeCertificate that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployeeCertificateFindFirstArgs} args - Arguments to find a EmployeeCertificate
     * @example
     * // Get one EmployeeCertificate
     * const employeeCertificate = await prisma.employeeCertificate.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EmployeeCertificateFindFirstArgs>(args?: SelectSubset<T, EmployeeCertificateFindFirstArgs<ExtArgs>>): Prisma__EmployeeCertificateClient<$Result.GetResult<Prisma.$EmployeeCertificatePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EmployeeCertificate that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployeeCertificateFindFirstOrThrowArgs} args - Arguments to find a EmployeeCertificate
     * @example
     * // Get one EmployeeCertificate
     * const employeeCertificate = await prisma.employeeCertificate.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EmployeeCertificateFindFirstOrThrowArgs>(args?: SelectSubset<T, EmployeeCertificateFindFirstOrThrowArgs<ExtArgs>>): Prisma__EmployeeCertificateClient<$Result.GetResult<Prisma.$EmployeeCertificatePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EmployeeCertificates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployeeCertificateFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EmployeeCertificates
     * const employeeCertificates = await prisma.employeeCertificate.findMany()
     * 
     * // Get first 10 EmployeeCertificates
     * const employeeCertificates = await prisma.employeeCertificate.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const employeeCertificateWithIdOnly = await prisma.employeeCertificate.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EmployeeCertificateFindManyArgs>(args?: SelectSubset<T, EmployeeCertificateFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmployeeCertificatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EmployeeCertificate.
     * @param {EmployeeCertificateCreateArgs} args - Arguments to create a EmployeeCertificate.
     * @example
     * // Create one EmployeeCertificate
     * const EmployeeCertificate = await prisma.employeeCertificate.create({
     *   data: {
     *     // ... data to create a EmployeeCertificate
     *   }
     * })
     * 
     */
    create<T extends EmployeeCertificateCreateArgs>(args: SelectSubset<T, EmployeeCertificateCreateArgs<ExtArgs>>): Prisma__EmployeeCertificateClient<$Result.GetResult<Prisma.$EmployeeCertificatePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EmployeeCertificates.
     * @param {EmployeeCertificateCreateManyArgs} args - Arguments to create many EmployeeCertificates.
     * @example
     * // Create many EmployeeCertificates
     * const employeeCertificate = await prisma.employeeCertificate.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EmployeeCertificateCreateManyArgs>(args?: SelectSubset<T, EmployeeCertificateCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EmployeeCertificates and returns the data saved in the database.
     * @param {EmployeeCertificateCreateManyAndReturnArgs} args - Arguments to create many EmployeeCertificates.
     * @example
     * // Create many EmployeeCertificates
     * const employeeCertificate = await prisma.employeeCertificate.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EmployeeCertificates and only return the `id`
     * const employeeCertificateWithIdOnly = await prisma.employeeCertificate.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EmployeeCertificateCreateManyAndReturnArgs>(args?: SelectSubset<T, EmployeeCertificateCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmployeeCertificatePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EmployeeCertificate.
     * @param {EmployeeCertificateDeleteArgs} args - Arguments to delete one EmployeeCertificate.
     * @example
     * // Delete one EmployeeCertificate
     * const EmployeeCertificate = await prisma.employeeCertificate.delete({
     *   where: {
     *     // ... filter to delete one EmployeeCertificate
     *   }
     * })
     * 
     */
    delete<T extends EmployeeCertificateDeleteArgs>(args: SelectSubset<T, EmployeeCertificateDeleteArgs<ExtArgs>>): Prisma__EmployeeCertificateClient<$Result.GetResult<Prisma.$EmployeeCertificatePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EmployeeCertificate.
     * @param {EmployeeCertificateUpdateArgs} args - Arguments to update one EmployeeCertificate.
     * @example
     * // Update one EmployeeCertificate
     * const employeeCertificate = await prisma.employeeCertificate.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EmployeeCertificateUpdateArgs>(args: SelectSubset<T, EmployeeCertificateUpdateArgs<ExtArgs>>): Prisma__EmployeeCertificateClient<$Result.GetResult<Prisma.$EmployeeCertificatePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EmployeeCertificates.
     * @param {EmployeeCertificateDeleteManyArgs} args - Arguments to filter EmployeeCertificates to delete.
     * @example
     * // Delete a few EmployeeCertificates
     * const { count } = await prisma.employeeCertificate.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EmployeeCertificateDeleteManyArgs>(args?: SelectSubset<T, EmployeeCertificateDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EmployeeCertificates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployeeCertificateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EmployeeCertificates
     * const employeeCertificate = await prisma.employeeCertificate.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EmployeeCertificateUpdateManyArgs>(args: SelectSubset<T, EmployeeCertificateUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EmployeeCertificates and returns the data updated in the database.
     * @param {EmployeeCertificateUpdateManyAndReturnArgs} args - Arguments to update many EmployeeCertificates.
     * @example
     * // Update many EmployeeCertificates
     * const employeeCertificate = await prisma.employeeCertificate.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EmployeeCertificates and only return the `id`
     * const employeeCertificateWithIdOnly = await prisma.employeeCertificate.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EmployeeCertificateUpdateManyAndReturnArgs>(args: SelectSubset<T, EmployeeCertificateUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmployeeCertificatePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EmployeeCertificate.
     * @param {EmployeeCertificateUpsertArgs} args - Arguments to update or create a EmployeeCertificate.
     * @example
     * // Update or create a EmployeeCertificate
     * const employeeCertificate = await prisma.employeeCertificate.upsert({
     *   create: {
     *     // ... data to create a EmployeeCertificate
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EmployeeCertificate we want to update
     *   }
     * })
     */
    upsert<T extends EmployeeCertificateUpsertArgs>(args: SelectSubset<T, EmployeeCertificateUpsertArgs<ExtArgs>>): Prisma__EmployeeCertificateClient<$Result.GetResult<Prisma.$EmployeeCertificatePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EmployeeCertificates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployeeCertificateCountArgs} args - Arguments to filter EmployeeCertificates to count.
     * @example
     * // Count the number of EmployeeCertificates
     * const count = await prisma.employeeCertificate.count({
     *   where: {
     *     // ... the filter for the EmployeeCertificates we want to count
     *   }
     * })
    **/
    count<T extends EmployeeCertificateCountArgs>(
      args?: Subset<T, EmployeeCertificateCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmployeeCertificateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EmployeeCertificate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployeeCertificateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmployeeCertificateAggregateArgs>(args: Subset<T, EmployeeCertificateAggregateArgs>): Prisma.PrismaPromise<GetEmployeeCertificateAggregateType<T>>

    /**
     * Group by EmployeeCertificate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployeeCertificateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EmployeeCertificateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EmployeeCertificateGroupByArgs['orderBy'] }
        : { orderBy?: EmployeeCertificateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EmployeeCertificateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmployeeCertificateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EmployeeCertificate model
   */
  readonly fields: EmployeeCertificateFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EmployeeCertificate.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EmployeeCertificateClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee<T extends EmployeeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmployeeDefaultArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EmployeeCertificate model
   */
  interface EmployeeCertificateFieldRefs {
    readonly id: FieldRef<"EmployeeCertificate", 'String'>
    readonly type: FieldRef<"EmployeeCertificate", 'String'>
    readonly name: FieldRef<"EmployeeCertificate", 'String'>
    readonly url: FieldRef<"EmployeeCertificate", 'String'>
    readonly employeeId: FieldRef<"EmployeeCertificate", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EmployeeCertificate findUnique
   */
  export type EmployeeCertificateFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployeeCertificate
     */
    select?: EmployeeCertificateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmployeeCertificate
     */
    omit?: EmployeeCertificateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeCertificateInclude<ExtArgs> | null
    /**
     * Filter, which EmployeeCertificate to fetch.
     */
    where: EmployeeCertificateWhereUniqueInput
  }

  /**
   * EmployeeCertificate findUniqueOrThrow
   */
  export type EmployeeCertificateFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployeeCertificate
     */
    select?: EmployeeCertificateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmployeeCertificate
     */
    omit?: EmployeeCertificateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeCertificateInclude<ExtArgs> | null
    /**
     * Filter, which EmployeeCertificate to fetch.
     */
    where: EmployeeCertificateWhereUniqueInput
  }

  /**
   * EmployeeCertificate findFirst
   */
  export type EmployeeCertificateFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployeeCertificate
     */
    select?: EmployeeCertificateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmployeeCertificate
     */
    omit?: EmployeeCertificateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeCertificateInclude<ExtArgs> | null
    /**
     * Filter, which EmployeeCertificate to fetch.
     */
    where?: EmployeeCertificateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EmployeeCertificates to fetch.
     */
    orderBy?: EmployeeCertificateOrderByWithRelationInput | EmployeeCertificateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EmployeeCertificates.
     */
    cursor?: EmployeeCertificateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EmployeeCertificates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EmployeeCertificates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EmployeeCertificates.
     */
    distinct?: EmployeeCertificateScalarFieldEnum | EmployeeCertificateScalarFieldEnum[]
  }

  /**
   * EmployeeCertificate findFirstOrThrow
   */
  export type EmployeeCertificateFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployeeCertificate
     */
    select?: EmployeeCertificateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmployeeCertificate
     */
    omit?: EmployeeCertificateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeCertificateInclude<ExtArgs> | null
    /**
     * Filter, which EmployeeCertificate to fetch.
     */
    where?: EmployeeCertificateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EmployeeCertificates to fetch.
     */
    orderBy?: EmployeeCertificateOrderByWithRelationInput | EmployeeCertificateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EmployeeCertificates.
     */
    cursor?: EmployeeCertificateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EmployeeCertificates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EmployeeCertificates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EmployeeCertificates.
     */
    distinct?: EmployeeCertificateScalarFieldEnum | EmployeeCertificateScalarFieldEnum[]
  }

  /**
   * EmployeeCertificate findMany
   */
  export type EmployeeCertificateFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployeeCertificate
     */
    select?: EmployeeCertificateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmployeeCertificate
     */
    omit?: EmployeeCertificateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeCertificateInclude<ExtArgs> | null
    /**
     * Filter, which EmployeeCertificates to fetch.
     */
    where?: EmployeeCertificateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EmployeeCertificates to fetch.
     */
    orderBy?: EmployeeCertificateOrderByWithRelationInput | EmployeeCertificateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EmployeeCertificates.
     */
    cursor?: EmployeeCertificateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EmployeeCertificates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EmployeeCertificates.
     */
    skip?: number
    distinct?: EmployeeCertificateScalarFieldEnum | EmployeeCertificateScalarFieldEnum[]
  }

  /**
   * EmployeeCertificate create
   */
  export type EmployeeCertificateCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployeeCertificate
     */
    select?: EmployeeCertificateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmployeeCertificate
     */
    omit?: EmployeeCertificateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeCertificateInclude<ExtArgs> | null
    /**
     * The data needed to create a EmployeeCertificate.
     */
    data: XOR<EmployeeCertificateCreateInput, EmployeeCertificateUncheckedCreateInput>
  }

  /**
   * EmployeeCertificate createMany
   */
  export type EmployeeCertificateCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EmployeeCertificates.
     */
    data: EmployeeCertificateCreateManyInput | EmployeeCertificateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EmployeeCertificate createManyAndReturn
   */
  export type EmployeeCertificateCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployeeCertificate
     */
    select?: EmployeeCertificateSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EmployeeCertificate
     */
    omit?: EmployeeCertificateOmit<ExtArgs> | null
    /**
     * The data used to create many EmployeeCertificates.
     */
    data: EmployeeCertificateCreateManyInput | EmployeeCertificateCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeCertificateIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EmployeeCertificate update
   */
  export type EmployeeCertificateUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployeeCertificate
     */
    select?: EmployeeCertificateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmployeeCertificate
     */
    omit?: EmployeeCertificateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeCertificateInclude<ExtArgs> | null
    /**
     * The data needed to update a EmployeeCertificate.
     */
    data: XOR<EmployeeCertificateUpdateInput, EmployeeCertificateUncheckedUpdateInput>
    /**
     * Choose, which EmployeeCertificate to update.
     */
    where: EmployeeCertificateWhereUniqueInput
  }

  /**
   * EmployeeCertificate updateMany
   */
  export type EmployeeCertificateUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EmployeeCertificates.
     */
    data: XOR<EmployeeCertificateUpdateManyMutationInput, EmployeeCertificateUncheckedUpdateManyInput>
    /**
     * Filter which EmployeeCertificates to update
     */
    where?: EmployeeCertificateWhereInput
    /**
     * Limit how many EmployeeCertificates to update.
     */
    limit?: number
  }

  /**
   * EmployeeCertificate updateManyAndReturn
   */
  export type EmployeeCertificateUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployeeCertificate
     */
    select?: EmployeeCertificateSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EmployeeCertificate
     */
    omit?: EmployeeCertificateOmit<ExtArgs> | null
    /**
     * The data used to update EmployeeCertificates.
     */
    data: XOR<EmployeeCertificateUpdateManyMutationInput, EmployeeCertificateUncheckedUpdateManyInput>
    /**
     * Filter which EmployeeCertificates to update
     */
    where?: EmployeeCertificateWhereInput
    /**
     * Limit how many EmployeeCertificates to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeCertificateIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EmployeeCertificate upsert
   */
  export type EmployeeCertificateUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployeeCertificate
     */
    select?: EmployeeCertificateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmployeeCertificate
     */
    omit?: EmployeeCertificateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeCertificateInclude<ExtArgs> | null
    /**
     * The filter to search for the EmployeeCertificate to update in case it exists.
     */
    where: EmployeeCertificateWhereUniqueInput
    /**
     * In case the EmployeeCertificate found by the `where` argument doesn't exist, create a new EmployeeCertificate with this data.
     */
    create: XOR<EmployeeCertificateCreateInput, EmployeeCertificateUncheckedCreateInput>
    /**
     * In case the EmployeeCertificate was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EmployeeCertificateUpdateInput, EmployeeCertificateUncheckedUpdateInput>
  }

  /**
   * EmployeeCertificate delete
   */
  export type EmployeeCertificateDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployeeCertificate
     */
    select?: EmployeeCertificateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmployeeCertificate
     */
    omit?: EmployeeCertificateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeCertificateInclude<ExtArgs> | null
    /**
     * Filter which EmployeeCertificate to delete.
     */
    where: EmployeeCertificateWhereUniqueInput
  }

  /**
   * EmployeeCertificate deleteMany
   */
  export type EmployeeCertificateDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EmployeeCertificates to delete
     */
    where?: EmployeeCertificateWhereInput
    /**
     * Limit how many EmployeeCertificates to delete.
     */
    limit?: number
  }

  /**
   * EmployeeCertificate without action
   */
  export type EmployeeCertificateDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployeeCertificate
     */
    select?: EmployeeCertificateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EmployeeCertificate
     */
    omit?: EmployeeCertificateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployeeCertificateInclude<ExtArgs> | null
  }


  /**
   * Model ConfirmationRequest
   */

  export type AggregateConfirmationRequest = {
    _count: ConfirmationRequestCountAggregateOutputType | null
    _min: ConfirmationRequestMinAggregateOutputType | null
    _max: ConfirmationRequestMaxAggregateOutputType | null
  }

  export type ConfirmationRequestMinAggregateOutputType = {
    id: string | null
    status: string | null
    reviewStage: string | null
    rejectionReason: string | null
    employeeId: string | null
    submittedById: string | null
    reviewedById: string | null
    decisionDate: Date | null
    commissionDecisionDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ConfirmationRequestMaxAggregateOutputType = {
    id: string | null
    status: string | null
    reviewStage: string | null
    rejectionReason: string | null
    employeeId: string | null
    submittedById: string | null
    reviewedById: string | null
    decisionDate: Date | null
    commissionDecisionDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ConfirmationRequestCountAggregateOutputType = {
    id: number
    status: number
    reviewStage: number
    documents: number
    rejectionReason: number
    employeeId: number
    submittedById: number
    reviewedById: number
    decisionDate: number
    commissionDecisionDate: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ConfirmationRequestMinAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    decisionDate?: true
    commissionDecisionDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ConfirmationRequestMaxAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    decisionDate?: true
    commissionDecisionDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ConfirmationRequestCountAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    documents?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    decisionDate?: true
    commissionDecisionDate?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ConfirmationRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConfirmationRequest to aggregate.
     */
    where?: ConfirmationRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfirmationRequests to fetch.
     */
    orderBy?: ConfirmationRequestOrderByWithRelationInput | ConfirmationRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConfirmationRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfirmationRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfirmationRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ConfirmationRequests
    **/
    _count?: true | ConfirmationRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConfirmationRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConfirmationRequestMaxAggregateInputType
  }

  export type GetConfirmationRequestAggregateType<T extends ConfirmationRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateConfirmationRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConfirmationRequest[P]>
      : GetScalarType<T[P], AggregateConfirmationRequest[P]>
  }




  export type ConfirmationRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConfirmationRequestWhereInput
    orderBy?: ConfirmationRequestOrderByWithAggregationInput | ConfirmationRequestOrderByWithAggregationInput[]
    by: ConfirmationRequestScalarFieldEnum[] | ConfirmationRequestScalarFieldEnum
    having?: ConfirmationRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConfirmationRequestCountAggregateInputType | true
    _min?: ConfirmationRequestMinAggregateInputType
    _max?: ConfirmationRequestMaxAggregateInputType
  }

  export type ConfirmationRequestGroupByOutputType = {
    id: string
    status: string
    reviewStage: string
    documents: string[]
    rejectionReason: string | null
    employeeId: string
    submittedById: string
    reviewedById: string | null
    decisionDate: Date | null
    commissionDecisionDate: Date | null
    createdAt: Date
    updatedAt: Date
    _count: ConfirmationRequestCountAggregateOutputType | null
    _min: ConfirmationRequestMinAggregateOutputType | null
    _max: ConfirmationRequestMaxAggregateOutputType | null
  }

  type GetConfirmationRequestGroupByPayload<T extends ConfirmationRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConfirmationRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConfirmationRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConfirmationRequestGroupByOutputType[P]>
            : GetScalarType<T[P], ConfirmationRequestGroupByOutputType[P]>
        }
      >
    >


  export type ConfirmationRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    decisionDate?: boolean
    commissionDecisionDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ConfirmationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["confirmationRequest"]>

  export type ConfirmationRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    decisionDate?: boolean
    commissionDecisionDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ConfirmationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["confirmationRequest"]>

  export type ConfirmationRequestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    decisionDate?: boolean
    commissionDecisionDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ConfirmationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["confirmationRequest"]>

  export type ConfirmationRequestSelectScalar = {
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    decisionDate?: boolean
    commissionDecisionDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ConfirmationRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "status" | "reviewStage" | "documents" | "rejectionReason" | "employeeId" | "submittedById" | "reviewedById" | "decisionDate" | "commissionDecisionDate" | "createdAt" | "updatedAt", ExtArgs["result"]["confirmationRequest"]>
  export type ConfirmationRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ConfirmationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ConfirmationRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ConfirmationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ConfirmationRequestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ConfirmationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ConfirmationRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ConfirmationRequest"
    objects: {
      employee: Prisma.$EmployeePayload<ExtArgs>
      reviewedBy: Prisma.$UserPayload<ExtArgs> | null
      submittedBy: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      status: string
      reviewStage: string
      documents: string[]
      rejectionReason: string | null
      employeeId: string
      submittedById: string
      reviewedById: string | null
      decisionDate: Date | null
      commissionDecisionDate: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["confirmationRequest"]>
    composites: {}
  }

  type ConfirmationRequestGetPayload<S extends boolean | null | undefined | ConfirmationRequestDefaultArgs> = $Result.GetResult<Prisma.$ConfirmationRequestPayload, S>

  type ConfirmationRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ConfirmationRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ConfirmationRequestCountAggregateInputType | true
    }

  export interface ConfirmationRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ConfirmationRequest'], meta: { name: 'ConfirmationRequest' } }
    /**
     * Find zero or one ConfirmationRequest that matches the filter.
     * @param {ConfirmationRequestFindUniqueArgs} args - Arguments to find a ConfirmationRequest
     * @example
     * // Get one ConfirmationRequest
     * const confirmationRequest = await prisma.confirmationRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConfirmationRequestFindUniqueArgs>(args: SelectSubset<T, ConfirmationRequestFindUniqueArgs<ExtArgs>>): Prisma__ConfirmationRequestClient<$Result.GetResult<Prisma.$ConfirmationRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ConfirmationRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ConfirmationRequestFindUniqueOrThrowArgs} args - Arguments to find a ConfirmationRequest
     * @example
     * // Get one ConfirmationRequest
     * const confirmationRequest = await prisma.confirmationRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConfirmationRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, ConfirmationRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConfirmationRequestClient<$Result.GetResult<Prisma.$ConfirmationRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ConfirmationRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfirmationRequestFindFirstArgs} args - Arguments to find a ConfirmationRequest
     * @example
     * // Get one ConfirmationRequest
     * const confirmationRequest = await prisma.confirmationRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConfirmationRequestFindFirstArgs>(args?: SelectSubset<T, ConfirmationRequestFindFirstArgs<ExtArgs>>): Prisma__ConfirmationRequestClient<$Result.GetResult<Prisma.$ConfirmationRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ConfirmationRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfirmationRequestFindFirstOrThrowArgs} args - Arguments to find a ConfirmationRequest
     * @example
     * // Get one ConfirmationRequest
     * const confirmationRequest = await prisma.confirmationRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConfirmationRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, ConfirmationRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConfirmationRequestClient<$Result.GetResult<Prisma.$ConfirmationRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ConfirmationRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfirmationRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ConfirmationRequests
     * const confirmationRequests = await prisma.confirmationRequest.findMany()
     * 
     * // Get first 10 ConfirmationRequests
     * const confirmationRequests = await prisma.confirmationRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const confirmationRequestWithIdOnly = await prisma.confirmationRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ConfirmationRequestFindManyArgs>(args?: SelectSubset<T, ConfirmationRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfirmationRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ConfirmationRequest.
     * @param {ConfirmationRequestCreateArgs} args - Arguments to create a ConfirmationRequest.
     * @example
     * // Create one ConfirmationRequest
     * const ConfirmationRequest = await prisma.confirmationRequest.create({
     *   data: {
     *     // ... data to create a ConfirmationRequest
     *   }
     * })
     * 
     */
    create<T extends ConfirmationRequestCreateArgs>(args: SelectSubset<T, ConfirmationRequestCreateArgs<ExtArgs>>): Prisma__ConfirmationRequestClient<$Result.GetResult<Prisma.$ConfirmationRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ConfirmationRequests.
     * @param {ConfirmationRequestCreateManyArgs} args - Arguments to create many ConfirmationRequests.
     * @example
     * // Create many ConfirmationRequests
     * const confirmationRequest = await prisma.confirmationRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConfirmationRequestCreateManyArgs>(args?: SelectSubset<T, ConfirmationRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ConfirmationRequests and returns the data saved in the database.
     * @param {ConfirmationRequestCreateManyAndReturnArgs} args - Arguments to create many ConfirmationRequests.
     * @example
     * // Create many ConfirmationRequests
     * const confirmationRequest = await prisma.confirmationRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ConfirmationRequests and only return the `id`
     * const confirmationRequestWithIdOnly = await prisma.confirmationRequest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ConfirmationRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, ConfirmationRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfirmationRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ConfirmationRequest.
     * @param {ConfirmationRequestDeleteArgs} args - Arguments to delete one ConfirmationRequest.
     * @example
     * // Delete one ConfirmationRequest
     * const ConfirmationRequest = await prisma.confirmationRequest.delete({
     *   where: {
     *     // ... filter to delete one ConfirmationRequest
     *   }
     * })
     * 
     */
    delete<T extends ConfirmationRequestDeleteArgs>(args: SelectSubset<T, ConfirmationRequestDeleteArgs<ExtArgs>>): Prisma__ConfirmationRequestClient<$Result.GetResult<Prisma.$ConfirmationRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ConfirmationRequest.
     * @param {ConfirmationRequestUpdateArgs} args - Arguments to update one ConfirmationRequest.
     * @example
     * // Update one ConfirmationRequest
     * const confirmationRequest = await prisma.confirmationRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConfirmationRequestUpdateArgs>(args: SelectSubset<T, ConfirmationRequestUpdateArgs<ExtArgs>>): Prisma__ConfirmationRequestClient<$Result.GetResult<Prisma.$ConfirmationRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ConfirmationRequests.
     * @param {ConfirmationRequestDeleteManyArgs} args - Arguments to filter ConfirmationRequests to delete.
     * @example
     * // Delete a few ConfirmationRequests
     * const { count } = await prisma.confirmationRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConfirmationRequestDeleteManyArgs>(args?: SelectSubset<T, ConfirmationRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ConfirmationRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfirmationRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ConfirmationRequests
     * const confirmationRequest = await prisma.confirmationRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConfirmationRequestUpdateManyArgs>(args: SelectSubset<T, ConfirmationRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ConfirmationRequests and returns the data updated in the database.
     * @param {ConfirmationRequestUpdateManyAndReturnArgs} args - Arguments to update many ConfirmationRequests.
     * @example
     * // Update many ConfirmationRequests
     * const confirmationRequest = await prisma.confirmationRequest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ConfirmationRequests and only return the `id`
     * const confirmationRequestWithIdOnly = await prisma.confirmationRequest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ConfirmationRequestUpdateManyAndReturnArgs>(args: SelectSubset<T, ConfirmationRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConfirmationRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ConfirmationRequest.
     * @param {ConfirmationRequestUpsertArgs} args - Arguments to update or create a ConfirmationRequest.
     * @example
     * // Update or create a ConfirmationRequest
     * const confirmationRequest = await prisma.confirmationRequest.upsert({
     *   create: {
     *     // ... data to create a ConfirmationRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ConfirmationRequest we want to update
     *   }
     * })
     */
    upsert<T extends ConfirmationRequestUpsertArgs>(args: SelectSubset<T, ConfirmationRequestUpsertArgs<ExtArgs>>): Prisma__ConfirmationRequestClient<$Result.GetResult<Prisma.$ConfirmationRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ConfirmationRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfirmationRequestCountArgs} args - Arguments to filter ConfirmationRequests to count.
     * @example
     * // Count the number of ConfirmationRequests
     * const count = await prisma.confirmationRequest.count({
     *   where: {
     *     // ... the filter for the ConfirmationRequests we want to count
     *   }
     * })
    **/
    count<T extends ConfirmationRequestCountArgs>(
      args?: Subset<T, ConfirmationRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConfirmationRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ConfirmationRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfirmationRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConfirmationRequestAggregateArgs>(args: Subset<T, ConfirmationRequestAggregateArgs>): Prisma.PrismaPromise<GetConfirmationRequestAggregateType<T>>

    /**
     * Group by ConfirmationRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfirmationRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConfirmationRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConfirmationRequestGroupByArgs['orderBy'] }
        : { orderBy?: ConfirmationRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConfirmationRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConfirmationRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ConfirmationRequest model
   */
  readonly fields: ConfirmationRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ConfirmationRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConfirmationRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee<T extends EmployeeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmployeeDefaultArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reviewedBy<T extends ConfirmationRequest$reviewedByArgs<ExtArgs> = {}>(args?: Subset<T, ConfirmationRequest$reviewedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    submittedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ConfirmationRequest model
   */
  interface ConfirmationRequestFieldRefs {
    readonly id: FieldRef<"ConfirmationRequest", 'String'>
    readonly status: FieldRef<"ConfirmationRequest", 'String'>
    readonly reviewStage: FieldRef<"ConfirmationRequest", 'String'>
    readonly documents: FieldRef<"ConfirmationRequest", 'String[]'>
    readonly rejectionReason: FieldRef<"ConfirmationRequest", 'String'>
    readonly employeeId: FieldRef<"ConfirmationRequest", 'String'>
    readonly submittedById: FieldRef<"ConfirmationRequest", 'String'>
    readonly reviewedById: FieldRef<"ConfirmationRequest", 'String'>
    readonly decisionDate: FieldRef<"ConfirmationRequest", 'DateTime'>
    readonly commissionDecisionDate: FieldRef<"ConfirmationRequest", 'DateTime'>
    readonly createdAt: FieldRef<"ConfirmationRequest", 'DateTime'>
    readonly updatedAt: FieldRef<"ConfirmationRequest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ConfirmationRequest findUnique
   */
  export type ConfirmationRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfirmationRequest
     */
    select?: ConfirmationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfirmationRequest
     */
    omit?: ConfirmationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfirmationRequestInclude<ExtArgs> | null
    /**
     * Filter, which ConfirmationRequest to fetch.
     */
    where: ConfirmationRequestWhereUniqueInput
  }

  /**
   * ConfirmationRequest findUniqueOrThrow
   */
  export type ConfirmationRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfirmationRequest
     */
    select?: ConfirmationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfirmationRequest
     */
    omit?: ConfirmationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfirmationRequestInclude<ExtArgs> | null
    /**
     * Filter, which ConfirmationRequest to fetch.
     */
    where: ConfirmationRequestWhereUniqueInput
  }

  /**
   * ConfirmationRequest findFirst
   */
  export type ConfirmationRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfirmationRequest
     */
    select?: ConfirmationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfirmationRequest
     */
    omit?: ConfirmationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfirmationRequestInclude<ExtArgs> | null
    /**
     * Filter, which ConfirmationRequest to fetch.
     */
    where?: ConfirmationRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfirmationRequests to fetch.
     */
    orderBy?: ConfirmationRequestOrderByWithRelationInput | ConfirmationRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConfirmationRequests.
     */
    cursor?: ConfirmationRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfirmationRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfirmationRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConfirmationRequests.
     */
    distinct?: ConfirmationRequestScalarFieldEnum | ConfirmationRequestScalarFieldEnum[]
  }

  /**
   * ConfirmationRequest findFirstOrThrow
   */
  export type ConfirmationRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfirmationRequest
     */
    select?: ConfirmationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfirmationRequest
     */
    omit?: ConfirmationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfirmationRequestInclude<ExtArgs> | null
    /**
     * Filter, which ConfirmationRequest to fetch.
     */
    where?: ConfirmationRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfirmationRequests to fetch.
     */
    orderBy?: ConfirmationRequestOrderByWithRelationInput | ConfirmationRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConfirmationRequests.
     */
    cursor?: ConfirmationRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfirmationRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfirmationRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConfirmationRequests.
     */
    distinct?: ConfirmationRequestScalarFieldEnum | ConfirmationRequestScalarFieldEnum[]
  }

  /**
   * ConfirmationRequest findMany
   */
  export type ConfirmationRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfirmationRequest
     */
    select?: ConfirmationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfirmationRequest
     */
    omit?: ConfirmationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfirmationRequestInclude<ExtArgs> | null
    /**
     * Filter, which ConfirmationRequests to fetch.
     */
    where?: ConfirmationRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConfirmationRequests to fetch.
     */
    orderBy?: ConfirmationRequestOrderByWithRelationInput | ConfirmationRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ConfirmationRequests.
     */
    cursor?: ConfirmationRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConfirmationRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConfirmationRequests.
     */
    skip?: number
    distinct?: ConfirmationRequestScalarFieldEnum | ConfirmationRequestScalarFieldEnum[]
  }

  /**
   * ConfirmationRequest create
   */
  export type ConfirmationRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfirmationRequest
     */
    select?: ConfirmationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfirmationRequest
     */
    omit?: ConfirmationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfirmationRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a ConfirmationRequest.
     */
    data: XOR<ConfirmationRequestCreateInput, ConfirmationRequestUncheckedCreateInput>
  }

  /**
   * ConfirmationRequest createMany
   */
  export type ConfirmationRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ConfirmationRequests.
     */
    data: ConfirmationRequestCreateManyInput | ConfirmationRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ConfirmationRequest createManyAndReturn
   */
  export type ConfirmationRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfirmationRequest
     */
    select?: ConfirmationRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ConfirmationRequest
     */
    omit?: ConfirmationRequestOmit<ExtArgs> | null
    /**
     * The data used to create many ConfirmationRequests.
     */
    data: ConfirmationRequestCreateManyInput | ConfirmationRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfirmationRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ConfirmationRequest update
   */
  export type ConfirmationRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfirmationRequest
     */
    select?: ConfirmationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfirmationRequest
     */
    omit?: ConfirmationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfirmationRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a ConfirmationRequest.
     */
    data: XOR<ConfirmationRequestUpdateInput, ConfirmationRequestUncheckedUpdateInput>
    /**
     * Choose, which ConfirmationRequest to update.
     */
    where: ConfirmationRequestWhereUniqueInput
  }

  /**
   * ConfirmationRequest updateMany
   */
  export type ConfirmationRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ConfirmationRequests.
     */
    data: XOR<ConfirmationRequestUpdateManyMutationInput, ConfirmationRequestUncheckedUpdateManyInput>
    /**
     * Filter which ConfirmationRequests to update
     */
    where?: ConfirmationRequestWhereInput
    /**
     * Limit how many ConfirmationRequests to update.
     */
    limit?: number
  }

  /**
   * ConfirmationRequest updateManyAndReturn
   */
  export type ConfirmationRequestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfirmationRequest
     */
    select?: ConfirmationRequestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ConfirmationRequest
     */
    omit?: ConfirmationRequestOmit<ExtArgs> | null
    /**
     * The data used to update ConfirmationRequests.
     */
    data: XOR<ConfirmationRequestUpdateManyMutationInput, ConfirmationRequestUncheckedUpdateManyInput>
    /**
     * Filter which ConfirmationRequests to update
     */
    where?: ConfirmationRequestWhereInput
    /**
     * Limit how many ConfirmationRequests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfirmationRequestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ConfirmationRequest upsert
   */
  export type ConfirmationRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfirmationRequest
     */
    select?: ConfirmationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfirmationRequest
     */
    omit?: ConfirmationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfirmationRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the ConfirmationRequest to update in case it exists.
     */
    where: ConfirmationRequestWhereUniqueInput
    /**
     * In case the ConfirmationRequest found by the `where` argument doesn't exist, create a new ConfirmationRequest with this data.
     */
    create: XOR<ConfirmationRequestCreateInput, ConfirmationRequestUncheckedCreateInput>
    /**
     * In case the ConfirmationRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConfirmationRequestUpdateInput, ConfirmationRequestUncheckedUpdateInput>
  }

  /**
   * ConfirmationRequest delete
   */
  export type ConfirmationRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfirmationRequest
     */
    select?: ConfirmationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfirmationRequest
     */
    omit?: ConfirmationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfirmationRequestInclude<ExtArgs> | null
    /**
     * Filter which ConfirmationRequest to delete.
     */
    where: ConfirmationRequestWhereUniqueInput
  }

  /**
   * ConfirmationRequest deleteMany
   */
  export type ConfirmationRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConfirmationRequests to delete
     */
    where?: ConfirmationRequestWhereInput
    /**
     * Limit how many ConfirmationRequests to delete.
     */
    limit?: number
  }

  /**
   * ConfirmationRequest.reviewedBy
   */
  export type ConfirmationRequest$reviewedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ConfirmationRequest without action
   */
  export type ConfirmationRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConfirmationRequest
     */
    select?: ConfirmationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConfirmationRequest
     */
    omit?: ConfirmationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConfirmationRequestInclude<ExtArgs> | null
  }


  /**
   * Model PromotionRequest
   */

  export type AggregatePromotionRequest = {
    _count: PromotionRequestCountAggregateOutputType | null
    _min: PromotionRequestMinAggregateOutputType | null
    _max: PromotionRequestMaxAggregateOutputType | null
  }

  export type PromotionRequestMinAggregateOutputType = {
    id: string | null
    status: string | null
    reviewStage: string | null
    proposedCadre: string | null
    promotionType: string | null
    studiedOutsideCountry: boolean | null
    rejectionReason: string | null
    employeeId: string | null
    submittedById: string | null
    reviewedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
    commissionDecisionReason: string | null
  }

  export type PromotionRequestMaxAggregateOutputType = {
    id: string | null
    status: string | null
    reviewStage: string | null
    proposedCadre: string | null
    promotionType: string | null
    studiedOutsideCountry: boolean | null
    rejectionReason: string | null
    employeeId: string | null
    submittedById: string | null
    reviewedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
    commissionDecisionReason: string | null
  }

  export type PromotionRequestCountAggregateOutputType = {
    id: number
    status: number
    reviewStage: number
    proposedCadre: number
    promotionType: number
    studiedOutsideCountry: number
    documents: number
    rejectionReason: number
    employeeId: number
    submittedById: number
    reviewedById: number
    createdAt: number
    updatedAt: number
    commissionDecisionReason: number
    _all: number
  }


  export type PromotionRequestMinAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    proposedCadre?: true
    promotionType?: true
    studiedOutsideCountry?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
    commissionDecisionReason?: true
  }

  export type PromotionRequestMaxAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    proposedCadre?: true
    promotionType?: true
    studiedOutsideCountry?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
    commissionDecisionReason?: true
  }

  export type PromotionRequestCountAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    proposedCadre?: true
    promotionType?: true
    studiedOutsideCountry?: true
    documents?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
    commissionDecisionReason?: true
    _all?: true
  }

  export type PromotionRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PromotionRequest to aggregate.
     */
    where?: PromotionRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionRequests to fetch.
     */
    orderBy?: PromotionRequestOrderByWithRelationInput | PromotionRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PromotionRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PromotionRequests
    **/
    _count?: true | PromotionRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromotionRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromotionRequestMaxAggregateInputType
  }

  export type GetPromotionRequestAggregateType<T extends PromotionRequestAggregateArgs> = {
        [P in keyof T & keyof AggregatePromotionRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromotionRequest[P]>
      : GetScalarType<T[P], AggregatePromotionRequest[P]>
  }




  export type PromotionRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionRequestWhereInput
    orderBy?: PromotionRequestOrderByWithAggregationInput | PromotionRequestOrderByWithAggregationInput[]
    by: PromotionRequestScalarFieldEnum[] | PromotionRequestScalarFieldEnum
    having?: PromotionRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromotionRequestCountAggregateInputType | true
    _min?: PromotionRequestMinAggregateInputType
    _max?: PromotionRequestMaxAggregateInputType
  }

  export type PromotionRequestGroupByOutputType = {
    id: string
    status: string
    reviewStage: string
    proposedCadre: string
    promotionType: string
    studiedOutsideCountry: boolean | null
    documents: string[]
    rejectionReason: string | null
    employeeId: string
    submittedById: string
    reviewedById: string | null
    createdAt: Date
    updatedAt: Date
    commissionDecisionReason: string | null
    _count: PromotionRequestCountAggregateOutputType | null
    _min: PromotionRequestMinAggregateOutputType | null
    _max: PromotionRequestMaxAggregateOutputType | null
  }

  type GetPromotionRequestGroupByPayload<T extends PromotionRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromotionRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromotionRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromotionRequestGroupByOutputType[P]>
            : GetScalarType<T[P], PromotionRequestGroupByOutputType[P]>
        }
      >
    >


  export type PromotionRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    proposedCadre?: boolean
    promotionType?: boolean
    studiedOutsideCountry?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    commissionDecisionReason?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | PromotionRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotionRequest"]>

  export type PromotionRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    proposedCadre?: boolean
    promotionType?: boolean
    studiedOutsideCountry?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    commissionDecisionReason?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | PromotionRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotionRequest"]>

  export type PromotionRequestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    proposedCadre?: boolean
    promotionType?: boolean
    studiedOutsideCountry?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    commissionDecisionReason?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | PromotionRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotionRequest"]>

  export type PromotionRequestSelectScalar = {
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    proposedCadre?: boolean
    promotionType?: boolean
    studiedOutsideCountry?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    commissionDecisionReason?: boolean
  }

  export type PromotionRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "status" | "reviewStage" | "proposedCadre" | "promotionType" | "studiedOutsideCountry" | "documents" | "rejectionReason" | "employeeId" | "submittedById" | "reviewedById" | "createdAt" | "updatedAt" | "commissionDecisionReason", ExtArgs["result"]["promotionRequest"]>
  export type PromotionRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | PromotionRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type PromotionRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | PromotionRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type PromotionRequestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | PromotionRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $PromotionRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PromotionRequest"
    objects: {
      employee: Prisma.$EmployeePayload<ExtArgs>
      reviewedBy: Prisma.$UserPayload<ExtArgs> | null
      submittedBy: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      status: string
      reviewStage: string
      proposedCadre: string
      promotionType: string
      studiedOutsideCountry: boolean | null
      documents: string[]
      rejectionReason: string | null
      employeeId: string
      submittedById: string
      reviewedById: string | null
      createdAt: Date
      updatedAt: Date
      commissionDecisionReason: string | null
    }, ExtArgs["result"]["promotionRequest"]>
    composites: {}
  }

  type PromotionRequestGetPayload<S extends boolean | null | undefined | PromotionRequestDefaultArgs> = $Result.GetResult<Prisma.$PromotionRequestPayload, S>

  type PromotionRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PromotionRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PromotionRequestCountAggregateInputType | true
    }

  export interface PromotionRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PromotionRequest'], meta: { name: 'PromotionRequest' } }
    /**
     * Find zero or one PromotionRequest that matches the filter.
     * @param {PromotionRequestFindUniqueArgs} args - Arguments to find a PromotionRequest
     * @example
     * // Get one PromotionRequest
     * const promotionRequest = await prisma.promotionRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PromotionRequestFindUniqueArgs>(args: SelectSubset<T, PromotionRequestFindUniqueArgs<ExtArgs>>): Prisma__PromotionRequestClient<$Result.GetResult<Prisma.$PromotionRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PromotionRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PromotionRequestFindUniqueOrThrowArgs} args - Arguments to find a PromotionRequest
     * @example
     * // Get one PromotionRequest
     * const promotionRequest = await prisma.promotionRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PromotionRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, PromotionRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PromotionRequestClient<$Result.GetResult<Prisma.$PromotionRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PromotionRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionRequestFindFirstArgs} args - Arguments to find a PromotionRequest
     * @example
     * // Get one PromotionRequest
     * const promotionRequest = await prisma.promotionRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PromotionRequestFindFirstArgs>(args?: SelectSubset<T, PromotionRequestFindFirstArgs<ExtArgs>>): Prisma__PromotionRequestClient<$Result.GetResult<Prisma.$PromotionRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PromotionRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionRequestFindFirstOrThrowArgs} args - Arguments to find a PromotionRequest
     * @example
     * // Get one PromotionRequest
     * const promotionRequest = await prisma.promotionRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PromotionRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, PromotionRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__PromotionRequestClient<$Result.GetResult<Prisma.$PromotionRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PromotionRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PromotionRequests
     * const promotionRequests = await prisma.promotionRequest.findMany()
     * 
     * // Get first 10 PromotionRequests
     * const promotionRequests = await prisma.promotionRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const promotionRequestWithIdOnly = await prisma.promotionRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PromotionRequestFindManyArgs>(args?: SelectSubset<T, PromotionRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PromotionRequest.
     * @param {PromotionRequestCreateArgs} args - Arguments to create a PromotionRequest.
     * @example
     * // Create one PromotionRequest
     * const PromotionRequest = await prisma.promotionRequest.create({
     *   data: {
     *     // ... data to create a PromotionRequest
     *   }
     * })
     * 
     */
    create<T extends PromotionRequestCreateArgs>(args: SelectSubset<T, PromotionRequestCreateArgs<ExtArgs>>): Prisma__PromotionRequestClient<$Result.GetResult<Prisma.$PromotionRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PromotionRequests.
     * @param {PromotionRequestCreateManyArgs} args - Arguments to create many PromotionRequests.
     * @example
     * // Create many PromotionRequests
     * const promotionRequest = await prisma.promotionRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PromotionRequestCreateManyArgs>(args?: SelectSubset<T, PromotionRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PromotionRequests and returns the data saved in the database.
     * @param {PromotionRequestCreateManyAndReturnArgs} args - Arguments to create many PromotionRequests.
     * @example
     * // Create many PromotionRequests
     * const promotionRequest = await prisma.promotionRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PromotionRequests and only return the `id`
     * const promotionRequestWithIdOnly = await prisma.promotionRequest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PromotionRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, PromotionRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PromotionRequest.
     * @param {PromotionRequestDeleteArgs} args - Arguments to delete one PromotionRequest.
     * @example
     * // Delete one PromotionRequest
     * const PromotionRequest = await prisma.promotionRequest.delete({
     *   where: {
     *     // ... filter to delete one PromotionRequest
     *   }
     * })
     * 
     */
    delete<T extends PromotionRequestDeleteArgs>(args: SelectSubset<T, PromotionRequestDeleteArgs<ExtArgs>>): Prisma__PromotionRequestClient<$Result.GetResult<Prisma.$PromotionRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PromotionRequest.
     * @param {PromotionRequestUpdateArgs} args - Arguments to update one PromotionRequest.
     * @example
     * // Update one PromotionRequest
     * const promotionRequest = await prisma.promotionRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PromotionRequestUpdateArgs>(args: SelectSubset<T, PromotionRequestUpdateArgs<ExtArgs>>): Prisma__PromotionRequestClient<$Result.GetResult<Prisma.$PromotionRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PromotionRequests.
     * @param {PromotionRequestDeleteManyArgs} args - Arguments to filter PromotionRequests to delete.
     * @example
     * // Delete a few PromotionRequests
     * const { count } = await prisma.promotionRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PromotionRequestDeleteManyArgs>(args?: SelectSubset<T, PromotionRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PromotionRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PromotionRequests
     * const promotionRequest = await prisma.promotionRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PromotionRequestUpdateManyArgs>(args: SelectSubset<T, PromotionRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PromotionRequests and returns the data updated in the database.
     * @param {PromotionRequestUpdateManyAndReturnArgs} args - Arguments to update many PromotionRequests.
     * @example
     * // Update many PromotionRequests
     * const promotionRequest = await prisma.promotionRequest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PromotionRequests and only return the `id`
     * const promotionRequestWithIdOnly = await prisma.promotionRequest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PromotionRequestUpdateManyAndReturnArgs>(args: SelectSubset<T, PromotionRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PromotionRequest.
     * @param {PromotionRequestUpsertArgs} args - Arguments to update or create a PromotionRequest.
     * @example
     * // Update or create a PromotionRequest
     * const promotionRequest = await prisma.promotionRequest.upsert({
     *   create: {
     *     // ... data to create a PromotionRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PromotionRequest we want to update
     *   }
     * })
     */
    upsert<T extends PromotionRequestUpsertArgs>(args: SelectSubset<T, PromotionRequestUpsertArgs<ExtArgs>>): Prisma__PromotionRequestClient<$Result.GetResult<Prisma.$PromotionRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PromotionRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionRequestCountArgs} args - Arguments to filter PromotionRequests to count.
     * @example
     * // Count the number of PromotionRequests
     * const count = await prisma.promotionRequest.count({
     *   where: {
     *     // ... the filter for the PromotionRequests we want to count
     *   }
     * })
    **/
    count<T extends PromotionRequestCountArgs>(
      args?: Subset<T, PromotionRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromotionRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PromotionRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromotionRequestAggregateArgs>(args: Subset<T, PromotionRequestAggregateArgs>): Prisma.PrismaPromise<GetPromotionRequestAggregateType<T>>

    /**
     * Group by PromotionRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PromotionRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PromotionRequestGroupByArgs['orderBy'] }
        : { orderBy?: PromotionRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PromotionRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromotionRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PromotionRequest model
   */
  readonly fields: PromotionRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PromotionRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PromotionRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee<T extends EmployeeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmployeeDefaultArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reviewedBy<T extends PromotionRequest$reviewedByArgs<ExtArgs> = {}>(args?: Subset<T, PromotionRequest$reviewedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    submittedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PromotionRequest model
   */
  interface PromotionRequestFieldRefs {
    readonly id: FieldRef<"PromotionRequest", 'String'>
    readonly status: FieldRef<"PromotionRequest", 'String'>
    readonly reviewStage: FieldRef<"PromotionRequest", 'String'>
    readonly proposedCadre: FieldRef<"PromotionRequest", 'String'>
    readonly promotionType: FieldRef<"PromotionRequest", 'String'>
    readonly studiedOutsideCountry: FieldRef<"PromotionRequest", 'Boolean'>
    readonly documents: FieldRef<"PromotionRequest", 'String[]'>
    readonly rejectionReason: FieldRef<"PromotionRequest", 'String'>
    readonly employeeId: FieldRef<"PromotionRequest", 'String'>
    readonly submittedById: FieldRef<"PromotionRequest", 'String'>
    readonly reviewedById: FieldRef<"PromotionRequest", 'String'>
    readonly createdAt: FieldRef<"PromotionRequest", 'DateTime'>
    readonly updatedAt: FieldRef<"PromotionRequest", 'DateTime'>
    readonly commissionDecisionReason: FieldRef<"PromotionRequest", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PromotionRequest findUnique
   */
  export type PromotionRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionRequest
     */
    select?: PromotionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionRequest
     */
    omit?: PromotionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionRequestInclude<ExtArgs> | null
    /**
     * Filter, which PromotionRequest to fetch.
     */
    where: PromotionRequestWhereUniqueInput
  }

  /**
   * PromotionRequest findUniqueOrThrow
   */
  export type PromotionRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionRequest
     */
    select?: PromotionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionRequest
     */
    omit?: PromotionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionRequestInclude<ExtArgs> | null
    /**
     * Filter, which PromotionRequest to fetch.
     */
    where: PromotionRequestWhereUniqueInput
  }

  /**
   * PromotionRequest findFirst
   */
  export type PromotionRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionRequest
     */
    select?: PromotionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionRequest
     */
    omit?: PromotionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionRequestInclude<ExtArgs> | null
    /**
     * Filter, which PromotionRequest to fetch.
     */
    where?: PromotionRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionRequests to fetch.
     */
    orderBy?: PromotionRequestOrderByWithRelationInput | PromotionRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PromotionRequests.
     */
    cursor?: PromotionRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PromotionRequests.
     */
    distinct?: PromotionRequestScalarFieldEnum | PromotionRequestScalarFieldEnum[]
  }

  /**
   * PromotionRequest findFirstOrThrow
   */
  export type PromotionRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionRequest
     */
    select?: PromotionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionRequest
     */
    omit?: PromotionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionRequestInclude<ExtArgs> | null
    /**
     * Filter, which PromotionRequest to fetch.
     */
    where?: PromotionRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionRequests to fetch.
     */
    orderBy?: PromotionRequestOrderByWithRelationInput | PromotionRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PromotionRequests.
     */
    cursor?: PromotionRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PromotionRequests.
     */
    distinct?: PromotionRequestScalarFieldEnum | PromotionRequestScalarFieldEnum[]
  }

  /**
   * PromotionRequest findMany
   */
  export type PromotionRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionRequest
     */
    select?: PromotionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionRequest
     */
    omit?: PromotionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionRequestInclude<ExtArgs> | null
    /**
     * Filter, which PromotionRequests to fetch.
     */
    where?: PromotionRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionRequests to fetch.
     */
    orderBy?: PromotionRequestOrderByWithRelationInput | PromotionRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PromotionRequests.
     */
    cursor?: PromotionRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionRequests.
     */
    skip?: number
    distinct?: PromotionRequestScalarFieldEnum | PromotionRequestScalarFieldEnum[]
  }

  /**
   * PromotionRequest create
   */
  export type PromotionRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionRequest
     */
    select?: PromotionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionRequest
     */
    omit?: PromotionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a PromotionRequest.
     */
    data: XOR<PromotionRequestCreateInput, PromotionRequestUncheckedCreateInput>
  }

  /**
   * PromotionRequest createMany
   */
  export type PromotionRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PromotionRequests.
     */
    data: PromotionRequestCreateManyInput | PromotionRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PromotionRequest createManyAndReturn
   */
  export type PromotionRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionRequest
     */
    select?: PromotionRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionRequest
     */
    omit?: PromotionRequestOmit<ExtArgs> | null
    /**
     * The data used to create many PromotionRequests.
     */
    data: PromotionRequestCreateManyInput | PromotionRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PromotionRequest update
   */
  export type PromotionRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionRequest
     */
    select?: PromotionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionRequest
     */
    omit?: PromotionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a PromotionRequest.
     */
    data: XOR<PromotionRequestUpdateInput, PromotionRequestUncheckedUpdateInput>
    /**
     * Choose, which PromotionRequest to update.
     */
    where: PromotionRequestWhereUniqueInput
  }

  /**
   * PromotionRequest updateMany
   */
  export type PromotionRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PromotionRequests.
     */
    data: XOR<PromotionRequestUpdateManyMutationInput, PromotionRequestUncheckedUpdateManyInput>
    /**
     * Filter which PromotionRequests to update
     */
    where?: PromotionRequestWhereInput
    /**
     * Limit how many PromotionRequests to update.
     */
    limit?: number
  }

  /**
   * PromotionRequest updateManyAndReturn
   */
  export type PromotionRequestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionRequest
     */
    select?: PromotionRequestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionRequest
     */
    omit?: PromotionRequestOmit<ExtArgs> | null
    /**
     * The data used to update PromotionRequests.
     */
    data: XOR<PromotionRequestUpdateManyMutationInput, PromotionRequestUncheckedUpdateManyInput>
    /**
     * Filter which PromotionRequests to update
     */
    where?: PromotionRequestWhereInput
    /**
     * Limit how many PromotionRequests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionRequestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PromotionRequest upsert
   */
  export type PromotionRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionRequest
     */
    select?: PromotionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionRequest
     */
    omit?: PromotionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the PromotionRequest to update in case it exists.
     */
    where: PromotionRequestWhereUniqueInput
    /**
     * In case the PromotionRequest found by the `where` argument doesn't exist, create a new PromotionRequest with this data.
     */
    create: XOR<PromotionRequestCreateInput, PromotionRequestUncheckedCreateInput>
    /**
     * In case the PromotionRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PromotionRequestUpdateInput, PromotionRequestUncheckedUpdateInput>
  }

  /**
   * PromotionRequest delete
   */
  export type PromotionRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionRequest
     */
    select?: PromotionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionRequest
     */
    omit?: PromotionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionRequestInclude<ExtArgs> | null
    /**
     * Filter which PromotionRequest to delete.
     */
    where: PromotionRequestWhereUniqueInput
  }

  /**
   * PromotionRequest deleteMany
   */
  export type PromotionRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PromotionRequests to delete
     */
    where?: PromotionRequestWhereInput
    /**
     * Limit how many PromotionRequests to delete.
     */
    limit?: number
  }

  /**
   * PromotionRequest.reviewedBy
   */
  export type PromotionRequest$reviewedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * PromotionRequest without action
   */
  export type PromotionRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionRequest
     */
    select?: PromotionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionRequest
     */
    omit?: PromotionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionRequestInclude<ExtArgs> | null
  }


  /**
   * Model LwopRequest
   */

  export type AggregateLwopRequest = {
    _count: LwopRequestCountAggregateOutputType | null
    _min: LwopRequestMinAggregateOutputType | null
    _max: LwopRequestMaxAggregateOutputType | null
  }

  export type LwopRequestMinAggregateOutputType = {
    id: string | null
    status: string | null
    reviewStage: string | null
    duration: string | null
    reason: string | null
    rejectionReason: string | null
    employeeId: string | null
    submittedById: string | null
    reviewedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
    endDate: Date | null
    startDate: Date | null
  }

  export type LwopRequestMaxAggregateOutputType = {
    id: string | null
    status: string | null
    reviewStage: string | null
    duration: string | null
    reason: string | null
    rejectionReason: string | null
    employeeId: string | null
    submittedById: string | null
    reviewedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
    endDate: Date | null
    startDate: Date | null
  }

  export type LwopRequestCountAggregateOutputType = {
    id: number
    status: number
    reviewStage: number
    duration: number
    reason: number
    documents: number
    rejectionReason: number
    employeeId: number
    submittedById: number
    reviewedById: number
    createdAt: number
    updatedAt: number
    endDate: number
    startDate: number
    _all: number
  }


  export type LwopRequestMinAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    duration?: true
    reason?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
    endDate?: true
    startDate?: true
  }

  export type LwopRequestMaxAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    duration?: true
    reason?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
    endDate?: true
    startDate?: true
  }

  export type LwopRequestCountAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    duration?: true
    reason?: true
    documents?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
    endDate?: true
    startDate?: true
    _all?: true
  }

  export type LwopRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LwopRequest to aggregate.
     */
    where?: LwopRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LwopRequests to fetch.
     */
    orderBy?: LwopRequestOrderByWithRelationInput | LwopRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LwopRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LwopRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LwopRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LwopRequests
    **/
    _count?: true | LwopRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LwopRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LwopRequestMaxAggregateInputType
  }

  export type GetLwopRequestAggregateType<T extends LwopRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateLwopRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLwopRequest[P]>
      : GetScalarType<T[P], AggregateLwopRequest[P]>
  }




  export type LwopRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LwopRequestWhereInput
    orderBy?: LwopRequestOrderByWithAggregationInput | LwopRequestOrderByWithAggregationInput[]
    by: LwopRequestScalarFieldEnum[] | LwopRequestScalarFieldEnum
    having?: LwopRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LwopRequestCountAggregateInputType | true
    _min?: LwopRequestMinAggregateInputType
    _max?: LwopRequestMaxAggregateInputType
  }

  export type LwopRequestGroupByOutputType = {
    id: string
    status: string
    reviewStage: string
    duration: string
    reason: string
    documents: string[]
    rejectionReason: string | null
    employeeId: string
    submittedById: string
    reviewedById: string | null
    createdAt: Date
    updatedAt: Date
    endDate: Date | null
    startDate: Date | null
    _count: LwopRequestCountAggregateOutputType | null
    _min: LwopRequestMinAggregateOutputType | null
    _max: LwopRequestMaxAggregateOutputType | null
  }

  type GetLwopRequestGroupByPayload<T extends LwopRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LwopRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LwopRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LwopRequestGroupByOutputType[P]>
            : GetScalarType<T[P], LwopRequestGroupByOutputType[P]>
        }
      >
    >


  export type LwopRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    duration?: boolean
    reason?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    endDate?: boolean
    startDate?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | LwopRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["lwopRequest"]>

  export type LwopRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    duration?: boolean
    reason?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    endDate?: boolean
    startDate?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | LwopRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["lwopRequest"]>

  export type LwopRequestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    duration?: boolean
    reason?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    endDate?: boolean
    startDate?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | LwopRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["lwopRequest"]>

  export type LwopRequestSelectScalar = {
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    duration?: boolean
    reason?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    endDate?: boolean
    startDate?: boolean
  }

  export type LwopRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "status" | "reviewStage" | "duration" | "reason" | "documents" | "rejectionReason" | "employeeId" | "submittedById" | "reviewedById" | "createdAt" | "updatedAt" | "endDate" | "startDate", ExtArgs["result"]["lwopRequest"]>
  export type LwopRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | LwopRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type LwopRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | LwopRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type LwopRequestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | LwopRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $LwopRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LwopRequest"
    objects: {
      employee: Prisma.$EmployeePayload<ExtArgs>
      reviewedBy: Prisma.$UserPayload<ExtArgs> | null
      submittedBy: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      status: string
      reviewStage: string
      duration: string
      reason: string
      documents: string[]
      rejectionReason: string | null
      employeeId: string
      submittedById: string
      reviewedById: string | null
      createdAt: Date
      updatedAt: Date
      endDate: Date | null
      startDate: Date | null
    }, ExtArgs["result"]["lwopRequest"]>
    composites: {}
  }

  type LwopRequestGetPayload<S extends boolean | null | undefined | LwopRequestDefaultArgs> = $Result.GetResult<Prisma.$LwopRequestPayload, S>

  type LwopRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LwopRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LwopRequestCountAggregateInputType | true
    }

  export interface LwopRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LwopRequest'], meta: { name: 'LwopRequest' } }
    /**
     * Find zero or one LwopRequest that matches the filter.
     * @param {LwopRequestFindUniqueArgs} args - Arguments to find a LwopRequest
     * @example
     * // Get one LwopRequest
     * const lwopRequest = await prisma.lwopRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LwopRequestFindUniqueArgs>(args: SelectSubset<T, LwopRequestFindUniqueArgs<ExtArgs>>): Prisma__LwopRequestClient<$Result.GetResult<Prisma.$LwopRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one LwopRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LwopRequestFindUniqueOrThrowArgs} args - Arguments to find a LwopRequest
     * @example
     * // Get one LwopRequest
     * const lwopRequest = await prisma.lwopRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LwopRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, LwopRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LwopRequestClient<$Result.GetResult<Prisma.$LwopRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LwopRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LwopRequestFindFirstArgs} args - Arguments to find a LwopRequest
     * @example
     * // Get one LwopRequest
     * const lwopRequest = await prisma.lwopRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LwopRequestFindFirstArgs>(args?: SelectSubset<T, LwopRequestFindFirstArgs<ExtArgs>>): Prisma__LwopRequestClient<$Result.GetResult<Prisma.$LwopRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LwopRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LwopRequestFindFirstOrThrowArgs} args - Arguments to find a LwopRequest
     * @example
     * // Get one LwopRequest
     * const lwopRequest = await prisma.lwopRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LwopRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, LwopRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__LwopRequestClient<$Result.GetResult<Prisma.$LwopRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more LwopRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LwopRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LwopRequests
     * const lwopRequests = await prisma.lwopRequest.findMany()
     * 
     * // Get first 10 LwopRequests
     * const lwopRequests = await prisma.lwopRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const lwopRequestWithIdOnly = await prisma.lwopRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LwopRequestFindManyArgs>(args?: SelectSubset<T, LwopRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LwopRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a LwopRequest.
     * @param {LwopRequestCreateArgs} args - Arguments to create a LwopRequest.
     * @example
     * // Create one LwopRequest
     * const LwopRequest = await prisma.lwopRequest.create({
     *   data: {
     *     // ... data to create a LwopRequest
     *   }
     * })
     * 
     */
    create<T extends LwopRequestCreateArgs>(args: SelectSubset<T, LwopRequestCreateArgs<ExtArgs>>): Prisma__LwopRequestClient<$Result.GetResult<Prisma.$LwopRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many LwopRequests.
     * @param {LwopRequestCreateManyArgs} args - Arguments to create many LwopRequests.
     * @example
     * // Create many LwopRequests
     * const lwopRequest = await prisma.lwopRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LwopRequestCreateManyArgs>(args?: SelectSubset<T, LwopRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LwopRequests and returns the data saved in the database.
     * @param {LwopRequestCreateManyAndReturnArgs} args - Arguments to create many LwopRequests.
     * @example
     * // Create many LwopRequests
     * const lwopRequest = await prisma.lwopRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LwopRequests and only return the `id`
     * const lwopRequestWithIdOnly = await prisma.lwopRequest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LwopRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, LwopRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LwopRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a LwopRequest.
     * @param {LwopRequestDeleteArgs} args - Arguments to delete one LwopRequest.
     * @example
     * // Delete one LwopRequest
     * const LwopRequest = await prisma.lwopRequest.delete({
     *   where: {
     *     // ... filter to delete one LwopRequest
     *   }
     * })
     * 
     */
    delete<T extends LwopRequestDeleteArgs>(args: SelectSubset<T, LwopRequestDeleteArgs<ExtArgs>>): Prisma__LwopRequestClient<$Result.GetResult<Prisma.$LwopRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one LwopRequest.
     * @param {LwopRequestUpdateArgs} args - Arguments to update one LwopRequest.
     * @example
     * // Update one LwopRequest
     * const lwopRequest = await prisma.lwopRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LwopRequestUpdateArgs>(args: SelectSubset<T, LwopRequestUpdateArgs<ExtArgs>>): Prisma__LwopRequestClient<$Result.GetResult<Prisma.$LwopRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more LwopRequests.
     * @param {LwopRequestDeleteManyArgs} args - Arguments to filter LwopRequests to delete.
     * @example
     * // Delete a few LwopRequests
     * const { count } = await prisma.lwopRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LwopRequestDeleteManyArgs>(args?: SelectSubset<T, LwopRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LwopRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LwopRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LwopRequests
     * const lwopRequest = await prisma.lwopRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LwopRequestUpdateManyArgs>(args: SelectSubset<T, LwopRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LwopRequests and returns the data updated in the database.
     * @param {LwopRequestUpdateManyAndReturnArgs} args - Arguments to update many LwopRequests.
     * @example
     * // Update many LwopRequests
     * const lwopRequest = await prisma.lwopRequest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more LwopRequests and only return the `id`
     * const lwopRequestWithIdOnly = await prisma.lwopRequest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LwopRequestUpdateManyAndReturnArgs>(args: SelectSubset<T, LwopRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LwopRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one LwopRequest.
     * @param {LwopRequestUpsertArgs} args - Arguments to update or create a LwopRequest.
     * @example
     * // Update or create a LwopRequest
     * const lwopRequest = await prisma.lwopRequest.upsert({
     *   create: {
     *     // ... data to create a LwopRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LwopRequest we want to update
     *   }
     * })
     */
    upsert<T extends LwopRequestUpsertArgs>(args: SelectSubset<T, LwopRequestUpsertArgs<ExtArgs>>): Prisma__LwopRequestClient<$Result.GetResult<Prisma.$LwopRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of LwopRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LwopRequestCountArgs} args - Arguments to filter LwopRequests to count.
     * @example
     * // Count the number of LwopRequests
     * const count = await prisma.lwopRequest.count({
     *   where: {
     *     // ... the filter for the LwopRequests we want to count
     *   }
     * })
    **/
    count<T extends LwopRequestCountArgs>(
      args?: Subset<T, LwopRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LwopRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LwopRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LwopRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LwopRequestAggregateArgs>(args: Subset<T, LwopRequestAggregateArgs>): Prisma.PrismaPromise<GetLwopRequestAggregateType<T>>

    /**
     * Group by LwopRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LwopRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LwopRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LwopRequestGroupByArgs['orderBy'] }
        : { orderBy?: LwopRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LwopRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLwopRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LwopRequest model
   */
  readonly fields: LwopRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LwopRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LwopRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee<T extends EmployeeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmployeeDefaultArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reviewedBy<T extends LwopRequest$reviewedByArgs<ExtArgs> = {}>(args?: Subset<T, LwopRequest$reviewedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    submittedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LwopRequest model
   */
  interface LwopRequestFieldRefs {
    readonly id: FieldRef<"LwopRequest", 'String'>
    readonly status: FieldRef<"LwopRequest", 'String'>
    readonly reviewStage: FieldRef<"LwopRequest", 'String'>
    readonly duration: FieldRef<"LwopRequest", 'String'>
    readonly reason: FieldRef<"LwopRequest", 'String'>
    readonly documents: FieldRef<"LwopRequest", 'String[]'>
    readonly rejectionReason: FieldRef<"LwopRequest", 'String'>
    readonly employeeId: FieldRef<"LwopRequest", 'String'>
    readonly submittedById: FieldRef<"LwopRequest", 'String'>
    readonly reviewedById: FieldRef<"LwopRequest", 'String'>
    readonly createdAt: FieldRef<"LwopRequest", 'DateTime'>
    readonly updatedAt: FieldRef<"LwopRequest", 'DateTime'>
    readonly endDate: FieldRef<"LwopRequest", 'DateTime'>
    readonly startDate: FieldRef<"LwopRequest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * LwopRequest findUnique
   */
  export type LwopRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LwopRequest
     */
    select?: LwopRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LwopRequest
     */
    omit?: LwopRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LwopRequestInclude<ExtArgs> | null
    /**
     * Filter, which LwopRequest to fetch.
     */
    where: LwopRequestWhereUniqueInput
  }

  /**
   * LwopRequest findUniqueOrThrow
   */
  export type LwopRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LwopRequest
     */
    select?: LwopRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LwopRequest
     */
    omit?: LwopRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LwopRequestInclude<ExtArgs> | null
    /**
     * Filter, which LwopRequest to fetch.
     */
    where: LwopRequestWhereUniqueInput
  }

  /**
   * LwopRequest findFirst
   */
  export type LwopRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LwopRequest
     */
    select?: LwopRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LwopRequest
     */
    omit?: LwopRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LwopRequestInclude<ExtArgs> | null
    /**
     * Filter, which LwopRequest to fetch.
     */
    where?: LwopRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LwopRequests to fetch.
     */
    orderBy?: LwopRequestOrderByWithRelationInput | LwopRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LwopRequests.
     */
    cursor?: LwopRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LwopRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LwopRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LwopRequests.
     */
    distinct?: LwopRequestScalarFieldEnum | LwopRequestScalarFieldEnum[]
  }

  /**
   * LwopRequest findFirstOrThrow
   */
  export type LwopRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LwopRequest
     */
    select?: LwopRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LwopRequest
     */
    omit?: LwopRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LwopRequestInclude<ExtArgs> | null
    /**
     * Filter, which LwopRequest to fetch.
     */
    where?: LwopRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LwopRequests to fetch.
     */
    orderBy?: LwopRequestOrderByWithRelationInput | LwopRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LwopRequests.
     */
    cursor?: LwopRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LwopRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LwopRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LwopRequests.
     */
    distinct?: LwopRequestScalarFieldEnum | LwopRequestScalarFieldEnum[]
  }

  /**
   * LwopRequest findMany
   */
  export type LwopRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LwopRequest
     */
    select?: LwopRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LwopRequest
     */
    omit?: LwopRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LwopRequestInclude<ExtArgs> | null
    /**
     * Filter, which LwopRequests to fetch.
     */
    where?: LwopRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LwopRequests to fetch.
     */
    orderBy?: LwopRequestOrderByWithRelationInput | LwopRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LwopRequests.
     */
    cursor?: LwopRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LwopRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LwopRequests.
     */
    skip?: number
    distinct?: LwopRequestScalarFieldEnum | LwopRequestScalarFieldEnum[]
  }

  /**
   * LwopRequest create
   */
  export type LwopRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LwopRequest
     */
    select?: LwopRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LwopRequest
     */
    omit?: LwopRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LwopRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a LwopRequest.
     */
    data: XOR<LwopRequestCreateInput, LwopRequestUncheckedCreateInput>
  }

  /**
   * LwopRequest createMany
   */
  export type LwopRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LwopRequests.
     */
    data: LwopRequestCreateManyInput | LwopRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LwopRequest createManyAndReturn
   */
  export type LwopRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LwopRequest
     */
    select?: LwopRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LwopRequest
     */
    omit?: LwopRequestOmit<ExtArgs> | null
    /**
     * The data used to create many LwopRequests.
     */
    data: LwopRequestCreateManyInput | LwopRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LwopRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * LwopRequest update
   */
  export type LwopRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LwopRequest
     */
    select?: LwopRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LwopRequest
     */
    omit?: LwopRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LwopRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a LwopRequest.
     */
    data: XOR<LwopRequestUpdateInput, LwopRequestUncheckedUpdateInput>
    /**
     * Choose, which LwopRequest to update.
     */
    where: LwopRequestWhereUniqueInput
  }

  /**
   * LwopRequest updateMany
   */
  export type LwopRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LwopRequests.
     */
    data: XOR<LwopRequestUpdateManyMutationInput, LwopRequestUncheckedUpdateManyInput>
    /**
     * Filter which LwopRequests to update
     */
    where?: LwopRequestWhereInput
    /**
     * Limit how many LwopRequests to update.
     */
    limit?: number
  }

  /**
   * LwopRequest updateManyAndReturn
   */
  export type LwopRequestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LwopRequest
     */
    select?: LwopRequestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LwopRequest
     */
    omit?: LwopRequestOmit<ExtArgs> | null
    /**
     * The data used to update LwopRequests.
     */
    data: XOR<LwopRequestUpdateManyMutationInput, LwopRequestUncheckedUpdateManyInput>
    /**
     * Filter which LwopRequests to update
     */
    where?: LwopRequestWhereInput
    /**
     * Limit how many LwopRequests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LwopRequestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * LwopRequest upsert
   */
  export type LwopRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LwopRequest
     */
    select?: LwopRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LwopRequest
     */
    omit?: LwopRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LwopRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the LwopRequest to update in case it exists.
     */
    where: LwopRequestWhereUniqueInput
    /**
     * In case the LwopRequest found by the `where` argument doesn't exist, create a new LwopRequest with this data.
     */
    create: XOR<LwopRequestCreateInput, LwopRequestUncheckedCreateInput>
    /**
     * In case the LwopRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LwopRequestUpdateInput, LwopRequestUncheckedUpdateInput>
  }

  /**
   * LwopRequest delete
   */
  export type LwopRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LwopRequest
     */
    select?: LwopRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LwopRequest
     */
    omit?: LwopRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LwopRequestInclude<ExtArgs> | null
    /**
     * Filter which LwopRequest to delete.
     */
    where: LwopRequestWhereUniqueInput
  }

  /**
   * LwopRequest deleteMany
   */
  export type LwopRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LwopRequests to delete
     */
    where?: LwopRequestWhereInput
    /**
     * Limit how many LwopRequests to delete.
     */
    limit?: number
  }

  /**
   * LwopRequest.reviewedBy
   */
  export type LwopRequest$reviewedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * LwopRequest without action
   */
  export type LwopRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LwopRequest
     */
    select?: LwopRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LwopRequest
     */
    omit?: LwopRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LwopRequestInclude<ExtArgs> | null
  }


  /**
   * Model CadreChangeRequest
   */

  export type AggregateCadreChangeRequest = {
    _count: CadreChangeRequestCountAggregateOutputType | null
    _min: CadreChangeRequestMinAggregateOutputType | null
    _max: CadreChangeRequestMaxAggregateOutputType | null
  }

  export type CadreChangeRequestMinAggregateOutputType = {
    id: string | null
    status: string | null
    reviewStage: string | null
    newCadre: string | null
    reason: string | null
    studiedOutsideCountry: boolean | null
    rejectionReason: string | null
    employeeId: string | null
    submittedById: string | null
    reviewedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CadreChangeRequestMaxAggregateOutputType = {
    id: string | null
    status: string | null
    reviewStage: string | null
    newCadre: string | null
    reason: string | null
    studiedOutsideCountry: boolean | null
    rejectionReason: string | null
    employeeId: string | null
    submittedById: string | null
    reviewedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CadreChangeRequestCountAggregateOutputType = {
    id: number
    status: number
    reviewStage: number
    newCadre: number
    reason: number
    studiedOutsideCountry: number
    documents: number
    rejectionReason: number
    employeeId: number
    submittedById: number
    reviewedById: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CadreChangeRequestMinAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    newCadre?: true
    reason?: true
    studiedOutsideCountry?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CadreChangeRequestMaxAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    newCadre?: true
    reason?: true
    studiedOutsideCountry?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CadreChangeRequestCountAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    newCadre?: true
    reason?: true
    studiedOutsideCountry?: true
    documents?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CadreChangeRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CadreChangeRequest to aggregate.
     */
    where?: CadreChangeRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CadreChangeRequests to fetch.
     */
    orderBy?: CadreChangeRequestOrderByWithRelationInput | CadreChangeRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CadreChangeRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CadreChangeRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CadreChangeRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CadreChangeRequests
    **/
    _count?: true | CadreChangeRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CadreChangeRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CadreChangeRequestMaxAggregateInputType
  }

  export type GetCadreChangeRequestAggregateType<T extends CadreChangeRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateCadreChangeRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCadreChangeRequest[P]>
      : GetScalarType<T[P], AggregateCadreChangeRequest[P]>
  }




  export type CadreChangeRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CadreChangeRequestWhereInput
    orderBy?: CadreChangeRequestOrderByWithAggregationInput | CadreChangeRequestOrderByWithAggregationInput[]
    by: CadreChangeRequestScalarFieldEnum[] | CadreChangeRequestScalarFieldEnum
    having?: CadreChangeRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CadreChangeRequestCountAggregateInputType | true
    _min?: CadreChangeRequestMinAggregateInputType
    _max?: CadreChangeRequestMaxAggregateInputType
  }

  export type CadreChangeRequestGroupByOutputType = {
    id: string
    status: string
    reviewStage: string
    newCadre: string
    reason: string | null
    studiedOutsideCountry: boolean | null
    documents: string[]
    rejectionReason: string | null
    employeeId: string
    submittedById: string
    reviewedById: string | null
    createdAt: Date
    updatedAt: Date
    _count: CadreChangeRequestCountAggregateOutputType | null
    _min: CadreChangeRequestMinAggregateOutputType | null
    _max: CadreChangeRequestMaxAggregateOutputType | null
  }

  type GetCadreChangeRequestGroupByPayload<T extends CadreChangeRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CadreChangeRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CadreChangeRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CadreChangeRequestGroupByOutputType[P]>
            : GetScalarType<T[P], CadreChangeRequestGroupByOutputType[P]>
        }
      >
    >


  export type CadreChangeRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    newCadre?: boolean
    reason?: boolean
    studiedOutsideCountry?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | CadreChangeRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cadreChangeRequest"]>

  export type CadreChangeRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    newCadre?: boolean
    reason?: boolean
    studiedOutsideCountry?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | CadreChangeRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cadreChangeRequest"]>

  export type CadreChangeRequestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    newCadre?: boolean
    reason?: boolean
    studiedOutsideCountry?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | CadreChangeRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cadreChangeRequest"]>

  export type CadreChangeRequestSelectScalar = {
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    newCadre?: boolean
    reason?: boolean
    studiedOutsideCountry?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CadreChangeRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "status" | "reviewStage" | "newCadre" | "reason" | "studiedOutsideCountry" | "documents" | "rejectionReason" | "employeeId" | "submittedById" | "reviewedById" | "createdAt" | "updatedAt", ExtArgs["result"]["cadreChangeRequest"]>
  export type CadreChangeRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | CadreChangeRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CadreChangeRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | CadreChangeRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CadreChangeRequestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | CadreChangeRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $CadreChangeRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CadreChangeRequest"
    objects: {
      employee: Prisma.$EmployeePayload<ExtArgs>
      reviewedBy: Prisma.$UserPayload<ExtArgs> | null
      submittedBy: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      status: string
      reviewStage: string
      newCadre: string
      reason: string | null
      studiedOutsideCountry: boolean | null
      documents: string[]
      rejectionReason: string | null
      employeeId: string
      submittedById: string
      reviewedById: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["cadreChangeRequest"]>
    composites: {}
  }

  type CadreChangeRequestGetPayload<S extends boolean | null | undefined | CadreChangeRequestDefaultArgs> = $Result.GetResult<Prisma.$CadreChangeRequestPayload, S>

  type CadreChangeRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CadreChangeRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CadreChangeRequestCountAggregateInputType | true
    }

  export interface CadreChangeRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CadreChangeRequest'], meta: { name: 'CadreChangeRequest' } }
    /**
     * Find zero or one CadreChangeRequest that matches the filter.
     * @param {CadreChangeRequestFindUniqueArgs} args - Arguments to find a CadreChangeRequest
     * @example
     * // Get one CadreChangeRequest
     * const cadreChangeRequest = await prisma.cadreChangeRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CadreChangeRequestFindUniqueArgs>(args: SelectSubset<T, CadreChangeRequestFindUniqueArgs<ExtArgs>>): Prisma__CadreChangeRequestClient<$Result.GetResult<Prisma.$CadreChangeRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CadreChangeRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CadreChangeRequestFindUniqueOrThrowArgs} args - Arguments to find a CadreChangeRequest
     * @example
     * // Get one CadreChangeRequest
     * const cadreChangeRequest = await prisma.cadreChangeRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CadreChangeRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, CadreChangeRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CadreChangeRequestClient<$Result.GetResult<Prisma.$CadreChangeRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CadreChangeRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CadreChangeRequestFindFirstArgs} args - Arguments to find a CadreChangeRequest
     * @example
     * // Get one CadreChangeRequest
     * const cadreChangeRequest = await prisma.cadreChangeRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CadreChangeRequestFindFirstArgs>(args?: SelectSubset<T, CadreChangeRequestFindFirstArgs<ExtArgs>>): Prisma__CadreChangeRequestClient<$Result.GetResult<Prisma.$CadreChangeRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CadreChangeRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CadreChangeRequestFindFirstOrThrowArgs} args - Arguments to find a CadreChangeRequest
     * @example
     * // Get one CadreChangeRequest
     * const cadreChangeRequest = await prisma.cadreChangeRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CadreChangeRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, CadreChangeRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__CadreChangeRequestClient<$Result.GetResult<Prisma.$CadreChangeRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CadreChangeRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CadreChangeRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CadreChangeRequests
     * const cadreChangeRequests = await prisma.cadreChangeRequest.findMany()
     * 
     * // Get first 10 CadreChangeRequests
     * const cadreChangeRequests = await prisma.cadreChangeRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cadreChangeRequestWithIdOnly = await prisma.cadreChangeRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CadreChangeRequestFindManyArgs>(args?: SelectSubset<T, CadreChangeRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CadreChangeRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CadreChangeRequest.
     * @param {CadreChangeRequestCreateArgs} args - Arguments to create a CadreChangeRequest.
     * @example
     * // Create one CadreChangeRequest
     * const CadreChangeRequest = await prisma.cadreChangeRequest.create({
     *   data: {
     *     // ... data to create a CadreChangeRequest
     *   }
     * })
     * 
     */
    create<T extends CadreChangeRequestCreateArgs>(args: SelectSubset<T, CadreChangeRequestCreateArgs<ExtArgs>>): Prisma__CadreChangeRequestClient<$Result.GetResult<Prisma.$CadreChangeRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CadreChangeRequests.
     * @param {CadreChangeRequestCreateManyArgs} args - Arguments to create many CadreChangeRequests.
     * @example
     * // Create many CadreChangeRequests
     * const cadreChangeRequest = await prisma.cadreChangeRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CadreChangeRequestCreateManyArgs>(args?: SelectSubset<T, CadreChangeRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CadreChangeRequests and returns the data saved in the database.
     * @param {CadreChangeRequestCreateManyAndReturnArgs} args - Arguments to create many CadreChangeRequests.
     * @example
     * // Create many CadreChangeRequests
     * const cadreChangeRequest = await prisma.cadreChangeRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CadreChangeRequests and only return the `id`
     * const cadreChangeRequestWithIdOnly = await prisma.cadreChangeRequest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CadreChangeRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, CadreChangeRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CadreChangeRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CadreChangeRequest.
     * @param {CadreChangeRequestDeleteArgs} args - Arguments to delete one CadreChangeRequest.
     * @example
     * // Delete one CadreChangeRequest
     * const CadreChangeRequest = await prisma.cadreChangeRequest.delete({
     *   where: {
     *     // ... filter to delete one CadreChangeRequest
     *   }
     * })
     * 
     */
    delete<T extends CadreChangeRequestDeleteArgs>(args: SelectSubset<T, CadreChangeRequestDeleteArgs<ExtArgs>>): Prisma__CadreChangeRequestClient<$Result.GetResult<Prisma.$CadreChangeRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CadreChangeRequest.
     * @param {CadreChangeRequestUpdateArgs} args - Arguments to update one CadreChangeRequest.
     * @example
     * // Update one CadreChangeRequest
     * const cadreChangeRequest = await prisma.cadreChangeRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CadreChangeRequestUpdateArgs>(args: SelectSubset<T, CadreChangeRequestUpdateArgs<ExtArgs>>): Prisma__CadreChangeRequestClient<$Result.GetResult<Prisma.$CadreChangeRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CadreChangeRequests.
     * @param {CadreChangeRequestDeleteManyArgs} args - Arguments to filter CadreChangeRequests to delete.
     * @example
     * // Delete a few CadreChangeRequests
     * const { count } = await prisma.cadreChangeRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CadreChangeRequestDeleteManyArgs>(args?: SelectSubset<T, CadreChangeRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CadreChangeRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CadreChangeRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CadreChangeRequests
     * const cadreChangeRequest = await prisma.cadreChangeRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CadreChangeRequestUpdateManyArgs>(args: SelectSubset<T, CadreChangeRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CadreChangeRequests and returns the data updated in the database.
     * @param {CadreChangeRequestUpdateManyAndReturnArgs} args - Arguments to update many CadreChangeRequests.
     * @example
     * // Update many CadreChangeRequests
     * const cadreChangeRequest = await prisma.cadreChangeRequest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CadreChangeRequests and only return the `id`
     * const cadreChangeRequestWithIdOnly = await prisma.cadreChangeRequest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CadreChangeRequestUpdateManyAndReturnArgs>(args: SelectSubset<T, CadreChangeRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CadreChangeRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CadreChangeRequest.
     * @param {CadreChangeRequestUpsertArgs} args - Arguments to update or create a CadreChangeRequest.
     * @example
     * // Update or create a CadreChangeRequest
     * const cadreChangeRequest = await prisma.cadreChangeRequest.upsert({
     *   create: {
     *     // ... data to create a CadreChangeRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CadreChangeRequest we want to update
     *   }
     * })
     */
    upsert<T extends CadreChangeRequestUpsertArgs>(args: SelectSubset<T, CadreChangeRequestUpsertArgs<ExtArgs>>): Prisma__CadreChangeRequestClient<$Result.GetResult<Prisma.$CadreChangeRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CadreChangeRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CadreChangeRequestCountArgs} args - Arguments to filter CadreChangeRequests to count.
     * @example
     * // Count the number of CadreChangeRequests
     * const count = await prisma.cadreChangeRequest.count({
     *   where: {
     *     // ... the filter for the CadreChangeRequests we want to count
     *   }
     * })
    **/
    count<T extends CadreChangeRequestCountArgs>(
      args?: Subset<T, CadreChangeRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CadreChangeRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CadreChangeRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CadreChangeRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CadreChangeRequestAggregateArgs>(args: Subset<T, CadreChangeRequestAggregateArgs>): Prisma.PrismaPromise<GetCadreChangeRequestAggregateType<T>>

    /**
     * Group by CadreChangeRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CadreChangeRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CadreChangeRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CadreChangeRequestGroupByArgs['orderBy'] }
        : { orderBy?: CadreChangeRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CadreChangeRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCadreChangeRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CadreChangeRequest model
   */
  readonly fields: CadreChangeRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CadreChangeRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CadreChangeRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee<T extends EmployeeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmployeeDefaultArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reviewedBy<T extends CadreChangeRequest$reviewedByArgs<ExtArgs> = {}>(args?: Subset<T, CadreChangeRequest$reviewedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    submittedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CadreChangeRequest model
   */
  interface CadreChangeRequestFieldRefs {
    readonly id: FieldRef<"CadreChangeRequest", 'String'>
    readonly status: FieldRef<"CadreChangeRequest", 'String'>
    readonly reviewStage: FieldRef<"CadreChangeRequest", 'String'>
    readonly newCadre: FieldRef<"CadreChangeRequest", 'String'>
    readonly reason: FieldRef<"CadreChangeRequest", 'String'>
    readonly studiedOutsideCountry: FieldRef<"CadreChangeRequest", 'Boolean'>
    readonly documents: FieldRef<"CadreChangeRequest", 'String[]'>
    readonly rejectionReason: FieldRef<"CadreChangeRequest", 'String'>
    readonly employeeId: FieldRef<"CadreChangeRequest", 'String'>
    readonly submittedById: FieldRef<"CadreChangeRequest", 'String'>
    readonly reviewedById: FieldRef<"CadreChangeRequest", 'String'>
    readonly createdAt: FieldRef<"CadreChangeRequest", 'DateTime'>
    readonly updatedAt: FieldRef<"CadreChangeRequest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CadreChangeRequest findUnique
   */
  export type CadreChangeRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CadreChangeRequest
     */
    select?: CadreChangeRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CadreChangeRequest
     */
    omit?: CadreChangeRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CadreChangeRequestInclude<ExtArgs> | null
    /**
     * Filter, which CadreChangeRequest to fetch.
     */
    where: CadreChangeRequestWhereUniqueInput
  }

  /**
   * CadreChangeRequest findUniqueOrThrow
   */
  export type CadreChangeRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CadreChangeRequest
     */
    select?: CadreChangeRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CadreChangeRequest
     */
    omit?: CadreChangeRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CadreChangeRequestInclude<ExtArgs> | null
    /**
     * Filter, which CadreChangeRequest to fetch.
     */
    where: CadreChangeRequestWhereUniqueInput
  }

  /**
   * CadreChangeRequest findFirst
   */
  export type CadreChangeRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CadreChangeRequest
     */
    select?: CadreChangeRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CadreChangeRequest
     */
    omit?: CadreChangeRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CadreChangeRequestInclude<ExtArgs> | null
    /**
     * Filter, which CadreChangeRequest to fetch.
     */
    where?: CadreChangeRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CadreChangeRequests to fetch.
     */
    orderBy?: CadreChangeRequestOrderByWithRelationInput | CadreChangeRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CadreChangeRequests.
     */
    cursor?: CadreChangeRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CadreChangeRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CadreChangeRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CadreChangeRequests.
     */
    distinct?: CadreChangeRequestScalarFieldEnum | CadreChangeRequestScalarFieldEnum[]
  }

  /**
   * CadreChangeRequest findFirstOrThrow
   */
  export type CadreChangeRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CadreChangeRequest
     */
    select?: CadreChangeRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CadreChangeRequest
     */
    omit?: CadreChangeRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CadreChangeRequestInclude<ExtArgs> | null
    /**
     * Filter, which CadreChangeRequest to fetch.
     */
    where?: CadreChangeRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CadreChangeRequests to fetch.
     */
    orderBy?: CadreChangeRequestOrderByWithRelationInput | CadreChangeRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CadreChangeRequests.
     */
    cursor?: CadreChangeRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CadreChangeRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CadreChangeRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CadreChangeRequests.
     */
    distinct?: CadreChangeRequestScalarFieldEnum | CadreChangeRequestScalarFieldEnum[]
  }

  /**
   * CadreChangeRequest findMany
   */
  export type CadreChangeRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CadreChangeRequest
     */
    select?: CadreChangeRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CadreChangeRequest
     */
    omit?: CadreChangeRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CadreChangeRequestInclude<ExtArgs> | null
    /**
     * Filter, which CadreChangeRequests to fetch.
     */
    where?: CadreChangeRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CadreChangeRequests to fetch.
     */
    orderBy?: CadreChangeRequestOrderByWithRelationInput | CadreChangeRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CadreChangeRequests.
     */
    cursor?: CadreChangeRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CadreChangeRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CadreChangeRequests.
     */
    skip?: number
    distinct?: CadreChangeRequestScalarFieldEnum | CadreChangeRequestScalarFieldEnum[]
  }

  /**
   * CadreChangeRequest create
   */
  export type CadreChangeRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CadreChangeRequest
     */
    select?: CadreChangeRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CadreChangeRequest
     */
    omit?: CadreChangeRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CadreChangeRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a CadreChangeRequest.
     */
    data: XOR<CadreChangeRequestCreateInput, CadreChangeRequestUncheckedCreateInput>
  }

  /**
   * CadreChangeRequest createMany
   */
  export type CadreChangeRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CadreChangeRequests.
     */
    data: CadreChangeRequestCreateManyInput | CadreChangeRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CadreChangeRequest createManyAndReturn
   */
  export type CadreChangeRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CadreChangeRequest
     */
    select?: CadreChangeRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CadreChangeRequest
     */
    omit?: CadreChangeRequestOmit<ExtArgs> | null
    /**
     * The data used to create many CadreChangeRequests.
     */
    data: CadreChangeRequestCreateManyInput | CadreChangeRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CadreChangeRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CadreChangeRequest update
   */
  export type CadreChangeRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CadreChangeRequest
     */
    select?: CadreChangeRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CadreChangeRequest
     */
    omit?: CadreChangeRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CadreChangeRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a CadreChangeRequest.
     */
    data: XOR<CadreChangeRequestUpdateInput, CadreChangeRequestUncheckedUpdateInput>
    /**
     * Choose, which CadreChangeRequest to update.
     */
    where: CadreChangeRequestWhereUniqueInput
  }

  /**
   * CadreChangeRequest updateMany
   */
  export type CadreChangeRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CadreChangeRequests.
     */
    data: XOR<CadreChangeRequestUpdateManyMutationInput, CadreChangeRequestUncheckedUpdateManyInput>
    /**
     * Filter which CadreChangeRequests to update
     */
    where?: CadreChangeRequestWhereInput
    /**
     * Limit how many CadreChangeRequests to update.
     */
    limit?: number
  }

  /**
   * CadreChangeRequest updateManyAndReturn
   */
  export type CadreChangeRequestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CadreChangeRequest
     */
    select?: CadreChangeRequestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CadreChangeRequest
     */
    omit?: CadreChangeRequestOmit<ExtArgs> | null
    /**
     * The data used to update CadreChangeRequests.
     */
    data: XOR<CadreChangeRequestUpdateManyMutationInput, CadreChangeRequestUncheckedUpdateManyInput>
    /**
     * Filter which CadreChangeRequests to update
     */
    where?: CadreChangeRequestWhereInput
    /**
     * Limit how many CadreChangeRequests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CadreChangeRequestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CadreChangeRequest upsert
   */
  export type CadreChangeRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CadreChangeRequest
     */
    select?: CadreChangeRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CadreChangeRequest
     */
    omit?: CadreChangeRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CadreChangeRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the CadreChangeRequest to update in case it exists.
     */
    where: CadreChangeRequestWhereUniqueInput
    /**
     * In case the CadreChangeRequest found by the `where` argument doesn't exist, create a new CadreChangeRequest with this data.
     */
    create: XOR<CadreChangeRequestCreateInput, CadreChangeRequestUncheckedCreateInput>
    /**
     * In case the CadreChangeRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CadreChangeRequestUpdateInput, CadreChangeRequestUncheckedUpdateInput>
  }

  /**
   * CadreChangeRequest delete
   */
  export type CadreChangeRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CadreChangeRequest
     */
    select?: CadreChangeRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CadreChangeRequest
     */
    omit?: CadreChangeRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CadreChangeRequestInclude<ExtArgs> | null
    /**
     * Filter which CadreChangeRequest to delete.
     */
    where: CadreChangeRequestWhereUniqueInput
  }

  /**
   * CadreChangeRequest deleteMany
   */
  export type CadreChangeRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CadreChangeRequests to delete
     */
    where?: CadreChangeRequestWhereInput
    /**
     * Limit how many CadreChangeRequests to delete.
     */
    limit?: number
  }

  /**
   * CadreChangeRequest.reviewedBy
   */
  export type CadreChangeRequest$reviewedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * CadreChangeRequest without action
   */
  export type CadreChangeRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CadreChangeRequest
     */
    select?: CadreChangeRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CadreChangeRequest
     */
    omit?: CadreChangeRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CadreChangeRequestInclude<ExtArgs> | null
  }


  /**
   * Model RetirementRequest
   */

  export type AggregateRetirementRequest = {
    _count: RetirementRequestCountAggregateOutputType | null
    _min: RetirementRequestMinAggregateOutputType | null
    _max: RetirementRequestMaxAggregateOutputType | null
  }

  export type RetirementRequestMinAggregateOutputType = {
    id: string | null
    status: string | null
    reviewStage: string | null
    retirementType: string | null
    illnessDescription: string | null
    proposedDate: Date | null
    delayReason: string | null
    rejectionReason: string | null
    employeeId: string | null
    submittedById: string | null
    reviewedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RetirementRequestMaxAggregateOutputType = {
    id: string | null
    status: string | null
    reviewStage: string | null
    retirementType: string | null
    illnessDescription: string | null
    proposedDate: Date | null
    delayReason: string | null
    rejectionReason: string | null
    employeeId: string | null
    submittedById: string | null
    reviewedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RetirementRequestCountAggregateOutputType = {
    id: number
    status: number
    reviewStage: number
    retirementType: number
    illnessDescription: number
    proposedDate: number
    delayReason: number
    documents: number
    rejectionReason: number
    employeeId: number
    submittedById: number
    reviewedById: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RetirementRequestMinAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    retirementType?: true
    illnessDescription?: true
    proposedDate?: true
    delayReason?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RetirementRequestMaxAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    retirementType?: true
    illnessDescription?: true
    proposedDate?: true
    delayReason?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RetirementRequestCountAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    retirementType?: true
    illnessDescription?: true
    proposedDate?: true
    delayReason?: true
    documents?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RetirementRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RetirementRequest to aggregate.
     */
    where?: RetirementRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RetirementRequests to fetch.
     */
    orderBy?: RetirementRequestOrderByWithRelationInput | RetirementRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RetirementRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RetirementRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RetirementRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RetirementRequests
    **/
    _count?: true | RetirementRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RetirementRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RetirementRequestMaxAggregateInputType
  }

  export type GetRetirementRequestAggregateType<T extends RetirementRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateRetirementRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRetirementRequest[P]>
      : GetScalarType<T[P], AggregateRetirementRequest[P]>
  }




  export type RetirementRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RetirementRequestWhereInput
    orderBy?: RetirementRequestOrderByWithAggregationInput | RetirementRequestOrderByWithAggregationInput[]
    by: RetirementRequestScalarFieldEnum[] | RetirementRequestScalarFieldEnum
    having?: RetirementRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RetirementRequestCountAggregateInputType | true
    _min?: RetirementRequestMinAggregateInputType
    _max?: RetirementRequestMaxAggregateInputType
  }

  export type RetirementRequestGroupByOutputType = {
    id: string
    status: string
    reviewStage: string
    retirementType: string
    illnessDescription: string | null
    proposedDate: Date
    delayReason: string | null
    documents: string[]
    rejectionReason: string | null
    employeeId: string
    submittedById: string
    reviewedById: string | null
    createdAt: Date
    updatedAt: Date
    _count: RetirementRequestCountAggregateOutputType | null
    _min: RetirementRequestMinAggregateOutputType | null
    _max: RetirementRequestMaxAggregateOutputType | null
  }

  type GetRetirementRequestGroupByPayload<T extends RetirementRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RetirementRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RetirementRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RetirementRequestGroupByOutputType[P]>
            : GetScalarType<T[P], RetirementRequestGroupByOutputType[P]>
        }
      >
    >


  export type RetirementRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    retirementType?: boolean
    illnessDescription?: boolean
    proposedDate?: boolean
    delayReason?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | RetirementRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["retirementRequest"]>

  export type RetirementRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    retirementType?: boolean
    illnessDescription?: boolean
    proposedDate?: boolean
    delayReason?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | RetirementRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["retirementRequest"]>

  export type RetirementRequestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    retirementType?: boolean
    illnessDescription?: boolean
    proposedDate?: boolean
    delayReason?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | RetirementRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["retirementRequest"]>

  export type RetirementRequestSelectScalar = {
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    retirementType?: boolean
    illnessDescription?: boolean
    proposedDate?: boolean
    delayReason?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RetirementRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "status" | "reviewStage" | "retirementType" | "illnessDescription" | "proposedDate" | "delayReason" | "documents" | "rejectionReason" | "employeeId" | "submittedById" | "reviewedById" | "createdAt" | "updatedAt", ExtArgs["result"]["retirementRequest"]>
  export type RetirementRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | RetirementRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type RetirementRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | RetirementRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type RetirementRequestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | RetirementRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $RetirementRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RetirementRequest"
    objects: {
      employee: Prisma.$EmployeePayload<ExtArgs>
      reviewedBy: Prisma.$UserPayload<ExtArgs> | null
      submittedBy: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      status: string
      reviewStage: string
      retirementType: string
      illnessDescription: string | null
      proposedDate: Date
      delayReason: string | null
      documents: string[]
      rejectionReason: string | null
      employeeId: string
      submittedById: string
      reviewedById: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["retirementRequest"]>
    composites: {}
  }

  type RetirementRequestGetPayload<S extends boolean | null | undefined | RetirementRequestDefaultArgs> = $Result.GetResult<Prisma.$RetirementRequestPayload, S>

  type RetirementRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RetirementRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RetirementRequestCountAggregateInputType | true
    }

  export interface RetirementRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RetirementRequest'], meta: { name: 'RetirementRequest' } }
    /**
     * Find zero or one RetirementRequest that matches the filter.
     * @param {RetirementRequestFindUniqueArgs} args - Arguments to find a RetirementRequest
     * @example
     * // Get one RetirementRequest
     * const retirementRequest = await prisma.retirementRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RetirementRequestFindUniqueArgs>(args: SelectSubset<T, RetirementRequestFindUniqueArgs<ExtArgs>>): Prisma__RetirementRequestClient<$Result.GetResult<Prisma.$RetirementRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RetirementRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RetirementRequestFindUniqueOrThrowArgs} args - Arguments to find a RetirementRequest
     * @example
     * // Get one RetirementRequest
     * const retirementRequest = await prisma.retirementRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RetirementRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, RetirementRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RetirementRequestClient<$Result.GetResult<Prisma.$RetirementRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RetirementRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RetirementRequestFindFirstArgs} args - Arguments to find a RetirementRequest
     * @example
     * // Get one RetirementRequest
     * const retirementRequest = await prisma.retirementRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RetirementRequestFindFirstArgs>(args?: SelectSubset<T, RetirementRequestFindFirstArgs<ExtArgs>>): Prisma__RetirementRequestClient<$Result.GetResult<Prisma.$RetirementRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RetirementRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RetirementRequestFindFirstOrThrowArgs} args - Arguments to find a RetirementRequest
     * @example
     * // Get one RetirementRequest
     * const retirementRequest = await prisma.retirementRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RetirementRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, RetirementRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__RetirementRequestClient<$Result.GetResult<Prisma.$RetirementRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RetirementRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RetirementRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RetirementRequests
     * const retirementRequests = await prisma.retirementRequest.findMany()
     * 
     * // Get first 10 RetirementRequests
     * const retirementRequests = await prisma.retirementRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const retirementRequestWithIdOnly = await prisma.retirementRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RetirementRequestFindManyArgs>(args?: SelectSubset<T, RetirementRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RetirementRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RetirementRequest.
     * @param {RetirementRequestCreateArgs} args - Arguments to create a RetirementRequest.
     * @example
     * // Create one RetirementRequest
     * const RetirementRequest = await prisma.retirementRequest.create({
     *   data: {
     *     // ... data to create a RetirementRequest
     *   }
     * })
     * 
     */
    create<T extends RetirementRequestCreateArgs>(args: SelectSubset<T, RetirementRequestCreateArgs<ExtArgs>>): Prisma__RetirementRequestClient<$Result.GetResult<Prisma.$RetirementRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RetirementRequests.
     * @param {RetirementRequestCreateManyArgs} args - Arguments to create many RetirementRequests.
     * @example
     * // Create many RetirementRequests
     * const retirementRequest = await prisma.retirementRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RetirementRequestCreateManyArgs>(args?: SelectSubset<T, RetirementRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RetirementRequests and returns the data saved in the database.
     * @param {RetirementRequestCreateManyAndReturnArgs} args - Arguments to create many RetirementRequests.
     * @example
     * // Create many RetirementRequests
     * const retirementRequest = await prisma.retirementRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RetirementRequests and only return the `id`
     * const retirementRequestWithIdOnly = await prisma.retirementRequest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RetirementRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, RetirementRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RetirementRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RetirementRequest.
     * @param {RetirementRequestDeleteArgs} args - Arguments to delete one RetirementRequest.
     * @example
     * // Delete one RetirementRequest
     * const RetirementRequest = await prisma.retirementRequest.delete({
     *   where: {
     *     // ... filter to delete one RetirementRequest
     *   }
     * })
     * 
     */
    delete<T extends RetirementRequestDeleteArgs>(args: SelectSubset<T, RetirementRequestDeleteArgs<ExtArgs>>): Prisma__RetirementRequestClient<$Result.GetResult<Prisma.$RetirementRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RetirementRequest.
     * @param {RetirementRequestUpdateArgs} args - Arguments to update one RetirementRequest.
     * @example
     * // Update one RetirementRequest
     * const retirementRequest = await prisma.retirementRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RetirementRequestUpdateArgs>(args: SelectSubset<T, RetirementRequestUpdateArgs<ExtArgs>>): Prisma__RetirementRequestClient<$Result.GetResult<Prisma.$RetirementRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RetirementRequests.
     * @param {RetirementRequestDeleteManyArgs} args - Arguments to filter RetirementRequests to delete.
     * @example
     * // Delete a few RetirementRequests
     * const { count } = await prisma.retirementRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RetirementRequestDeleteManyArgs>(args?: SelectSubset<T, RetirementRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RetirementRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RetirementRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RetirementRequests
     * const retirementRequest = await prisma.retirementRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RetirementRequestUpdateManyArgs>(args: SelectSubset<T, RetirementRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RetirementRequests and returns the data updated in the database.
     * @param {RetirementRequestUpdateManyAndReturnArgs} args - Arguments to update many RetirementRequests.
     * @example
     * // Update many RetirementRequests
     * const retirementRequest = await prisma.retirementRequest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RetirementRequests and only return the `id`
     * const retirementRequestWithIdOnly = await prisma.retirementRequest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RetirementRequestUpdateManyAndReturnArgs>(args: SelectSubset<T, RetirementRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RetirementRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RetirementRequest.
     * @param {RetirementRequestUpsertArgs} args - Arguments to update or create a RetirementRequest.
     * @example
     * // Update or create a RetirementRequest
     * const retirementRequest = await prisma.retirementRequest.upsert({
     *   create: {
     *     // ... data to create a RetirementRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RetirementRequest we want to update
     *   }
     * })
     */
    upsert<T extends RetirementRequestUpsertArgs>(args: SelectSubset<T, RetirementRequestUpsertArgs<ExtArgs>>): Prisma__RetirementRequestClient<$Result.GetResult<Prisma.$RetirementRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RetirementRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RetirementRequestCountArgs} args - Arguments to filter RetirementRequests to count.
     * @example
     * // Count the number of RetirementRequests
     * const count = await prisma.retirementRequest.count({
     *   where: {
     *     // ... the filter for the RetirementRequests we want to count
     *   }
     * })
    **/
    count<T extends RetirementRequestCountArgs>(
      args?: Subset<T, RetirementRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RetirementRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RetirementRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RetirementRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RetirementRequestAggregateArgs>(args: Subset<T, RetirementRequestAggregateArgs>): Prisma.PrismaPromise<GetRetirementRequestAggregateType<T>>

    /**
     * Group by RetirementRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RetirementRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RetirementRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RetirementRequestGroupByArgs['orderBy'] }
        : { orderBy?: RetirementRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RetirementRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRetirementRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RetirementRequest model
   */
  readonly fields: RetirementRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RetirementRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RetirementRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee<T extends EmployeeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmployeeDefaultArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reviewedBy<T extends RetirementRequest$reviewedByArgs<ExtArgs> = {}>(args?: Subset<T, RetirementRequest$reviewedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    submittedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RetirementRequest model
   */
  interface RetirementRequestFieldRefs {
    readonly id: FieldRef<"RetirementRequest", 'String'>
    readonly status: FieldRef<"RetirementRequest", 'String'>
    readonly reviewStage: FieldRef<"RetirementRequest", 'String'>
    readonly retirementType: FieldRef<"RetirementRequest", 'String'>
    readonly illnessDescription: FieldRef<"RetirementRequest", 'String'>
    readonly proposedDate: FieldRef<"RetirementRequest", 'DateTime'>
    readonly delayReason: FieldRef<"RetirementRequest", 'String'>
    readonly documents: FieldRef<"RetirementRequest", 'String[]'>
    readonly rejectionReason: FieldRef<"RetirementRequest", 'String'>
    readonly employeeId: FieldRef<"RetirementRequest", 'String'>
    readonly submittedById: FieldRef<"RetirementRequest", 'String'>
    readonly reviewedById: FieldRef<"RetirementRequest", 'String'>
    readonly createdAt: FieldRef<"RetirementRequest", 'DateTime'>
    readonly updatedAt: FieldRef<"RetirementRequest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RetirementRequest findUnique
   */
  export type RetirementRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RetirementRequest
     */
    select?: RetirementRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RetirementRequest
     */
    omit?: RetirementRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RetirementRequestInclude<ExtArgs> | null
    /**
     * Filter, which RetirementRequest to fetch.
     */
    where: RetirementRequestWhereUniqueInput
  }

  /**
   * RetirementRequest findUniqueOrThrow
   */
  export type RetirementRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RetirementRequest
     */
    select?: RetirementRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RetirementRequest
     */
    omit?: RetirementRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RetirementRequestInclude<ExtArgs> | null
    /**
     * Filter, which RetirementRequest to fetch.
     */
    where: RetirementRequestWhereUniqueInput
  }

  /**
   * RetirementRequest findFirst
   */
  export type RetirementRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RetirementRequest
     */
    select?: RetirementRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RetirementRequest
     */
    omit?: RetirementRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RetirementRequestInclude<ExtArgs> | null
    /**
     * Filter, which RetirementRequest to fetch.
     */
    where?: RetirementRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RetirementRequests to fetch.
     */
    orderBy?: RetirementRequestOrderByWithRelationInput | RetirementRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RetirementRequests.
     */
    cursor?: RetirementRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RetirementRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RetirementRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RetirementRequests.
     */
    distinct?: RetirementRequestScalarFieldEnum | RetirementRequestScalarFieldEnum[]
  }

  /**
   * RetirementRequest findFirstOrThrow
   */
  export type RetirementRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RetirementRequest
     */
    select?: RetirementRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RetirementRequest
     */
    omit?: RetirementRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RetirementRequestInclude<ExtArgs> | null
    /**
     * Filter, which RetirementRequest to fetch.
     */
    where?: RetirementRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RetirementRequests to fetch.
     */
    orderBy?: RetirementRequestOrderByWithRelationInput | RetirementRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RetirementRequests.
     */
    cursor?: RetirementRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RetirementRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RetirementRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RetirementRequests.
     */
    distinct?: RetirementRequestScalarFieldEnum | RetirementRequestScalarFieldEnum[]
  }

  /**
   * RetirementRequest findMany
   */
  export type RetirementRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RetirementRequest
     */
    select?: RetirementRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RetirementRequest
     */
    omit?: RetirementRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RetirementRequestInclude<ExtArgs> | null
    /**
     * Filter, which RetirementRequests to fetch.
     */
    where?: RetirementRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RetirementRequests to fetch.
     */
    orderBy?: RetirementRequestOrderByWithRelationInput | RetirementRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RetirementRequests.
     */
    cursor?: RetirementRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RetirementRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RetirementRequests.
     */
    skip?: number
    distinct?: RetirementRequestScalarFieldEnum | RetirementRequestScalarFieldEnum[]
  }

  /**
   * RetirementRequest create
   */
  export type RetirementRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RetirementRequest
     */
    select?: RetirementRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RetirementRequest
     */
    omit?: RetirementRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RetirementRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a RetirementRequest.
     */
    data: XOR<RetirementRequestCreateInput, RetirementRequestUncheckedCreateInput>
  }

  /**
   * RetirementRequest createMany
   */
  export type RetirementRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RetirementRequests.
     */
    data: RetirementRequestCreateManyInput | RetirementRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RetirementRequest createManyAndReturn
   */
  export type RetirementRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RetirementRequest
     */
    select?: RetirementRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RetirementRequest
     */
    omit?: RetirementRequestOmit<ExtArgs> | null
    /**
     * The data used to create many RetirementRequests.
     */
    data: RetirementRequestCreateManyInput | RetirementRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RetirementRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RetirementRequest update
   */
  export type RetirementRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RetirementRequest
     */
    select?: RetirementRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RetirementRequest
     */
    omit?: RetirementRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RetirementRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a RetirementRequest.
     */
    data: XOR<RetirementRequestUpdateInput, RetirementRequestUncheckedUpdateInput>
    /**
     * Choose, which RetirementRequest to update.
     */
    where: RetirementRequestWhereUniqueInput
  }

  /**
   * RetirementRequest updateMany
   */
  export type RetirementRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RetirementRequests.
     */
    data: XOR<RetirementRequestUpdateManyMutationInput, RetirementRequestUncheckedUpdateManyInput>
    /**
     * Filter which RetirementRequests to update
     */
    where?: RetirementRequestWhereInput
    /**
     * Limit how many RetirementRequests to update.
     */
    limit?: number
  }

  /**
   * RetirementRequest updateManyAndReturn
   */
  export type RetirementRequestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RetirementRequest
     */
    select?: RetirementRequestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RetirementRequest
     */
    omit?: RetirementRequestOmit<ExtArgs> | null
    /**
     * The data used to update RetirementRequests.
     */
    data: XOR<RetirementRequestUpdateManyMutationInput, RetirementRequestUncheckedUpdateManyInput>
    /**
     * Filter which RetirementRequests to update
     */
    where?: RetirementRequestWhereInput
    /**
     * Limit how many RetirementRequests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RetirementRequestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RetirementRequest upsert
   */
  export type RetirementRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RetirementRequest
     */
    select?: RetirementRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RetirementRequest
     */
    omit?: RetirementRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RetirementRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the RetirementRequest to update in case it exists.
     */
    where: RetirementRequestWhereUniqueInput
    /**
     * In case the RetirementRequest found by the `where` argument doesn't exist, create a new RetirementRequest with this data.
     */
    create: XOR<RetirementRequestCreateInput, RetirementRequestUncheckedCreateInput>
    /**
     * In case the RetirementRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RetirementRequestUpdateInput, RetirementRequestUncheckedUpdateInput>
  }

  /**
   * RetirementRequest delete
   */
  export type RetirementRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RetirementRequest
     */
    select?: RetirementRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RetirementRequest
     */
    omit?: RetirementRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RetirementRequestInclude<ExtArgs> | null
    /**
     * Filter which RetirementRequest to delete.
     */
    where: RetirementRequestWhereUniqueInput
  }

  /**
   * RetirementRequest deleteMany
   */
  export type RetirementRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RetirementRequests to delete
     */
    where?: RetirementRequestWhereInput
    /**
     * Limit how many RetirementRequests to delete.
     */
    limit?: number
  }

  /**
   * RetirementRequest.reviewedBy
   */
  export type RetirementRequest$reviewedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * RetirementRequest without action
   */
  export type RetirementRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RetirementRequest
     */
    select?: RetirementRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RetirementRequest
     */
    omit?: RetirementRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RetirementRequestInclude<ExtArgs> | null
  }


  /**
   * Model ResignationRequest
   */

  export type AggregateResignationRequest = {
    _count: ResignationRequestCountAggregateOutputType | null
    _min: ResignationRequestMinAggregateOutputType | null
    _max: ResignationRequestMaxAggregateOutputType | null
  }

  export type ResignationRequestMinAggregateOutputType = {
    id: string | null
    status: string | null
    reviewStage: string | null
    effectiveDate: Date | null
    reason: string | null
    rejectionReason: string | null
    employeeId: string | null
    submittedById: string | null
    reviewedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ResignationRequestMaxAggregateOutputType = {
    id: string | null
    status: string | null
    reviewStage: string | null
    effectiveDate: Date | null
    reason: string | null
    rejectionReason: string | null
    employeeId: string | null
    submittedById: string | null
    reviewedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ResignationRequestCountAggregateOutputType = {
    id: number
    status: number
    reviewStage: number
    effectiveDate: number
    reason: number
    documents: number
    rejectionReason: number
    employeeId: number
    submittedById: number
    reviewedById: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ResignationRequestMinAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    effectiveDate?: true
    reason?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ResignationRequestMaxAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    effectiveDate?: true
    reason?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ResignationRequestCountAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    effectiveDate?: true
    reason?: true
    documents?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ResignationRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ResignationRequest to aggregate.
     */
    where?: ResignationRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResignationRequests to fetch.
     */
    orderBy?: ResignationRequestOrderByWithRelationInput | ResignationRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ResignationRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResignationRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResignationRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ResignationRequests
    **/
    _count?: true | ResignationRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ResignationRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ResignationRequestMaxAggregateInputType
  }

  export type GetResignationRequestAggregateType<T extends ResignationRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateResignationRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateResignationRequest[P]>
      : GetScalarType<T[P], AggregateResignationRequest[P]>
  }




  export type ResignationRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ResignationRequestWhereInput
    orderBy?: ResignationRequestOrderByWithAggregationInput | ResignationRequestOrderByWithAggregationInput[]
    by: ResignationRequestScalarFieldEnum[] | ResignationRequestScalarFieldEnum
    having?: ResignationRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ResignationRequestCountAggregateInputType | true
    _min?: ResignationRequestMinAggregateInputType
    _max?: ResignationRequestMaxAggregateInputType
  }

  export type ResignationRequestGroupByOutputType = {
    id: string
    status: string
    reviewStage: string
    effectiveDate: Date
    reason: string | null
    documents: string[]
    rejectionReason: string | null
    employeeId: string
    submittedById: string
    reviewedById: string | null
    createdAt: Date
    updatedAt: Date
    _count: ResignationRequestCountAggregateOutputType | null
    _min: ResignationRequestMinAggregateOutputType | null
    _max: ResignationRequestMaxAggregateOutputType | null
  }

  type GetResignationRequestGroupByPayload<T extends ResignationRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ResignationRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ResignationRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ResignationRequestGroupByOutputType[P]>
            : GetScalarType<T[P], ResignationRequestGroupByOutputType[P]>
        }
      >
    >


  export type ResignationRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    effectiveDate?: boolean
    reason?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ResignationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["resignationRequest"]>

  export type ResignationRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    effectiveDate?: boolean
    reason?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ResignationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["resignationRequest"]>

  export type ResignationRequestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    effectiveDate?: boolean
    reason?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ResignationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["resignationRequest"]>

  export type ResignationRequestSelectScalar = {
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    effectiveDate?: boolean
    reason?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ResignationRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "status" | "reviewStage" | "effectiveDate" | "reason" | "documents" | "rejectionReason" | "employeeId" | "submittedById" | "reviewedById" | "createdAt" | "updatedAt", ExtArgs["result"]["resignationRequest"]>
  export type ResignationRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ResignationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ResignationRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ResignationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ResignationRequestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ResignationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ResignationRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ResignationRequest"
    objects: {
      employee: Prisma.$EmployeePayload<ExtArgs>
      reviewedBy: Prisma.$UserPayload<ExtArgs> | null
      submittedBy: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      status: string
      reviewStage: string
      effectiveDate: Date
      reason: string | null
      documents: string[]
      rejectionReason: string | null
      employeeId: string
      submittedById: string
      reviewedById: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["resignationRequest"]>
    composites: {}
  }

  type ResignationRequestGetPayload<S extends boolean | null | undefined | ResignationRequestDefaultArgs> = $Result.GetResult<Prisma.$ResignationRequestPayload, S>

  type ResignationRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ResignationRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ResignationRequestCountAggregateInputType | true
    }

  export interface ResignationRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ResignationRequest'], meta: { name: 'ResignationRequest' } }
    /**
     * Find zero or one ResignationRequest that matches the filter.
     * @param {ResignationRequestFindUniqueArgs} args - Arguments to find a ResignationRequest
     * @example
     * // Get one ResignationRequest
     * const resignationRequest = await prisma.resignationRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ResignationRequestFindUniqueArgs>(args: SelectSubset<T, ResignationRequestFindUniqueArgs<ExtArgs>>): Prisma__ResignationRequestClient<$Result.GetResult<Prisma.$ResignationRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ResignationRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ResignationRequestFindUniqueOrThrowArgs} args - Arguments to find a ResignationRequest
     * @example
     * // Get one ResignationRequest
     * const resignationRequest = await prisma.resignationRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ResignationRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, ResignationRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ResignationRequestClient<$Result.GetResult<Prisma.$ResignationRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ResignationRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResignationRequestFindFirstArgs} args - Arguments to find a ResignationRequest
     * @example
     * // Get one ResignationRequest
     * const resignationRequest = await prisma.resignationRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ResignationRequestFindFirstArgs>(args?: SelectSubset<T, ResignationRequestFindFirstArgs<ExtArgs>>): Prisma__ResignationRequestClient<$Result.GetResult<Prisma.$ResignationRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ResignationRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResignationRequestFindFirstOrThrowArgs} args - Arguments to find a ResignationRequest
     * @example
     * // Get one ResignationRequest
     * const resignationRequest = await prisma.resignationRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ResignationRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, ResignationRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__ResignationRequestClient<$Result.GetResult<Prisma.$ResignationRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ResignationRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResignationRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ResignationRequests
     * const resignationRequests = await prisma.resignationRequest.findMany()
     * 
     * // Get first 10 ResignationRequests
     * const resignationRequests = await prisma.resignationRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const resignationRequestWithIdOnly = await prisma.resignationRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ResignationRequestFindManyArgs>(args?: SelectSubset<T, ResignationRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResignationRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ResignationRequest.
     * @param {ResignationRequestCreateArgs} args - Arguments to create a ResignationRequest.
     * @example
     * // Create one ResignationRequest
     * const ResignationRequest = await prisma.resignationRequest.create({
     *   data: {
     *     // ... data to create a ResignationRequest
     *   }
     * })
     * 
     */
    create<T extends ResignationRequestCreateArgs>(args: SelectSubset<T, ResignationRequestCreateArgs<ExtArgs>>): Prisma__ResignationRequestClient<$Result.GetResult<Prisma.$ResignationRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ResignationRequests.
     * @param {ResignationRequestCreateManyArgs} args - Arguments to create many ResignationRequests.
     * @example
     * // Create many ResignationRequests
     * const resignationRequest = await prisma.resignationRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ResignationRequestCreateManyArgs>(args?: SelectSubset<T, ResignationRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ResignationRequests and returns the data saved in the database.
     * @param {ResignationRequestCreateManyAndReturnArgs} args - Arguments to create many ResignationRequests.
     * @example
     * // Create many ResignationRequests
     * const resignationRequest = await prisma.resignationRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ResignationRequests and only return the `id`
     * const resignationRequestWithIdOnly = await prisma.resignationRequest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ResignationRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, ResignationRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResignationRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ResignationRequest.
     * @param {ResignationRequestDeleteArgs} args - Arguments to delete one ResignationRequest.
     * @example
     * // Delete one ResignationRequest
     * const ResignationRequest = await prisma.resignationRequest.delete({
     *   where: {
     *     // ... filter to delete one ResignationRequest
     *   }
     * })
     * 
     */
    delete<T extends ResignationRequestDeleteArgs>(args: SelectSubset<T, ResignationRequestDeleteArgs<ExtArgs>>): Prisma__ResignationRequestClient<$Result.GetResult<Prisma.$ResignationRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ResignationRequest.
     * @param {ResignationRequestUpdateArgs} args - Arguments to update one ResignationRequest.
     * @example
     * // Update one ResignationRequest
     * const resignationRequest = await prisma.resignationRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ResignationRequestUpdateArgs>(args: SelectSubset<T, ResignationRequestUpdateArgs<ExtArgs>>): Prisma__ResignationRequestClient<$Result.GetResult<Prisma.$ResignationRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ResignationRequests.
     * @param {ResignationRequestDeleteManyArgs} args - Arguments to filter ResignationRequests to delete.
     * @example
     * // Delete a few ResignationRequests
     * const { count } = await prisma.resignationRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ResignationRequestDeleteManyArgs>(args?: SelectSubset<T, ResignationRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ResignationRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResignationRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ResignationRequests
     * const resignationRequest = await prisma.resignationRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ResignationRequestUpdateManyArgs>(args: SelectSubset<T, ResignationRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ResignationRequests and returns the data updated in the database.
     * @param {ResignationRequestUpdateManyAndReturnArgs} args - Arguments to update many ResignationRequests.
     * @example
     * // Update many ResignationRequests
     * const resignationRequest = await prisma.resignationRequest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ResignationRequests and only return the `id`
     * const resignationRequestWithIdOnly = await prisma.resignationRequest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ResignationRequestUpdateManyAndReturnArgs>(args: SelectSubset<T, ResignationRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResignationRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ResignationRequest.
     * @param {ResignationRequestUpsertArgs} args - Arguments to update or create a ResignationRequest.
     * @example
     * // Update or create a ResignationRequest
     * const resignationRequest = await prisma.resignationRequest.upsert({
     *   create: {
     *     // ... data to create a ResignationRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ResignationRequest we want to update
     *   }
     * })
     */
    upsert<T extends ResignationRequestUpsertArgs>(args: SelectSubset<T, ResignationRequestUpsertArgs<ExtArgs>>): Prisma__ResignationRequestClient<$Result.GetResult<Prisma.$ResignationRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ResignationRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResignationRequestCountArgs} args - Arguments to filter ResignationRequests to count.
     * @example
     * // Count the number of ResignationRequests
     * const count = await prisma.resignationRequest.count({
     *   where: {
     *     // ... the filter for the ResignationRequests we want to count
     *   }
     * })
    **/
    count<T extends ResignationRequestCountArgs>(
      args?: Subset<T, ResignationRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ResignationRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ResignationRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResignationRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ResignationRequestAggregateArgs>(args: Subset<T, ResignationRequestAggregateArgs>): Prisma.PrismaPromise<GetResignationRequestAggregateType<T>>

    /**
     * Group by ResignationRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResignationRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ResignationRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ResignationRequestGroupByArgs['orderBy'] }
        : { orderBy?: ResignationRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ResignationRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetResignationRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ResignationRequest model
   */
  readonly fields: ResignationRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ResignationRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ResignationRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee<T extends EmployeeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmployeeDefaultArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reviewedBy<T extends ResignationRequest$reviewedByArgs<ExtArgs> = {}>(args?: Subset<T, ResignationRequest$reviewedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    submittedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ResignationRequest model
   */
  interface ResignationRequestFieldRefs {
    readonly id: FieldRef<"ResignationRequest", 'String'>
    readonly status: FieldRef<"ResignationRequest", 'String'>
    readonly reviewStage: FieldRef<"ResignationRequest", 'String'>
    readonly effectiveDate: FieldRef<"ResignationRequest", 'DateTime'>
    readonly reason: FieldRef<"ResignationRequest", 'String'>
    readonly documents: FieldRef<"ResignationRequest", 'String[]'>
    readonly rejectionReason: FieldRef<"ResignationRequest", 'String'>
    readonly employeeId: FieldRef<"ResignationRequest", 'String'>
    readonly submittedById: FieldRef<"ResignationRequest", 'String'>
    readonly reviewedById: FieldRef<"ResignationRequest", 'String'>
    readonly createdAt: FieldRef<"ResignationRequest", 'DateTime'>
    readonly updatedAt: FieldRef<"ResignationRequest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ResignationRequest findUnique
   */
  export type ResignationRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResignationRequest
     */
    select?: ResignationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResignationRequest
     */
    omit?: ResignationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResignationRequestInclude<ExtArgs> | null
    /**
     * Filter, which ResignationRequest to fetch.
     */
    where: ResignationRequestWhereUniqueInput
  }

  /**
   * ResignationRequest findUniqueOrThrow
   */
  export type ResignationRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResignationRequest
     */
    select?: ResignationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResignationRequest
     */
    omit?: ResignationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResignationRequestInclude<ExtArgs> | null
    /**
     * Filter, which ResignationRequest to fetch.
     */
    where: ResignationRequestWhereUniqueInput
  }

  /**
   * ResignationRequest findFirst
   */
  export type ResignationRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResignationRequest
     */
    select?: ResignationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResignationRequest
     */
    omit?: ResignationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResignationRequestInclude<ExtArgs> | null
    /**
     * Filter, which ResignationRequest to fetch.
     */
    where?: ResignationRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResignationRequests to fetch.
     */
    orderBy?: ResignationRequestOrderByWithRelationInput | ResignationRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ResignationRequests.
     */
    cursor?: ResignationRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResignationRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResignationRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ResignationRequests.
     */
    distinct?: ResignationRequestScalarFieldEnum | ResignationRequestScalarFieldEnum[]
  }

  /**
   * ResignationRequest findFirstOrThrow
   */
  export type ResignationRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResignationRequest
     */
    select?: ResignationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResignationRequest
     */
    omit?: ResignationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResignationRequestInclude<ExtArgs> | null
    /**
     * Filter, which ResignationRequest to fetch.
     */
    where?: ResignationRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResignationRequests to fetch.
     */
    orderBy?: ResignationRequestOrderByWithRelationInput | ResignationRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ResignationRequests.
     */
    cursor?: ResignationRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResignationRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResignationRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ResignationRequests.
     */
    distinct?: ResignationRequestScalarFieldEnum | ResignationRequestScalarFieldEnum[]
  }

  /**
   * ResignationRequest findMany
   */
  export type ResignationRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResignationRequest
     */
    select?: ResignationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResignationRequest
     */
    omit?: ResignationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResignationRequestInclude<ExtArgs> | null
    /**
     * Filter, which ResignationRequests to fetch.
     */
    where?: ResignationRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResignationRequests to fetch.
     */
    orderBy?: ResignationRequestOrderByWithRelationInput | ResignationRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ResignationRequests.
     */
    cursor?: ResignationRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResignationRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResignationRequests.
     */
    skip?: number
    distinct?: ResignationRequestScalarFieldEnum | ResignationRequestScalarFieldEnum[]
  }

  /**
   * ResignationRequest create
   */
  export type ResignationRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResignationRequest
     */
    select?: ResignationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResignationRequest
     */
    omit?: ResignationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResignationRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a ResignationRequest.
     */
    data: XOR<ResignationRequestCreateInput, ResignationRequestUncheckedCreateInput>
  }

  /**
   * ResignationRequest createMany
   */
  export type ResignationRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ResignationRequests.
     */
    data: ResignationRequestCreateManyInput | ResignationRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ResignationRequest createManyAndReturn
   */
  export type ResignationRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResignationRequest
     */
    select?: ResignationRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ResignationRequest
     */
    omit?: ResignationRequestOmit<ExtArgs> | null
    /**
     * The data used to create many ResignationRequests.
     */
    data: ResignationRequestCreateManyInput | ResignationRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResignationRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ResignationRequest update
   */
  export type ResignationRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResignationRequest
     */
    select?: ResignationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResignationRequest
     */
    omit?: ResignationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResignationRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a ResignationRequest.
     */
    data: XOR<ResignationRequestUpdateInput, ResignationRequestUncheckedUpdateInput>
    /**
     * Choose, which ResignationRequest to update.
     */
    where: ResignationRequestWhereUniqueInput
  }

  /**
   * ResignationRequest updateMany
   */
  export type ResignationRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ResignationRequests.
     */
    data: XOR<ResignationRequestUpdateManyMutationInput, ResignationRequestUncheckedUpdateManyInput>
    /**
     * Filter which ResignationRequests to update
     */
    where?: ResignationRequestWhereInput
    /**
     * Limit how many ResignationRequests to update.
     */
    limit?: number
  }

  /**
   * ResignationRequest updateManyAndReturn
   */
  export type ResignationRequestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResignationRequest
     */
    select?: ResignationRequestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ResignationRequest
     */
    omit?: ResignationRequestOmit<ExtArgs> | null
    /**
     * The data used to update ResignationRequests.
     */
    data: XOR<ResignationRequestUpdateManyMutationInput, ResignationRequestUncheckedUpdateManyInput>
    /**
     * Filter which ResignationRequests to update
     */
    where?: ResignationRequestWhereInput
    /**
     * Limit how many ResignationRequests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResignationRequestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ResignationRequest upsert
   */
  export type ResignationRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResignationRequest
     */
    select?: ResignationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResignationRequest
     */
    omit?: ResignationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResignationRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the ResignationRequest to update in case it exists.
     */
    where: ResignationRequestWhereUniqueInput
    /**
     * In case the ResignationRequest found by the `where` argument doesn't exist, create a new ResignationRequest with this data.
     */
    create: XOR<ResignationRequestCreateInput, ResignationRequestUncheckedCreateInput>
    /**
     * In case the ResignationRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ResignationRequestUpdateInput, ResignationRequestUncheckedUpdateInput>
  }

  /**
   * ResignationRequest delete
   */
  export type ResignationRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResignationRequest
     */
    select?: ResignationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResignationRequest
     */
    omit?: ResignationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResignationRequestInclude<ExtArgs> | null
    /**
     * Filter which ResignationRequest to delete.
     */
    where: ResignationRequestWhereUniqueInput
  }

  /**
   * ResignationRequest deleteMany
   */
  export type ResignationRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ResignationRequests to delete
     */
    where?: ResignationRequestWhereInput
    /**
     * Limit how many ResignationRequests to delete.
     */
    limit?: number
  }

  /**
   * ResignationRequest.reviewedBy
   */
  export type ResignationRequest$reviewedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ResignationRequest without action
   */
  export type ResignationRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResignationRequest
     */
    select?: ResignationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResignationRequest
     */
    omit?: ResignationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResignationRequestInclude<ExtArgs> | null
  }


  /**
   * Model ServiceExtensionRequest
   */

  export type AggregateServiceExtensionRequest = {
    _count: ServiceExtensionRequestCountAggregateOutputType | null
    _min: ServiceExtensionRequestMinAggregateOutputType | null
    _max: ServiceExtensionRequestMaxAggregateOutputType | null
  }

  export type ServiceExtensionRequestMinAggregateOutputType = {
    id: string | null
    status: string | null
    reviewStage: string | null
    currentRetirementDate: Date | null
    requestedExtensionPeriod: string | null
    justification: string | null
    rejectionReason: string | null
    employeeId: string | null
    submittedById: string | null
    reviewedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ServiceExtensionRequestMaxAggregateOutputType = {
    id: string | null
    status: string | null
    reviewStage: string | null
    currentRetirementDate: Date | null
    requestedExtensionPeriod: string | null
    justification: string | null
    rejectionReason: string | null
    employeeId: string | null
    submittedById: string | null
    reviewedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ServiceExtensionRequestCountAggregateOutputType = {
    id: number
    status: number
    reviewStage: number
    currentRetirementDate: number
    requestedExtensionPeriod: number
    justification: number
    documents: number
    rejectionReason: number
    employeeId: number
    submittedById: number
    reviewedById: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ServiceExtensionRequestMinAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    currentRetirementDate?: true
    requestedExtensionPeriod?: true
    justification?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ServiceExtensionRequestMaxAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    currentRetirementDate?: true
    requestedExtensionPeriod?: true
    justification?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ServiceExtensionRequestCountAggregateInputType = {
    id?: true
    status?: true
    reviewStage?: true
    currentRetirementDate?: true
    requestedExtensionPeriod?: true
    justification?: true
    documents?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ServiceExtensionRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ServiceExtensionRequest to aggregate.
     */
    where?: ServiceExtensionRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceExtensionRequests to fetch.
     */
    orderBy?: ServiceExtensionRequestOrderByWithRelationInput | ServiceExtensionRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ServiceExtensionRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceExtensionRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceExtensionRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ServiceExtensionRequests
    **/
    _count?: true | ServiceExtensionRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServiceExtensionRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServiceExtensionRequestMaxAggregateInputType
  }

  export type GetServiceExtensionRequestAggregateType<T extends ServiceExtensionRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateServiceExtensionRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateServiceExtensionRequest[P]>
      : GetScalarType<T[P], AggregateServiceExtensionRequest[P]>
  }




  export type ServiceExtensionRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceExtensionRequestWhereInput
    orderBy?: ServiceExtensionRequestOrderByWithAggregationInput | ServiceExtensionRequestOrderByWithAggregationInput[]
    by: ServiceExtensionRequestScalarFieldEnum[] | ServiceExtensionRequestScalarFieldEnum
    having?: ServiceExtensionRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServiceExtensionRequestCountAggregateInputType | true
    _min?: ServiceExtensionRequestMinAggregateInputType
    _max?: ServiceExtensionRequestMaxAggregateInputType
  }

  export type ServiceExtensionRequestGroupByOutputType = {
    id: string
    status: string
    reviewStage: string
    currentRetirementDate: Date
    requestedExtensionPeriod: string
    justification: string
    documents: string[]
    rejectionReason: string | null
    employeeId: string
    submittedById: string
    reviewedById: string | null
    createdAt: Date
    updatedAt: Date
    _count: ServiceExtensionRequestCountAggregateOutputType | null
    _min: ServiceExtensionRequestMinAggregateOutputType | null
    _max: ServiceExtensionRequestMaxAggregateOutputType | null
  }

  type GetServiceExtensionRequestGroupByPayload<T extends ServiceExtensionRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServiceExtensionRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServiceExtensionRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServiceExtensionRequestGroupByOutputType[P]>
            : GetScalarType<T[P], ServiceExtensionRequestGroupByOutputType[P]>
        }
      >
    >


  export type ServiceExtensionRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    currentRetirementDate?: boolean
    requestedExtensionPeriod?: boolean
    justification?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ServiceExtensionRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceExtensionRequest"]>

  export type ServiceExtensionRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    currentRetirementDate?: boolean
    requestedExtensionPeriod?: boolean
    justification?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ServiceExtensionRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceExtensionRequest"]>

  export type ServiceExtensionRequestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    currentRetirementDate?: boolean
    requestedExtensionPeriod?: boolean
    justification?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ServiceExtensionRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceExtensionRequest"]>

  export type ServiceExtensionRequestSelectScalar = {
    id?: boolean
    status?: boolean
    reviewStage?: boolean
    currentRetirementDate?: boolean
    requestedExtensionPeriod?: boolean
    justification?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ServiceExtensionRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "status" | "reviewStage" | "currentRetirementDate" | "requestedExtensionPeriod" | "justification" | "documents" | "rejectionReason" | "employeeId" | "submittedById" | "reviewedById" | "createdAt" | "updatedAt", ExtArgs["result"]["serviceExtensionRequest"]>
  export type ServiceExtensionRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ServiceExtensionRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ServiceExtensionRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ServiceExtensionRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ServiceExtensionRequestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | ServiceExtensionRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ServiceExtensionRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ServiceExtensionRequest"
    objects: {
      employee: Prisma.$EmployeePayload<ExtArgs>
      reviewedBy: Prisma.$UserPayload<ExtArgs> | null
      submittedBy: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      status: string
      reviewStage: string
      currentRetirementDate: Date
      requestedExtensionPeriod: string
      justification: string
      documents: string[]
      rejectionReason: string | null
      employeeId: string
      submittedById: string
      reviewedById: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["serviceExtensionRequest"]>
    composites: {}
  }

  type ServiceExtensionRequestGetPayload<S extends boolean | null | undefined | ServiceExtensionRequestDefaultArgs> = $Result.GetResult<Prisma.$ServiceExtensionRequestPayload, S>

  type ServiceExtensionRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ServiceExtensionRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ServiceExtensionRequestCountAggregateInputType | true
    }

  export interface ServiceExtensionRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ServiceExtensionRequest'], meta: { name: 'ServiceExtensionRequest' } }
    /**
     * Find zero or one ServiceExtensionRequest that matches the filter.
     * @param {ServiceExtensionRequestFindUniqueArgs} args - Arguments to find a ServiceExtensionRequest
     * @example
     * // Get one ServiceExtensionRequest
     * const serviceExtensionRequest = await prisma.serviceExtensionRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ServiceExtensionRequestFindUniqueArgs>(args: SelectSubset<T, ServiceExtensionRequestFindUniqueArgs<ExtArgs>>): Prisma__ServiceExtensionRequestClient<$Result.GetResult<Prisma.$ServiceExtensionRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ServiceExtensionRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ServiceExtensionRequestFindUniqueOrThrowArgs} args - Arguments to find a ServiceExtensionRequest
     * @example
     * // Get one ServiceExtensionRequest
     * const serviceExtensionRequest = await prisma.serviceExtensionRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ServiceExtensionRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, ServiceExtensionRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ServiceExtensionRequestClient<$Result.GetResult<Prisma.$ServiceExtensionRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ServiceExtensionRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceExtensionRequestFindFirstArgs} args - Arguments to find a ServiceExtensionRequest
     * @example
     * // Get one ServiceExtensionRequest
     * const serviceExtensionRequest = await prisma.serviceExtensionRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ServiceExtensionRequestFindFirstArgs>(args?: SelectSubset<T, ServiceExtensionRequestFindFirstArgs<ExtArgs>>): Prisma__ServiceExtensionRequestClient<$Result.GetResult<Prisma.$ServiceExtensionRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ServiceExtensionRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceExtensionRequestFindFirstOrThrowArgs} args - Arguments to find a ServiceExtensionRequest
     * @example
     * // Get one ServiceExtensionRequest
     * const serviceExtensionRequest = await prisma.serviceExtensionRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ServiceExtensionRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, ServiceExtensionRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__ServiceExtensionRequestClient<$Result.GetResult<Prisma.$ServiceExtensionRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ServiceExtensionRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceExtensionRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ServiceExtensionRequests
     * const serviceExtensionRequests = await prisma.serviceExtensionRequest.findMany()
     * 
     * // Get first 10 ServiceExtensionRequests
     * const serviceExtensionRequests = await prisma.serviceExtensionRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const serviceExtensionRequestWithIdOnly = await prisma.serviceExtensionRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ServiceExtensionRequestFindManyArgs>(args?: SelectSubset<T, ServiceExtensionRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceExtensionRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ServiceExtensionRequest.
     * @param {ServiceExtensionRequestCreateArgs} args - Arguments to create a ServiceExtensionRequest.
     * @example
     * // Create one ServiceExtensionRequest
     * const ServiceExtensionRequest = await prisma.serviceExtensionRequest.create({
     *   data: {
     *     // ... data to create a ServiceExtensionRequest
     *   }
     * })
     * 
     */
    create<T extends ServiceExtensionRequestCreateArgs>(args: SelectSubset<T, ServiceExtensionRequestCreateArgs<ExtArgs>>): Prisma__ServiceExtensionRequestClient<$Result.GetResult<Prisma.$ServiceExtensionRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ServiceExtensionRequests.
     * @param {ServiceExtensionRequestCreateManyArgs} args - Arguments to create many ServiceExtensionRequests.
     * @example
     * // Create many ServiceExtensionRequests
     * const serviceExtensionRequest = await prisma.serviceExtensionRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ServiceExtensionRequestCreateManyArgs>(args?: SelectSubset<T, ServiceExtensionRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ServiceExtensionRequests and returns the data saved in the database.
     * @param {ServiceExtensionRequestCreateManyAndReturnArgs} args - Arguments to create many ServiceExtensionRequests.
     * @example
     * // Create many ServiceExtensionRequests
     * const serviceExtensionRequest = await prisma.serviceExtensionRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ServiceExtensionRequests and only return the `id`
     * const serviceExtensionRequestWithIdOnly = await prisma.serviceExtensionRequest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ServiceExtensionRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, ServiceExtensionRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceExtensionRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ServiceExtensionRequest.
     * @param {ServiceExtensionRequestDeleteArgs} args - Arguments to delete one ServiceExtensionRequest.
     * @example
     * // Delete one ServiceExtensionRequest
     * const ServiceExtensionRequest = await prisma.serviceExtensionRequest.delete({
     *   where: {
     *     // ... filter to delete one ServiceExtensionRequest
     *   }
     * })
     * 
     */
    delete<T extends ServiceExtensionRequestDeleteArgs>(args: SelectSubset<T, ServiceExtensionRequestDeleteArgs<ExtArgs>>): Prisma__ServiceExtensionRequestClient<$Result.GetResult<Prisma.$ServiceExtensionRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ServiceExtensionRequest.
     * @param {ServiceExtensionRequestUpdateArgs} args - Arguments to update one ServiceExtensionRequest.
     * @example
     * // Update one ServiceExtensionRequest
     * const serviceExtensionRequest = await prisma.serviceExtensionRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ServiceExtensionRequestUpdateArgs>(args: SelectSubset<T, ServiceExtensionRequestUpdateArgs<ExtArgs>>): Prisma__ServiceExtensionRequestClient<$Result.GetResult<Prisma.$ServiceExtensionRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ServiceExtensionRequests.
     * @param {ServiceExtensionRequestDeleteManyArgs} args - Arguments to filter ServiceExtensionRequests to delete.
     * @example
     * // Delete a few ServiceExtensionRequests
     * const { count } = await prisma.serviceExtensionRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ServiceExtensionRequestDeleteManyArgs>(args?: SelectSubset<T, ServiceExtensionRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ServiceExtensionRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceExtensionRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ServiceExtensionRequests
     * const serviceExtensionRequest = await prisma.serviceExtensionRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ServiceExtensionRequestUpdateManyArgs>(args: SelectSubset<T, ServiceExtensionRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ServiceExtensionRequests and returns the data updated in the database.
     * @param {ServiceExtensionRequestUpdateManyAndReturnArgs} args - Arguments to update many ServiceExtensionRequests.
     * @example
     * // Update many ServiceExtensionRequests
     * const serviceExtensionRequest = await prisma.serviceExtensionRequest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ServiceExtensionRequests and only return the `id`
     * const serviceExtensionRequestWithIdOnly = await prisma.serviceExtensionRequest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ServiceExtensionRequestUpdateManyAndReturnArgs>(args: SelectSubset<T, ServiceExtensionRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceExtensionRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ServiceExtensionRequest.
     * @param {ServiceExtensionRequestUpsertArgs} args - Arguments to update or create a ServiceExtensionRequest.
     * @example
     * // Update or create a ServiceExtensionRequest
     * const serviceExtensionRequest = await prisma.serviceExtensionRequest.upsert({
     *   create: {
     *     // ... data to create a ServiceExtensionRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ServiceExtensionRequest we want to update
     *   }
     * })
     */
    upsert<T extends ServiceExtensionRequestUpsertArgs>(args: SelectSubset<T, ServiceExtensionRequestUpsertArgs<ExtArgs>>): Prisma__ServiceExtensionRequestClient<$Result.GetResult<Prisma.$ServiceExtensionRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ServiceExtensionRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceExtensionRequestCountArgs} args - Arguments to filter ServiceExtensionRequests to count.
     * @example
     * // Count the number of ServiceExtensionRequests
     * const count = await prisma.serviceExtensionRequest.count({
     *   where: {
     *     // ... the filter for the ServiceExtensionRequests we want to count
     *   }
     * })
    **/
    count<T extends ServiceExtensionRequestCountArgs>(
      args?: Subset<T, ServiceExtensionRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServiceExtensionRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ServiceExtensionRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceExtensionRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServiceExtensionRequestAggregateArgs>(args: Subset<T, ServiceExtensionRequestAggregateArgs>): Prisma.PrismaPromise<GetServiceExtensionRequestAggregateType<T>>

    /**
     * Group by ServiceExtensionRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceExtensionRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ServiceExtensionRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ServiceExtensionRequestGroupByArgs['orderBy'] }
        : { orderBy?: ServiceExtensionRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ServiceExtensionRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServiceExtensionRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ServiceExtensionRequest model
   */
  readonly fields: ServiceExtensionRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ServiceExtensionRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ServiceExtensionRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee<T extends EmployeeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmployeeDefaultArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reviewedBy<T extends ServiceExtensionRequest$reviewedByArgs<ExtArgs> = {}>(args?: Subset<T, ServiceExtensionRequest$reviewedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    submittedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ServiceExtensionRequest model
   */
  interface ServiceExtensionRequestFieldRefs {
    readonly id: FieldRef<"ServiceExtensionRequest", 'String'>
    readonly status: FieldRef<"ServiceExtensionRequest", 'String'>
    readonly reviewStage: FieldRef<"ServiceExtensionRequest", 'String'>
    readonly currentRetirementDate: FieldRef<"ServiceExtensionRequest", 'DateTime'>
    readonly requestedExtensionPeriod: FieldRef<"ServiceExtensionRequest", 'String'>
    readonly justification: FieldRef<"ServiceExtensionRequest", 'String'>
    readonly documents: FieldRef<"ServiceExtensionRequest", 'String[]'>
    readonly rejectionReason: FieldRef<"ServiceExtensionRequest", 'String'>
    readonly employeeId: FieldRef<"ServiceExtensionRequest", 'String'>
    readonly submittedById: FieldRef<"ServiceExtensionRequest", 'String'>
    readonly reviewedById: FieldRef<"ServiceExtensionRequest", 'String'>
    readonly createdAt: FieldRef<"ServiceExtensionRequest", 'DateTime'>
    readonly updatedAt: FieldRef<"ServiceExtensionRequest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ServiceExtensionRequest findUnique
   */
  export type ServiceExtensionRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceExtensionRequest
     */
    select?: ServiceExtensionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceExtensionRequest
     */
    omit?: ServiceExtensionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceExtensionRequestInclude<ExtArgs> | null
    /**
     * Filter, which ServiceExtensionRequest to fetch.
     */
    where: ServiceExtensionRequestWhereUniqueInput
  }

  /**
   * ServiceExtensionRequest findUniqueOrThrow
   */
  export type ServiceExtensionRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceExtensionRequest
     */
    select?: ServiceExtensionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceExtensionRequest
     */
    omit?: ServiceExtensionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceExtensionRequestInclude<ExtArgs> | null
    /**
     * Filter, which ServiceExtensionRequest to fetch.
     */
    where: ServiceExtensionRequestWhereUniqueInput
  }

  /**
   * ServiceExtensionRequest findFirst
   */
  export type ServiceExtensionRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceExtensionRequest
     */
    select?: ServiceExtensionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceExtensionRequest
     */
    omit?: ServiceExtensionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceExtensionRequestInclude<ExtArgs> | null
    /**
     * Filter, which ServiceExtensionRequest to fetch.
     */
    where?: ServiceExtensionRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceExtensionRequests to fetch.
     */
    orderBy?: ServiceExtensionRequestOrderByWithRelationInput | ServiceExtensionRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ServiceExtensionRequests.
     */
    cursor?: ServiceExtensionRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceExtensionRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceExtensionRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ServiceExtensionRequests.
     */
    distinct?: ServiceExtensionRequestScalarFieldEnum | ServiceExtensionRequestScalarFieldEnum[]
  }

  /**
   * ServiceExtensionRequest findFirstOrThrow
   */
  export type ServiceExtensionRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceExtensionRequest
     */
    select?: ServiceExtensionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceExtensionRequest
     */
    omit?: ServiceExtensionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceExtensionRequestInclude<ExtArgs> | null
    /**
     * Filter, which ServiceExtensionRequest to fetch.
     */
    where?: ServiceExtensionRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceExtensionRequests to fetch.
     */
    orderBy?: ServiceExtensionRequestOrderByWithRelationInput | ServiceExtensionRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ServiceExtensionRequests.
     */
    cursor?: ServiceExtensionRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceExtensionRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceExtensionRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ServiceExtensionRequests.
     */
    distinct?: ServiceExtensionRequestScalarFieldEnum | ServiceExtensionRequestScalarFieldEnum[]
  }

  /**
   * ServiceExtensionRequest findMany
   */
  export type ServiceExtensionRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceExtensionRequest
     */
    select?: ServiceExtensionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceExtensionRequest
     */
    omit?: ServiceExtensionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceExtensionRequestInclude<ExtArgs> | null
    /**
     * Filter, which ServiceExtensionRequests to fetch.
     */
    where?: ServiceExtensionRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceExtensionRequests to fetch.
     */
    orderBy?: ServiceExtensionRequestOrderByWithRelationInput | ServiceExtensionRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ServiceExtensionRequests.
     */
    cursor?: ServiceExtensionRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceExtensionRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceExtensionRequests.
     */
    skip?: number
    distinct?: ServiceExtensionRequestScalarFieldEnum | ServiceExtensionRequestScalarFieldEnum[]
  }

  /**
   * ServiceExtensionRequest create
   */
  export type ServiceExtensionRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceExtensionRequest
     */
    select?: ServiceExtensionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceExtensionRequest
     */
    omit?: ServiceExtensionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceExtensionRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a ServiceExtensionRequest.
     */
    data: XOR<ServiceExtensionRequestCreateInput, ServiceExtensionRequestUncheckedCreateInput>
  }

  /**
   * ServiceExtensionRequest createMany
   */
  export type ServiceExtensionRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ServiceExtensionRequests.
     */
    data: ServiceExtensionRequestCreateManyInput | ServiceExtensionRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ServiceExtensionRequest createManyAndReturn
   */
  export type ServiceExtensionRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceExtensionRequest
     */
    select?: ServiceExtensionRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceExtensionRequest
     */
    omit?: ServiceExtensionRequestOmit<ExtArgs> | null
    /**
     * The data used to create many ServiceExtensionRequests.
     */
    data: ServiceExtensionRequestCreateManyInput | ServiceExtensionRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceExtensionRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ServiceExtensionRequest update
   */
  export type ServiceExtensionRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceExtensionRequest
     */
    select?: ServiceExtensionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceExtensionRequest
     */
    omit?: ServiceExtensionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceExtensionRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a ServiceExtensionRequest.
     */
    data: XOR<ServiceExtensionRequestUpdateInput, ServiceExtensionRequestUncheckedUpdateInput>
    /**
     * Choose, which ServiceExtensionRequest to update.
     */
    where: ServiceExtensionRequestWhereUniqueInput
  }

  /**
   * ServiceExtensionRequest updateMany
   */
  export type ServiceExtensionRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ServiceExtensionRequests.
     */
    data: XOR<ServiceExtensionRequestUpdateManyMutationInput, ServiceExtensionRequestUncheckedUpdateManyInput>
    /**
     * Filter which ServiceExtensionRequests to update
     */
    where?: ServiceExtensionRequestWhereInput
    /**
     * Limit how many ServiceExtensionRequests to update.
     */
    limit?: number
  }

  /**
   * ServiceExtensionRequest updateManyAndReturn
   */
  export type ServiceExtensionRequestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceExtensionRequest
     */
    select?: ServiceExtensionRequestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceExtensionRequest
     */
    omit?: ServiceExtensionRequestOmit<ExtArgs> | null
    /**
     * The data used to update ServiceExtensionRequests.
     */
    data: XOR<ServiceExtensionRequestUpdateManyMutationInput, ServiceExtensionRequestUncheckedUpdateManyInput>
    /**
     * Filter which ServiceExtensionRequests to update
     */
    where?: ServiceExtensionRequestWhereInput
    /**
     * Limit how many ServiceExtensionRequests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceExtensionRequestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ServiceExtensionRequest upsert
   */
  export type ServiceExtensionRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceExtensionRequest
     */
    select?: ServiceExtensionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceExtensionRequest
     */
    omit?: ServiceExtensionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceExtensionRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the ServiceExtensionRequest to update in case it exists.
     */
    where: ServiceExtensionRequestWhereUniqueInput
    /**
     * In case the ServiceExtensionRequest found by the `where` argument doesn't exist, create a new ServiceExtensionRequest with this data.
     */
    create: XOR<ServiceExtensionRequestCreateInput, ServiceExtensionRequestUncheckedCreateInput>
    /**
     * In case the ServiceExtensionRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ServiceExtensionRequestUpdateInput, ServiceExtensionRequestUncheckedUpdateInput>
  }

  /**
   * ServiceExtensionRequest delete
   */
  export type ServiceExtensionRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceExtensionRequest
     */
    select?: ServiceExtensionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceExtensionRequest
     */
    omit?: ServiceExtensionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceExtensionRequestInclude<ExtArgs> | null
    /**
     * Filter which ServiceExtensionRequest to delete.
     */
    where: ServiceExtensionRequestWhereUniqueInput
  }

  /**
   * ServiceExtensionRequest deleteMany
   */
  export type ServiceExtensionRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ServiceExtensionRequests to delete
     */
    where?: ServiceExtensionRequestWhereInput
    /**
     * Limit how many ServiceExtensionRequests to delete.
     */
    limit?: number
  }

  /**
   * ServiceExtensionRequest.reviewedBy
   */
  export type ServiceExtensionRequest$reviewedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ServiceExtensionRequest without action
   */
  export type ServiceExtensionRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceExtensionRequest
     */
    select?: ServiceExtensionRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceExtensionRequest
     */
    omit?: ServiceExtensionRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceExtensionRequestInclude<ExtArgs> | null
  }


  /**
   * Model SeparationRequest
   */

  export type AggregateSeparationRequest = {
    _count: SeparationRequestCountAggregateOutputType | null
    _min: SeparationRequestMinAggregateOutputType | null
    _max: SeparationRequestMaxAggregateOutputType | null
  }

  export type SeparationRequestMinAggregateOutputType = {
    id: string | null
    type: string | null
    status: string | null
    reviewStage: string | null
    reason: string | null
    rejectionReason: string | null
    employeeId: string | null
    submittedById: string | null
    reviewedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SeparationRequestMaxAggregateOutputType = {
    id: string | null
    type: string | null
    status: string | null
    reviewStage: string | null
    reason: string | null
    rejectionReason: string | null
    employeeId: string | null
    submittedById: string | null
    reviewedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SeparationRequestCountAggregateOutputType = {
    id: number
    type: number
    status: number
    reviewStage: number
    reason: number
    documents: number
    rejectionReason: number
    employeeId: number
    submittedById: number
    reviewedById: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SeparationRequestMinAggregateInputType = {
    id?: true
    type?: true
    status?: true
    reviewStage?: true
    reason?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SeparationRequestMaxAggregateInputType = {
    id?: true
    type?: true
    status?: true
    reviewStage?: true
    reason?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SeparationRequestCountAggregateInputType = {
    id?: true
    type?: true
    status?: true
    reviewStage?: true
    reason?: true
    documents?: true
    rejectionReason?: true
    employeeId?: true
    submittedById?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SeparationRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SeparationRequest to aggregate.
     */
    where?: SeparationRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeparationRequests to fetch.
     */
    orderBy?: SeparationRequestOrderByWithRelationInput | SeparationRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SeparationRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeparationRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeparationRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SeparationRequests
    **/
    _count?: true | SeparationRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SeparationRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SeparationRequestMaxAggregateInputType
  }

  export type GetSeparationRequestAggregateType<T extends SeparationRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateSeparationRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSeparationRequest[P]>
      : GetScalarType<T[P], AggregateSeparationRequest[P]>
  }




  export type SeparationRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SeparationRequestWhereInput
    orderBy?: SeparationRequestOrderByWithAggregationInput | SeparationRequestOrderByWithAggregationInput[]
    by: SeparationRequestScalarFieldEnum[] | SeparationRequestScalarFieldEnum
    having?: SeparationRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SeparationRequestCountAggregateInputType | true
    _min?: SeparationRequestMinAggregateInputType
    _max?: SeparationRequestMaxAggregateInputType
  }

  export type SeparationRequestGroupByOutputType = {
    id: string
    type: string
    status: string
    reviewStage: string
    reason: string
    documents: string[]
    rejectionReason: string | null
    employeeId: string
    submittedById: string
    reviewedById: string | null
    createdAt: Date
    updatedAt: Date
    _count: SeparationRequestCountAggregateOutputType | null
    _min: SeparationRequestMinAggregateOutputType | null
    _max: SeparationRequestMaxAggregateOutputType | null
  }

  type GetSeparationRequestGroupByPayload<T extends SeparationRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SeparationRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SeparationRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SeparationRequestGroupByOutputType[P]>
            : GetScalarType<T[P], SeparationRequestGroupByOutputType[P]>
        }
      >
    >


  export type SeparationRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    status?: boolean
    reviewStage?: boolean
    reason?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | SeparationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["separationRequest"]>

  export type SeparationRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    status?: boolean
    reviewStage?: boolean
    reason?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | SeparationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["separationRequest"]>

  export type SeparationRequestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    status?: boolean
    reviewStage?: boolean
    reason?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | SeparationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["separationRequest"]>

  export type SeparationRequestSelectScalar = {
    id?: boolean
    type?: boolean
    status?: boolean
    reviewStage?: boolean
    reason?: boolean
    documents?: boolean
    rejectionReason?: boolean
    employeeId?: boolean
    submittedById?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SeparationRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "status" | "reviewStage" | "reason" | "documents" | "rejectionReason" | "employeeId" | "submittedById" | "reviewedById" | "createdAt" | "updatedAt", ExtArgs["result"]["separationRequest"]>
  export type SeparationRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | SeparationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SeparationRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | SeparationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SeparationRequestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    employee?: boolean | EmployeeDefaultArgs<ExtArgs>
    reviewedBy?: boolean | SeparationRequest$reviewedByArgs<ExtArgs>
    submittedBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SeparationRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SeparationRequest"
    objects: {
      employee: Prisma.$EmployeePayload<ExtArgs>
      reviewedBy: Prisma.$UserPayload<ExtArgs> | null
      submittedBy: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      type: string
      status: string
      reviewStage: string
      reason: string
      documents: string[]
      rejectionReason: string | null
      employeeId: string
      submittedById: string
      reviewedById: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["separationRequest"]>
    composites: {}
  }

  type SeparationRequestGetPayload<S extends boolean | null | undefined | SeparationRequestDefaultArgs> = $Result.GetResult<Prisma.$SeparationRequestPayload, S>

  type SeparationRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SeparationRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SeparationRequestCountAggregateInputType | true
    }

  export interface SeparationRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SeparationRequest'], meta: { name: 'SeparationRequest' } }
    /**
     * Find zero or one SeparationRequest that matches the filter.
     * @param {SeparationRequestFindUniqueArgs} args - Arguments to find a SeparationRequest
     * @example
     * // Get one SeparationRequest
     * const separationRequest = await prisma.separationRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SeparationRequestFindUniqueArgs>(args: SelectSubset<T, SeparationRequestFindUniqueArgs<ExtArgs>>): Prisma__SeparationRequestClient<$Result.GetResult<Prisma.$SeparationRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SeparationRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SeparationRequestFindUniqueOrThrowArgs} args - Arguments to find a SeparationRequest
     * @example
     * // Get one SeparationRequest
     * const separationRequest = await prisma.separationRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SeparationRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, SeparationRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SeparationRequestClient<$Result.GetResult<Prisma.$SeparationRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SeparationRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeparationRequestFindFirstArgs} args - Arguments to find a SeparationRequest
     * @example
     * // Get one SeparationRequest
     * const separationRequest = await prisma.separationRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SeparationRequestFindFirstArgs>(args?: SelectSubset<T, SeparationRequestFindFirstArgs<ExtArgs>>): Prisma__SeparationRequestClient<$Result.GetResult<Prisma.$SeparationRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SeparationRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeparationRequestFindFirstOrThrowArgs} args - Arguments to find a SeparationRequest
     * @example
     * // Get one SeparationRequest
     * const separationRequest = await prisma.separationRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SeparationRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, SeparationRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__SeparationRequestClient<$Result.GetResult<Prisma.$SeparationRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SeparationRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeparationRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SeparationRequests
     * const separationRequests = await prisma.separationRequest.findMany()
     * 
     * // Get first 10 SeparationRequests
     * const separationRequests = await prisma.separationRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const separationRequestWithIdOnly = await prisma.separationRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SeparationRequestFindManyArgs>(args?: SelectSubset<T, SeparationRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeparationRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SeparationRequest.
     * @param {SeparationRequestCreateArgs} args - Arguments to create a SeparationRequest.
     * @example
     * // Create one SeparationRequest
     * const SeparationRequest = await prisma.separationRequest.create({
     *   data: {
     *     // ... data to create a SeparationRequest
     *   }
     * })
     * 
     */
    create<T extends SeparationRequestCreateArgs>(args: SelectSubset<T, SeparationRequestCreateArgs<ExtArgs>>): Prisma__SeparationRequestClient<$Result.GetResult<Prisma.$SeparationRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SeparationRequests.
     * @param {SeparationRequestCreateManyArgs} args - Arguments to create many SeparationRequests.
     * @example
     * // Create many SeparationRequests
     * const separationRequest = await prisma.separationRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SeparationRequestCreateManyArgs>(args?: SelectSubset<T, SeparationRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SeparationRequests and returns the data saved in the database.
     * @param {SeparationRequestCreateManyAndReturnArgs} args - Arguments to create many SeparationRequests.
     * @example
     * // Create many SeparationRequests
     * const separationRequest = await prisma.separationRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SeparationRequests and only return the `id`
     * const separationRequestWithIdOnly = await prisma.separationRequest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SeparationRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, SeparationRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeparationRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SeparationRequest.
     * @param {SeparationRequestDeleteArgs} args - Arguments to delete one SeparationRequest.
     * @example
     * // Delete one SeparationRequest
     * const SeparationRequest = await prisma.separationRequest.delete({
     *   where: {
     *     // ... filter to delete one SeparationRequest
     *   }
     * })
     * 
     */
    delete<T extends SeparationRequestDeleteArgs>(args: SelectSubset<T, SeparationRequestDeleteArgs<ExtArgs>>): Prisma__SeparationRequestClient<$Result.GetResult<Prisma.$SeparationRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SeparationRequest.
     * @param {SeparationRequestUpdateArgs} args - Arguments to update one SeparationRequest.
     * @example
     * // Update one SeparationRequest
     * const separationRequest = await prisma.separationRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SeparationRequestUpdateArgs>(args: SelectSubset<T, SeparationRequestUpdateArgs<ExtArgs>>): Prisma__SeparationRequestClient<$Result.GetResult<Prisma.$SeparationRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SeparationRequests.
     * @param {SeparationRequestDeleteManyArgs} args - Arguments to filter SeparationRequests to delete.
     * @example
     * // Delete a few SeparationRequests
     * const { count } = await prisma.separationRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SeparationRequestDeleteManyArgs>(args?: SelectSubset<T, SeparationRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SeparationRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeparationRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SeparationRequests
     * const separationRequest = await prisma.separationRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SeparationRequestUpdateManyArgs>(args: SelectSubset<T, SeparationRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SeparationRequests and returns the data updated in the database.
     * @param {SeparationRequestUpdateManyAndReturnArgs} args - Arguments to update many SeparationRequests.
     * @example
     * // Update many SeparationRequests
     * const separationRequest = await prisma.separationRequest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SeparationRequests and only return the `id`
     * const separationRequestWithIdOnly = await prisma.separationRequest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SeparationRequestUpdateManyAndReturnArgs>(args: SelectSubset<T, SeparationRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeparationRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SeparationRequest.
     * @param {SeparationRequestUpsertArgs} args - Arguments to update or create a SeparationRequest.
     * @example
     * // Update or create a SeparationRequest
     * const separationRequest = await prisma.separationRequest.upsert({
     *   create: {
     *     // ... data to create a SeparationRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SeparationRequest we want to update
     *   }
     * })
     */
    upsert<T extends SeparationRequestUpsertArgs>(args: SelectSubset<T, SeparationRequestUpsertArgs<ExtArgs>>): Prisma__SeparationRequestClient<$Result.GetResult<Prisma.$SeparationRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SeparationRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeparationRequestCountArgs} args - Arguments to filter SeparationRequests to count.
     * @example
     * // Count the number of SeparationRequests
     * const count = await prisma.separationRequest.count({
     *   where: {
     *     // ... the filter for the SeparationRequests we want to count
     *   }
     * })
    **/
    count<T extends SeparationRequestCountArgs>(
      args?: Subset<T, SeparationRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SeparationRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SeparationRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeparationRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SeparationRequestAggregateArgs>(args: Subset<T, SeparationRequestAggregateArgs>): Prisma.PrismaPromise<GetSeparationRequestAggregateType<T>>

    /**
     * Group by SeparationRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeparationRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SeparationRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SeparationRequestGroupByArgs['orderBy'] }
        : { orderBy?: SeparationRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SeparationRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSeparationRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SeparationRequest model
   */
  readonly fields: SeparationRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SeparationRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SeparationRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    employee<T extends EmployeeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmployeeDefaultArgs<ExtArgs>>): Prisma__EmployeeClient<$Result.GetResult<Prisma.$EmployeePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reviewedBy<T extends SeparationRequest$reviewedByArgs<ExtArgs> = {}>(args?: Subset<T, SeparationRequest$reviewedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    submittedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SeparationRequest model
   */
  interface SeparationRequestFieldRefs {
    readonly id: FieldRef<"SeparationRequest", 'String'>
    readonly type: FieldRef<"SeparationRequest", 'String'>
    readonly status: FieldRef<"SeparationRequest", 'String'>
    readonly reviewStage: FieldRef<"SeparationRequest", 'String'>
    readonly reason: FieldRef<"SeparationRequest", 'String'>
    readonly documents: FieldRef<"SeparationRequest", 'String[]'>
    readonly rejectionReason: FieldRef<"SeparationRequest", 'String'>
    readonly employeeId: FieldRef<"SeparationRequest", 'String'>
    readonly submittedById: FieldRef<"SeparationRequest", 'String'>
    readonly reviewedById: FieldRef<"SeparationRequest", 'String'>
    readonly createdAt: FieldRef<"SeparationRequest", 'DateTime'>
    readonly updatedAt: FieldRef<"SeparationRequest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SeparationRequest findUnique
   */
  export type SeparationRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeparationRequest
     */
    select?: SeparationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeparationRequest
     */
    omit?: SeparationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeparationRequestInclude<ExtArgs> | null
    /**
     * Filter, which SeparationRequest to fetch.
     */
    where: SeparationRequestWhereUniqueInput
  }

  /**
   * SeparationRequest findUniqueOrThrow
   */
  export type SeparationRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeparationRequest
     */
    select?: SeparationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeparationRequest
     */
    omit?: SeparationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeparationRequestInclude<ExtArgs> | null
    /**
     * Filter, which SeparationRequest to fetch.
     */
    where: SeparationRequestWhereUniqueInput
  }

  /**
   * SeparationRequest findFirst
   */
  export type SeparationRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeparationRequest
     */
    select?: SeparationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeparationRequest
     */
    omit?: SeparationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeparationRequestInclude<ExtArgs> | null
    /**
     * Filter, which SeparationRequest to fetch.
     */
    where?: SeparationRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeparationRequests to fetch.
     */
    orderBy?: SeparationRequestOrderByWithRelationInput | SeparationRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SeparationRequests.
     */
    cursor?: SeparationRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeparationRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeparationRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SeparationRequests.
     */
    distinct?: SeparationRequestScalarFieldEnum | SeparationRequestScalarFieldEnum[]
  }

  /**
   * SeparationRequest findFirstOrThrow
   */
  export type SeparationRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeparationRequest
     */
    select?: SeparationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeparationRequest
     */
    omit?: SeparationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeparationRequestInclude<ExtArgs> | null
    /**
     * Filter, which SeparationRequest to fetch.
     */
    where?: SeparationRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeparationRequests to fetch.
     */
    orderBy?: SeparationRequestOrderByWithRelationInput | SeparationRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SeparationRequests.
     */
    cursor?: SeparationRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeparationRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeparationRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SeparationRequests.
     */
    distinct?: SeparationRequestScalarFieldEnum | SeparationRequestScalarFieldEnum[]
  }

  /**
   * SeparationRequest findMany
   */
  export type SeparationRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeparationRequest
     */
    select?: SeparationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeparationRequest
     */
    omit?: SeparationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeparationRequestInclude<ExtArgs> | null
    /**
     * Filter, which SeparationRequests to fetch.
     */
    where?: SeparationRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SeparationRequests to fetch.
     */
    orderBy?: SeparationRequestOrderByWithRelationInput | SeparationRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SeparationRequests.
     */
    cursor?: SeparationRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SeparationRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SeparationRequests.
     */
    skip?: number
    distinct?: SeparationRequestScalarFieldEnum | SeparationRequestScalarFieldEnum[]
  }

  /**
   * SeparationRequest create
   */
  export type SeparationRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeparationRequest
     */
    select?: SeparationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeparationRequest
     */
    omit?: SeparationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeparationRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a SeparationRequest.
     */
    data: XOR<SeparationRequestCreateInput, SeparationRequestUncheckedCreateInput>
  }

  /**
   * SeparationRequest createMany
   */
  export type SeparationRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SeparationRequests.
     */
    data: SeparationRequestCreateManyInput | SeparationRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SeparationRequest createManyAndReturn
   */
  export type SeparationRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeparationRequest
     */
    select?: SeparationRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SeparationRequest
     */
    omit?: SeparationRequestOmit<ExtArgs> | null
    /**
     * The data used to create many SeparationRequests.
     */
    data: SeparationRequestCreateManyInput | SeparationRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeparationRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SeparationRequest update
   */
  export type SeparationRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeparationRequest
     */
    select?: SeparationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeparationRequest
     */
    omit?: SeparationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeparationRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a SeparationRequest.
     */
    data: XOR<SeparationRequestUpdateInput, SeparationRequestUncheckedUpdateInput>
    /**
     * Choose, which SeparationRequest to update.
     */
    where: SeparationRequestWhereUniqueInput
  }

  /**
   * SeparationRequest updateMany
   */
  export type SeparationRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SeparationRequests.
     */
    data: XOR<SeparationRequestUpdateManyMutationInput, SeparationRequestUncheckedUpdateManyInput>
    /**
     * Filter which SeparationRequests to update
     */
    where?: SeparationRequestWhereInput
    /**
     * Limit how many SeparationRequests to update.
     */
    limit?: number
  }

  /**
   * SeparationRequest updateManyAndReturn
   */
  export type SeparationRequestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeparationRequest
     */
    select?: SeparationRequestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SeparationRequest
     */
    omit?: SeparationRequestOmit<ExtArgs> | null
    /**
     * The data used to update SeparationRequests.
     */
    data: XOR<SeparationRequestUpdateManyMutationInput, SeparationRequestUncheckedUpdateManyInput>
    /**
     * Filter which SeparationRequests to update
     */
    where?: SeparationRequestWhereInput
    /**
     * Limit how many SeparationRequests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeparationRequestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SeparationRequest upsert
   */
  export type SeparationRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeparationRequest
     */
    select?: SeparationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeparationRequest
     */
    omit?: SeparationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeparationRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the SeparationRequest to update in case it exists.
     */
    where: SeparationRequestWhereUniqueInput
    /**
     * In case the SeparationRequest found by the `where` argument doesn't exist, create a new SeparationRequest with this data.
     */
    create: XOR<SeparationRequestCreateInput, SeparationRequestUncheckedCreateInput>
    /**
     * In case the SeparationRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SeparationRequestUpdateInput, SeparationRequestUncheckedUpdateInput>
  }

  /**
   * SeparationRequest delete
   */
  export type SeparationRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeparationRequest
     */
    select?: SeparationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeparationRequest
     */
    omit?: SeparationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeparationRequestInclude<ExtArgs> | null
    /**
     * Filter which SeparationRequest to delete.
     */
    where: SeparationRequestWhereUniqueInput
  }

  /**
   * SeparationRequest deleteMany
   */
  export type SeparationRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SeparationRequests to delete
     */
    where?: SeparationRequestWhereInput
    /**
     * Limit how many SeparationRequests to delete.
     */
    limit?: number
  }

  /**
   * SeparationRequest.reviewedBy
   */
  export type SeparationRequest$reviewedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * SeparationRequest without action
   */
  export type SeparationRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SeparationRequest
     */
    select?: SeparationRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SeparationRequest
     */
    omit?: SeparationRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeparationRequestInclude<ExtArgs> | null
  }


  /**
   * Model Complaint
   */

  export type AggregateComplaint = {
    _count: ComplaintCountAggregateOutputType | null
    _min: ComplaintMinAggregateOutputType | null
    _max: ComplaintMaxAggregateOutputType | null
  }

  export type ComplaintMinAggregateOutputType = {
    id: string | null
    complaintType: string | null
    subject: string | null
    details: string | null
    complainantPhoneNumber: string | null
    nextOfKinPhoneNumber: string | null
    status: string | null
    reviewStage: string | null
    officerComments: string | null
    internalNotes: string | null
    rejectionReason: string | null
    complainantId: string | null
    assignedOfficerRole: string | null
    reviewedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ComplaintMaxAggregateOutputType = {
    id: string | null
    complaintType: string | null
    subject: string | null
    details: string | null
    complainantPhoneNumber: string | null
    nextOfKinPhoneNumber: string | null
    status: string | null
    reviewStage: string | null
    officerComments: string | null
    internalNotes: string | null
    rejectionReason: string | null
    complainantId: string | null
    assignedOfficerRole: string | null
    reviewedById: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ComplaintCountAggregateOutputType = {
    id: number
    complaintType: number
    subject: number
    details: number
    complainantPhoneNumber: number
    nextOfKinPhoneNumber: number
    attachments: number
    status: number
    reviewStage: number
    officerComments: number
    internalNotes: number
    rejectionReason: number
    complainantId: number
    assignedOfficerRole: number
    reviewedById: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ComplaintMinAggregateInputType = {
    id?: true
    complaintType?: true
    subject?: true
    details?: true
    complainantPhoneNumber?: true
    nextOfKinPhoneNumber?: true
    status?: true
    reviewStage?: true
    officerComments?: true
    internalNotes?: true
    rejectionReason?: true
    complainantId?: true
    assignedOfficerRole?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ComplaintMaxAggregateInputType = {
    id?: true
    complaintType?: true
    subject?: true
    details?: true
    complainantPhoneNumber?: true
    nextOfKinPhoneNumber?: true
    status?: true
    reviewStage?: true
    officerComments?: true
    internalNotes?: true
    rejectionReason?: true
    complainantId?: true
    assignedOfficerRole?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ComplaintCountAggregateInputType = {
    id?: true
    complaintType?: true
    subject?: true
    details?: true
    complainantPhoneNumber?: true
    nextOfKinPhoneNumber?: true
    attachments?: true
    status?: true
    reviewStage?: true
    officerComments?: true
    internalNotes?: true
    rejectionReason?: true
    complainantId?: true
    assignedOfficerRole?: true
    reviewedById?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ComplaintAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Complaint to aggregate.
     */
    where?: ComplaintWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Complaints to fetch.
     */
    orderBy?: ComplaintOrderByWithRelationInput | ComplaintOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ComplaintWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Complaints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Complaints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Complaints
    **/
    _count?: true | ComplaintCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ComplaintMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ComplaintMaxAggregateInputType
  }

  export type GetComplaintAggregateType<T extends ComplaintAggregateArgs> = {
        [P in keyof T & keyof AggregateComplaint]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComplaint[P]>
      : GetScalarType<T[P], AggregateComplaint[P]>
  }




  export type ComplaintGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComplaintWhereInput
    orderBy?: ComplaintOrderByWithAggregationInput | ComplaintOrderByWithAggregationInput[]
    by: ComplaintScalarFieldEnum[] | ComplaintScalarFieldEnum
    having?: ComplaintScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ComplaintCountAggregateInputType | true
    _min?: ComplaintMinAggregateInputType
    _max?: ComplaintMaxAggregateInputType
  }

  export type ComplaintGroupByOutputType = {
    id: string
    complaintType: string
    subject: string
    details: string
    complainantPhoneNumber: string
    nextOfKinPhoneNumber: string
    attachments: string[]
    status: string
    reviewStage: string
    officerComments: string | null
    internalNotes: string | null
    rejectionReason: string | null
    complainantId: string
    assignedOfficerRole: string
    reviewedById: string | null
    createdAt: Date
    updatedAt: Date
    _count: ComplaintCountAggregateOutputType | null
    _min: ComplaintMinAggregateOutputType | null
    _max: ComplaintMaxAggregateOutputType | null
  }

  type GetComplaintGroupByPayload<T extends ComplaintGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ComplaintGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ComplaintGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ComplaintGroupByOutputType[P]>
            : GetScalarType<T[P], ComplaintGroupByOutputType[P]>
        }
      >
    >


  export type ComplaintSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    complaintType?: boolean
    subject?: boolean
    details?: boolean
    complainantPhoneNumber?: boolean
    nextOfKinPhoneNumber?: boolean
    attachments?: boolean
    status?: boolean
    reviewStage?: boolean
    officerComments?: boolean
    internalNotes?: boolean
    rejectionReason?: boolean
    complainantId?: boolean
    assignedOfficerRole?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    complainant?: boolean | UserDefaultArgs<ExtArgs>
    reviewedBy?: boolean | Complaint$reviewedByArgs<ExtArgs>
  }, ExtArgs["result"]["complaint"]>

  export type ComplaintSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    complaintType?: boolean
    subject?: boolean
    details?: boolean
    complainantPhoneNumber?: boolean
    nextOfKinPhoneNumber?: boolean
    attachments?: boolean
    status?: boolean
    reviewStage?: boolean
    officerComments?: boolean
    internalNotes?: boolean
    rejectionReason?: boolean
    complainantId?: boolean
    assignedOfficerRole?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    complainant?: boolean | UserDefaultArgs<ExtArgs>
    reviewedBy?: boolean | Complaint$reviewedByArgs<ExtArgs>
  }, ExtArgs["result"]["complaint"]>

  export type ComplaintSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    complaintType?: boolean
    subject?: boolean
    details?: boolean
    complainantPhoneNumber?: boolean
    nextOfKinPhoneNumber?: boolean
    attachments?: boolean
    status?: boolean
    reviewStage?: boolean
    officerComments?: boolean
    internalNotes?: boolean
    rejectionReason?: boolean
    complainantId?: boolean
    assignedOfficerRole?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    complainant?: boolean | UserDefaultArgs<ExtArgs>
    reviewedBy?: boolean | Complaint$reviewedByArgs<ExtArgs>
  }, ExtArgs["result"]["complaint"]>

  export type ComplaintSelectScalar = {
    id?: boolean
    complaintType?: boolean
    subject?: boolean
    details?: boolean
    complainantPhoneNumber?: boolean
    nextOfKinPhoneNumber?: boolean
    attachments?: boolean
    status?: boolean
    reviewStage?: boolean
    officerComments?: boolean
    internalNotes?: boolean
    rejectionReason?: boolean
    complainantId?: boolean
    assignedOfficerRole?: boolean
    reviewedById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ComplaintOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "complaintType" | "subject" | "details" | "complainantPhoneNumber" | "nextOfKinPhoneNumber" | "attachments" | "status" | "reviewStage" | "officerComments" | "internalNotes" | "rejectionReason" | "complainantId" | "assignedOfficerRole" | "reviewedById" | "createdAt" | "updatedAt", ExtArgs["result"]["complaint"]>
  export type ComplaintInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    complainant?: boolean | UserDefaultArgs<ExtArgs>
    reviewedBy?: boolean | Complaint$reviewedByArgs<ExtArgs>
  }
  export type ComplaintIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    complainant?: boolean | UserDefaultArgs<ExtArgs>
    reviewedBy?: boolean | Complaint$reviewedByArgs<ExtArgs>
  }
  export type ComplaintIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    complainant?: boolean | UserDefaultArgs<ExtArgs>
    reviewedBy?: boolean | Complaint$reviewedByArgs<ExtArgs>
  }

  export type $ComplaintPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Complaint"
    objects: {
      complainant: Prisma.$UserPayload<ExtArgs>
      reviewedBy: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      complaintType: string
      subject: string
      details: string
      complainantPhoneNumber: string
      nextOfKinPhoneNumber: string
      attachments: string[]
      status: string
      reviewStage: string
      officerComments: string | null
      internalNotes: string | null
      rejectionReason: string | null
      complainantId: string
      assignedOfficerRole: string
      reviewedById: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["complaint"]>
    composites: {}
  }

  type ComplaintGetPayload<S extends boolean | null | undefined | ComplaintDefaultArgs> = $Result.GetResult<Prisma.$ComplaintPayload, S>

  type ComplaintCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ComplaintFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ComplaintCountAggregateInputType | true
    }

  export interface ComplaintDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Complaint'], meta: { name: 'Complaint' } }
    /**
     * Find zero or one Complaint that matches the filter.
     * @param {ComplaintFindUniqueArgs} args - Arguments to find a Complaint
     * @example
     * // Get one Complaint
     * const complaint = await prisma.complaint.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ComplaintFindUniqueArgs>(args: SelectSubset<T, ComplaintFindUniqueArgs<ExtArgs>>): Prisma__ComplaintClient<$Result.GetResult<Prisma.$ComplaintPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Complaint that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ComplaintFindUniqueOrThrowArgs} args - Arguments to find a Complaint
     * @example
     * // Get one Complaint
     * const complaint = await prisma.complaint.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ComplaintFindUniqueOrThrowArgs>(args: SelectSubset<T, ComplaintFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ComplaintClient<$Result.GetResult<Prisma.$ComplaintPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Complaint that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComplaintFindFirstArgs} args - Arguments to find a Complaint
     * @example
     * // Get one Complaint
     * const complaint = await prisma.complaint.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ComplaintFindFirstArgs>(args?: SelectSubset<T, ComplaintFindFirstArgs<ExtArgs>>): Prisma__ComplaintClient<$Result.GetResult<Prisma.$ComplaintPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Complaint that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComplaintFindFirstOrThrowArgs} args - Arguments to find a Complaint
     * @example
     * // Get one Complaint
     * const complaint = await prisma.complaint.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ComplaintFindFirstOrThrowArgs>(args?: SelectSubset<T, ComplaintFindFirstOrThrowArgs<ExtArgs>>): Prisma__ComplaintClient<$Result.GetResult<Prisma.$ComplaintPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Complaints that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComplaintFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Complaints
     * const complaints = await prisma.complaint.findMany()
     * 
     * // Get first 10 Complaints
     * const complaints = await prisma.complaint.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const complaintWithIdOnly = await prisma.complaint.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ComplaintFindManyArgs>(args?: SelectSubset<T, ComplaintFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComplaintPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Complaint.
     * @param {ComplaintCreateArgs} args - Arguments to create a Complaint.
     * @example
     * // Create one Complaint
     * const Complaint = await prisma.complaint.create({
     *   data: {
     *     // ... data to create a Complaint
     *   }
     * })
     * 
     */
    create<T extends ComplaintCreateArgs>(args: SelectSubset<T, ComplaintCreateArgs<ExtArgs>>): Prisma__ComplaintClient<$Result.GetResult<Prisma.$ComplaintPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Complaints.
     * @param {ComplaintCreateManyArgs} args - Arguments to create many Complaints.
     * @example
     * // Create many Complaints
     * const complaint = await prisma.complaint.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ComplaintCreateManyArgs>(args?: SelectSubset<T, ComplaintCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Complaints and returns the data saved in the database.
     * @param {ComplaintCreateManyAndReturnArgs} args - Arguments to create many Complaints.
     * @example
     * // Create many Complaints
     * const complaint = await prisma.complaint.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Complaints and only return the `id`
     * const complaintWithIdOnly = await prisma.complaint.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ComplaintCreateManyAndReturnArgs>(args?: SelectSubset<T, ComplaintCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComplaintPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Complaint.
     * @param {ComplaintDeleteArgs} args - Arguments to delete one Complaint.
     * @example
     * // Delete one Complaint
     * const Complaint = await prisma.complaint.delete({
     *   where: {
     *     // ... filter to delete one Complaint
     *   }
     * })
     * 
     */
    delete<T extends ComplaintDeleteArgs>(args: SelectSubset<T, ComplaintDeleteArgs<ExtArgs>>): Prisma__ComplaintClient<$Result.GetResult<Prisma.$ComplaintPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Complaint.
     * @param {ComplaintUpdateArgs} args - Arguments to update one Complaint.
     * @example
     * // Update one Complaint
     * const complaint = await prisma.complaint.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ComplaintUpdateArgs>(args: SelectSubset<T, ComplaintUpdateArgs<ExtArgs>>): Prisma__ComplaintClient<$Result.GetResult<Prisma.$ComplaintPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Complaints.
     * @param {ComplaintDeleteManyArgs} args - Arguments to filter Complaints to delete.
     * @example
     * // Delete a few Complaints
     * const { count } = await prisma.complaint.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ComplaintDeleteManyArgs>(args?: SelectSubset<T, ComplaintDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Complaints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComplaintUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Complaints
     * const complaint = await prisma.complaint.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ComplaintUpdateManyArgs>(args: SelectSubset<T, ComplaintUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Complaints and returns the data updated in the database.
     * @param {ComplaintUpdateManyAndReturnArgs} args - Arguments to update many Complaints.
     * @example
     * // Update many Complaints
     * const complaint = await prisma.complaint.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Complaints and only return the `id`
     * const complaintWithIdOnly = await prisma.complaint.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ComplaintUpdateManyAndReturnArgs>(args: SelectSubset<T, ComplaintUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComplaintPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Complaint.
     * @param {ComplaintUpsertArgs} args - Arguments to update or create a Complaint.
     * @example
     * // Update or create a Complaint
     * const complaint = await prisma.complaint.upsert({
     *   create: {
     *     // ... data to create a Complaint
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Complaint we want to update
     *   }
     * })
     */
    upsert<T extends ComplaintUpsertArgs>(args: SelectSubset<T, ComplaintUpsertArgs<ExtArgs>>): Prisma__ComplaintClient<$Result.GetResult<Prisma.$ComplaintPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Complaints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComplaintCountArgs} args - Arguments to filter Complaints to count.
     * @example
     * // Count the number of Complaints
     * const count = await prisma.complaint.count({
     *   where: {
     *     // ... the filter for the Complaints we want to count
     *   }
     * })
    **/
    count<T extends ComplaintCountArgs>(
      args?: Subset<T, ComplaintCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ComplaintCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Complaint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComplaintAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ComplaintAggregateArgs>(args: Subset<T, ComplaintAggregateArgs>): Prisma.PrismaPromise<GetComplaintAggregateType<T>>

    /**
     * Group by Complaint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComplaintGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ComplaintGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ComplaintGroupByArgs['orderBy'] }
        : { orderBy?: ComplaintGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ComplaintGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetComplaintGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Complaint model
   */
  readonly fields: ComplaintFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Complaint.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ComplaintClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    complainant<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reviewedBy<T extends Complaint$reviewedByArgs<ExtArgs> = {}>(args?: Subset<T, Complaint$reviewedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Complaint model
   */
  interface ComplaintFieldRefs {
    readonly id: FieldRef<"Complaint", 'String'>
    readonly complaintType: FieldRef<"Complaint", 'String'>
    readonly subject: FieldRef<"Complaint", 'String'>
    readonly details: FieldRef<"Complaint", 'String'>
    readonly complainantPhoneNumber: FieldRef<"Complaint", 'String'>
    readonly nextOfKinPhoneNumber: FieldRef<"Complaint", 'String'>
    readonly attachments: FieldRef<"Complaint", 'String[]'>
    readonly status: FieldRef<"Complaint", 'String'>
    readonly reviewStage: FieldRef<"Complaint", 'String'>
    readonly officerComments: FieldRef<"Complaint", 'String'>
    readonly internalNotes: FieldRef<"Complaint", 'String'>
    readonly rejectionReason: FieldRef<"Complaint", 'String'>
    readonly complainantId: FieldRef<"Complaint", 'String'>
    readonly assignedOfficerRole: FieldRef<"Complaint", 'String'>
    readonly reviewedById: FieldRef<"Complaint", 'String'>
    readonly createdAt: FieldRef<"Complaint", 'DateTime'>
    readonly updatedAt: FieldRef<"Complaint", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Complaint findUnique
   */
  export type ComplaintFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Complaint
     */
    select?: ComplaintSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Complaint
     */
    omit?: ComplaintOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComplaintInclude<ExtArgs> | null
    /**
     * Filter, which Complaint to fetch.
     */
    where: ComplaintWhereUniqueInput
  }

  /**
   * Complaint findUniqueOrThrow
   */
  export type ComplaintFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Complaint
     */
    select?: ComplaintSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Complaint
     */
    omit?: ComplaintOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComplaintInclude<ExtArgs> | null
    /**
     * Filter, which Complaint to fetch.
     */
    where: ComplaintWhereUniqueInput
  }

  /**
   * Complaint findFirst
   */
  export type ComplaintFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Complaint
     */
    select?: ComplaintSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Complaint
     */
    omit?: ComplaintOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComplaintInclude<ExtArgs> | null
    /**
     * Filter, which Complaint to fetch.
     */
    where?: ComplaintWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Complaints to fetch.
     */
    orderBy?: ComplaintOrderByWithRelationInput | ComplaintOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Complaints.
     */
    cursor?: ComplaintWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Complaints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Complaints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Complaints.
     */
    distinct?: ComplaintScalarFieldEnum | ComplaintScalarFieldEnum[]
  }

  /**
   * Complaint findFirstOrThrow
   */
  export type ComplaintFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Complaint
     */
    select?: ComplaintSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Complaint
     */
    omit?: ComplaintOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComplaintInclude<ExtArgs> | null
    /**
     * Filter, which Complaint to fetch.
     */
    where?: ComplaintWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Complaints to fetch.
     */
    orderBy?: ComplaintOrderByWithRelationInput | ComplaintOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Complaints.
     */
    cursor?: ComplaintWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Complaints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Complaints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Complaints.
     */
    distinct?: ComplaintScalarFieldEnum | ComplaintScalarFieldEnum[]
  }

  /**
   * Complaint findMany
   */
  export type ComplaintFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Complaint
     */
    select?: ComplaintSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Complaint
     */
    omit?: ComplaintOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComplaintInclude<ExtArgs> | null
    /**
     * Filter, which Complaints to fetch.
     */
    where?: ComplaintWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Complaints to fetch.
     */
    orderBy?: ComplaintOrderByWithRelationInput | ComplaintOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Complaints.
     */
    cursor?: ComplaintWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Complaints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Complaints.
     */
    skip?: number
    distinct?: ComplaintScalarFieldEnum | ComplaintScalarFieldEnum[]
  }

  /**
   * Complaint create
   */
  export type ComplaintCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Complaint
     */
    select?: ComplaintSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Complaint
     */
    omit?: ComplaintOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComplaintInclude<ExtArgs> | null
    /**
     * The data needed to create a Complaint.
     */
    data: XOR<ComplaintCreateInput, ComplaintUncheckedCreateInput>
  }

  /**
   * Complaint createMany
   */
  export type ComplaintCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Complaints.
     */
    data: ComplaintCreateManyInput | ComplaintCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Complaint createManyAndReturn
   */
  export type ComplaintCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Complaint
     */
    select?: ComplaintSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Complaint
     */
    omit?: ComplaintOmit<ExtArgs> | null
    /**
     * The data used to create many Complaints.
     */
    data: ComplaintCreateManyInput | ComplaintCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComplaintIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Complaint update
   */
  export type ComplaintUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Complaint
     */
    select?: ComplaintSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Complaint
     */
    omit?: ComplaintOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComplaintInclude<ExtArgs> | null
    /**
     * The data needed to update a Complaint.
     */
    data: XOR<ComplaintUpdateInput, ComplaintUncheckedUpdateInput>
    /**
     * Choose, which Complaint to update.
     */
    where: ComplaintWhereUniqueInput
  }

  /**
   * Complaint updateMany
   */
  export type ComplaintUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Complaints.
     */
    data: XOR<ComplaintUpdateManyMutationInput, ComplaintUncheckedUpdateManyInput>
    /**
     * Filter which Complaints to update
     */
    where?: ComplaintWhereInput
    /**
     * Limit how many Complaints to update.
     */
    limit?: number
  }

  /**
   * Complaint updateManyAndReturn
   */
  export type ComplaintUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Complaint
     */
    select?: ComplaintSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Complaint
     */
    omit?: ComplaintOmit<ExtArgs> | null
    /**
     * The data used to update Complaints.
     */
    data: XOR<ComplaintUpdateManyMutationInput, ComplaintUncheckedUpdateManyInput>
    /**
     * Filter which Complaints to update
     */
    where?: ComplaintWhereInput
    /**
     * Limit how many Complaints to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComplaintIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Complaint upsert
   */
  export type ComplaintUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Complaint
     */
    select?: ComplaintSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Complaint
     */
    omit?: ComplaintOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComplaintInclude<ExtArgs> | null
    /**
     * The filter to search for the Complaint to update in case it exists.
     */
    where: ComplaintWhereUniqueInput
    /**
     * In case the Complaint found by the `where` argument doesn't exist, create a new Complaint with this data.
     */
    create: XOR<ComplaintCreateInput, ComplaintUncheckedCreateInput>
    /**
     * In case the Complaint was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ComplaintUpdateInput, ComplaintUncheckedUpdateInput>
  }

  /**
   * Complaint delete
   */
  export type ComplaintDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Complaint
     */
    select?: ComplaintSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Complaint
     */
    omit?: ComplaintOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComplaintInclude<ExtArgs> | null
    /**
     * Filter which Complaint to delete.
     */
    where: ComplaintWhereUniqueInput
  }

  /**
   * Complaint deleteMany
   */
  export type ComplaintDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Complaints to delete
     */
    where?: ComplaintWhereInput
    /**
     * Limit how many Complaints to delete.
     */
    limit?: number
  }

  /**
   * Complaint.reviewedBy
   */
  export type Complaint$reviewedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Complaint without action
   */
  export type ComplaintDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Complaint
     */
    select?: ComplaintSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Complaint
     */
    omit?: ComplaintOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComplaintInclude<ExtArgs> | null
  }


  /**
   * Model Notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationMinAggregateOutputType = {
    id: string | null
    message: string | null
    link: string | null
    isRead: boolean | null
    userId: string | null
    createdAt: Date | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: string | null
    message: string | null
    link: string | null
    isRead: boolean | null
    userId: string | null
    createdAt: Date | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    message: number
    link: number
    isRead: number
    userId: number
    createdAt: number
    _all: number
  }


  export type NotificationMinAggregateInputType = {
    id?: true
    message?: true
    link?: true
    isRead?: true
    userId?: true
    createdAt?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    message?: true
    link?: true
    isRead?: true
    userId?: true
    createdAt?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    message?: true
    link?: true
    isRead?: true
    userId?: true
    createdAt?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notification to aggregate.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type NotificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithAggregationInput | NotificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: NotificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: string
    message: string
    link: string | null
    isRead: boolean
    userId: string
    createdAt: Date
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends NotificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type NotificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    message?: boolean
    link?: boolean
    isRead?: boolean
    userId?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    message?: boolean
    link?: boolean
    isRead?: boolean
    userId?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    message?: boolean
    link?: boolean
    isRead?: boolean
    userId?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectScalar = {
    id?: boolean
    message?: boolean
    link?: boolean
    isRead?: boolean
    userId?: boolean
    createdAt?: boolean
  }

  export type NotificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "message" | "link" | "isRead" | "userId" | "createdAt", ExtArgs["result"]["notification"]>
  export type NotificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type NotificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type NotificationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $NotificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notification"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      message: string
      link: string | null
      isRead: boolean
      userId: string
      createdAt: Date
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type NotificationGetPayload<S extends boolean | null | undefined | NotificationDefaultArgs> = $Result.GetResult<Prisma.$NotificationPayload, S>

  type NotificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NotificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface NotificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notification'], meta: { name: 'Notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {NotificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificationFindUniqueArgs>(args: SelectSubset<T, NotificationFindUniqueArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NotificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificationFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificationFindFirstArgs>(args?: SelectSubset<T, NotificationFindFirstArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificationFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificationFindManyArgs>(args?: SelectSubset<T, NotificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notification.
     * @param {NotificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends NotificationCreateArgs>(args: SelectSubset<T, NotificationCreateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notifications.
     * @param {NotificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificationCreateManyArgs>(args?: SelectSubset<T, NotificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {NotificationCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificationCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notification.
     * @param {NotificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends NotificationDeleteArgs>(args: SelectSubset<T, NotificationDeleteArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notification.
     * @param {NotificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificationUpdateArgs>(args: SelectSubset<T, NotificationUpdateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notifications.
     * @param {NotificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificationDeleteManyArgs>(args?: SelectSubset<T, NotificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificationUpdateManyArgs>(args: SelectSubset<T, NotificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications and returns the data updated in the database.
     * @param {NotificationUpdateManyAndReturnArgs} args - Arguments to update many Notifications.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends NotificationUpdateManyAndReturnArgs>(args: SelectSubset<T, NotificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notification.
     * @param {NotificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends NotificationUpsertArgs>(args: SelectSubset<T, NotificationUpsertArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends NotificationCountArgs>(
      args?: Subset<T, NotificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationGroupByArgs['orderBy'] }
        : { orderBy?: NotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notification model
   */
  readonly fields: NotificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notification model
   */
  interface NotificationFieldRefs {
    readonly id: FieldRef<"Notification", 'String'>
    readonly message: FieldRef<"Notification", 'String'>
    readonly link: FieldRef<"Notification", 'String'>
    readonly isRead: FieldRef<"Notification", 'Boolean'>
    readonly userId: FieldRef<"Notification", 'String'>
    readonly createdAt: FieldRef<"Notification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Notification findUnique
   */
  export type NotificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findUniqueOrThrow
   */
  export type NotificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findFirst
   */
  export type NotificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findFirstOrThrow
   */
  export type NotificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findMany
   */
  export type NotificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notifications to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification create
   */
  export type NotificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to create a Notification.
     */
    data: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
  }

  /**
   * Notification createMany
   */
  export type NotificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notification createManyAndReturn
   */
  export type NotificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification update
   */
  export type NotificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to update a Notification.
     */
    data: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
    /**
     * Choose, which Notification to update.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification updateMany
   */
  export type NotificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
  }

  /**
   * Notification updateManyAndReturn
   */
  export type NotificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification upsert
   */
  export type NotificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The filter to search for the Notification to update in case it exists.
     */
    where: NotificationWhereUniqueInput
    /**
     * In case the Notification found by the `where` argument doesn't exist, create a new Notification with this data.
     */
    create: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
    /**
     * In case the Notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
  }

  /**
   * Notification delete
   */
  export type NotificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter which Notification to delete.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification deleteMany
   */
  export type NotificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notifications to delete
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to delete.
     */
    limit?: number
  }

  /**
   * Notification without action
   */
  export type NotificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    username: 'username',
    password: 'password',
    role: 'role',
    active: 'active',
    employeeId: 'employeeId',
    institutionId: 'institutionId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const InstitutionScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type InstitutionScalarFieldEnum = (typeof InstitutionScalarFieldEnum)[keyof typeof InstitutionScalarFieldEnum]


  export const EmployeeScalarFieldEnum: {
    id: 'id',
    employeeEntityId: 'employeeEntityId',
    name: 'name',
    gender: 'gender',
    profileImageUrl: 'profileImageUrl',
    dateOfBirth: 'dateOfBirth',
    placeOfBirth: 'placeOfBirth',
    region: 'region',
    countryOfBirth: 'countryOfBirth',
    zanId: 'zanId',
    phoneNumber: 'phoneNumber',
    contactAddress: 'contactAddress',
    zssfNumber: 'zssfNumber',
    payrollNumber: 'payrollNumber',
    cadre: 'cadre',
    salaryScale: 'salaryScale',
    ministry: 'ministry',
    department: 'department',
    appointmentType: 'appointmentType',
    contractType: 'contractType',
    recentTitleDate: 'recentTitleDate',
    currentReportingOffice: 'currentReportingOffice',
    currentWorkplace: 'currentWorkplace',
    employmentDate: 'employmentDate',
    confirmationDate: 'confirmationDate',
    retirementDate: 'retirementDate',
    status: 'status',
    ardhilHaliUrl: 'ardhilHaliUrl',
    confirmationLetterUrl: 'confirmationLetterUrl',
    jobContractUrl: 'jobContractUrl',
    birthCertificateUrl: 'birthCertificateUrl',
    institutionId: 'institutionId'
  };

  export type EmployeeScalarFieldEnum = (typeof EmployeeScalarFieldEnum)[keyof typeof EmployeeScalarFieldEnum]


  export const EmployeeCertificateScalarFieldEnum: {
    id: 'id',
    type: 'type',
    name: 'name',
    url: 'url',
    employeeId: 'employeeId'
  };

  export type EmployeeCertificateScalarFieldEnum = (typeof EmployeeCertificateScalarFieldEnum)[keyof typeof EmployeeCertificateScalarFieldEnum]


  export const ConfirmationRequestScalarFieldEnum: {
    id: 'id',
    status: 'status',
    reviewStage: 'reviewStage',
    documents: 'documents',
    rejectionReason: 'rejectionReason',
    employeeId: 'employeeId',
    submittedById: 'submittedById',
    reviewedById: 'reviewedById',
    decisionDate: 'decisionDate',
    commissionDecisionDate: 'commissionDecisionDate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ConfirmationRequestScalarFieldEnum = (typeof ConfirmationRequestScalarFieldEnum)[keyof typeof ConfirmationRequestScalarFieldEnum]


  export const PromotionRequestScalarFieldEnum: {
    id: 'id',
    status: 'status',
    reviewStage: 'reviewStage',
    proposedCadre: 'proposedCadre',
    promotionType: 'promotionType',
    studiedOutsideCountry: 'studiedOutsideCountry',
    documents: 'documents',
    rejectionReason: 'rejectionReason',
    employeeId: 'employeeId',
    submittedById: 'submittedById',
    reviewedById: 'reviewedById',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    commissionDecisionReason: 'commissionDecisionReason'
  };

  export type PromotionRequestScalarFieldEnum = (typeof PromotionRequestScalarFieldEnum)[keyof typeof PromotionRequestScalarFieldEnum]


  export const LwopRequestScalarFieldEnum: {
    id: 'id',
    status: 'status',
    reviewStage: 'reviewStage',
    duration: 'duration',
    reason: 'reason',
    documents: 'documents',
    rejectionReason: 'rejectionReason',
    employeeId: 'employeeId',
    submittedById: 'submittedById',
    reviewedById: 'reviewedById',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    endDate: 'endDate',
    startDate: 'startDate'
  };

  export type LwopRequestScalarFieldEnum = (typeof LwopRequestScalarFieldEnum)[keyof typeof LwopRequestScalarFieldEnum]


  export const CadreChangeRequestScalarFieldEnum: {
    id: 'id',
    status: 'status',
    reviewStage: 'reviewStage',
    newCadre: 'newCadre',
    reason: 'reason',
    studiedOutsideCountry: 'studiedOutsideCountry',
    documents: 'documents',
    rejectionReason: 'rejectionReason',
    employeeId: 'employeeId',
    submittedById: 'submittedById',
    reviewedById: 'reviewedById',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CadreChangeRequestScalarFieldEnum = (typeof CadreChangeRequestScalarFieldEnum)[keyof typeof CadreChangeRequestScalarFieldEnum]


  export const RetirementRequestScalarFieldEnum: {
    id: 'id',
    status: 'status',
    reviewStage: 'reviewStage',
    retirementType: 'retirementType',
    illnessDescription: 'illnessDescription',
    proposedDate: 'proposedDate',
    delayReason: 'delayReason',
    documents: 'documents',
    rejectionReason: 'rejectionReason',
    employeeId: 'employeeId',
    submittedById: 'submittedById',
    reviewedById: 'reviewedById',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RetirementRequestScalarFieldEnum = (typeof RetirementRequestScalarFieldEnum)[keyof typeof RetirementRequestScalarFieldEnum]


  export const ResignationRequestScalarFieldEnum: {
    id: 'id',
    status: 'status',
    reviewStage: 'reviewStage',
    effectiveDate: 'effectiveDate',
    reason: 'reason',
    documents: 'documents',
    rejectionReason: 'rejectionReason',
    employeeId: 'employeeId',
    submittedById: 'submittedById',
    reviewedById: 'reviewedById',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ResignationRequestScalarFieldEnum = (typeof ResignationRequestScalarFieldEnum)[keyof typeof ResignationRequestScalarFieldEnum]


  export const ServiceExtensionRequestScalarFieldEnum: {
    id: 'id',
    status: 'status',
    reviewStage: 'reviewStage',
    currentRetirementDate: 'currentRetirementDate',
    requestedExtensionPeriod: 'requestedExtensionPeriod',
    justification: 'justification',
    documents: 'documents',
    rejectionReason: 'rejectionReason',
    employeeId: 'employeeId',
    submittedById: 'submittedById',
    reviewedById: 'reviewedById',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ServiceExtensionRequestScalarFieldEnum = (typeof ServiceExtensionRequestScalarFieldEnum)[keyof typeof ServiceExtensionRequestScalarFieldEnum]


  export const SeparationRequestScalarFieldEnum: {
    id: 'id',
    type: 'type',
    status: 'status',
    reviewStage: 'reviewStage',
    reason: 'reason',
    documents: 'documents',
    rejectionReason: 'rejectionReason',
    employeeId: 'employeeId',
    submittedById: 'submittedById',
    reviewedById: 'reviewedById',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SeparationRequestScalarFieldEnum = (typeof SeparationRequestScalarFieldEnum)[keyof typeof SeparationRequestScalarFieldEnum]


  export const ComplaintScalarFieldEnum: {
    id: 'id',
    complaintType: 'complaintType',
    subject: 'subject',
    details: 'details',
    complainantPhoneNumber: 'complainantPhoneNumber',
    nextOfKinPhoneNumber: 'nextOfKinPhoneNumber',
    attachments: 'attachments',
    status: 'status',
    reviewStage: 'reviewStage',
    officerComments: 'officerComments',
    internalNotes: 'internalNotes',
    rejectionReason: 'rejectionReason',
    complainantId: 'complainantId',
    assignedOfficerRole: 'assignedOfficerRole',
    reviewedById: 'reviewedById',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ComplaintScalarFieldEnum = (typeof ComplaintScalarFieldEnum)[keyof typeof ComplaintScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    message: 'message',
    link: 'link',
    isRead: 'isRead',
    userId: 'userId',
    createdAt: 'createdAt'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    role?: StringFilter<"User"> | string
    active?: BoolFilter<"User"> | boolean
    employeeId?: StringNullableFilter<"User"> | string | null
    institutionId?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    reviewedCadreChanges?: CadreChangeRequestListRelationFilter
    submittedCadreChanges?: CadreChangeRequestListRelationFilter
    complaints?: ComplaintListRelationFilter
    reviewedComplaints?: ComplaintListRelationFilter
    reviewedConfirmations?: ConfirmationRequestListRelationFilter
    submittedConfirmations?: ConfirmationRequestListRelationFilter
    reviewedLWOPs?: LwopRequestListRelationFilter
    submittedLWOPs?: LwopRequestListRelationFilter
    notifications?: NotificationListRelationFilter
    reviewedPromotions?: PromotionRequestListRelationFilter
    submittedPromotions?: PromotionRequestListRelationFilter
    reviewedResignations?: ResignationRequestListRelationFilter
    submittedResignations?: ResignationRequestListRelationFilter
    reviewedRetirements?: RetirementRequestListRelationFilter
    submittedRetirements?: RetirementRequestListRelationFilter
    reviewedSeparations?: SeparationRequestListRelationFilter
    submittedSeparations?: SeparationRequestListRelationFilter
    reviewedServiceExtensions?: ServiceExtensionRequestListRelationFilter
    submittedServiceExtensions?: ServiceExtensionRequestListRelationFilter
    employee?: XOR<EmployeeNullableScalarRelationFilter, EmployeeWhereInput> | null
    institution?: XOR<InstitutionScalarRelationFilter, InstitutionWhereInput>
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role?: SortOrder
    active?: SortOrder
    employeeId?: SortOrderInput | SortOrder
    institutionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    reviewedCadreChanges?: CadreChangeRequestOrderByRelationAggregateInput
    submittedCadreChanges?: CadreChangeRequestOrderByRelationAggregateInput
    complaints?: ComplaintOrderByRelationAggregateInput
    reviewedComplaints?: ComplaintOrderByRelationAggregateInput
    reviewedConfirmations?: ConfirmationRequestOrderByRelationAggregateInput
    submittedConfirmations?: ConfirmationRequestOrderByRelationAggregateInput
    reviewedLWOPs?: LwopRequestOrderByRelationAggregateInput
    submittedLWOPs?: LwopRequestOrderByRelationAggregateInput
    notifications?: NotificationOrderByRelationAggregateInput
    reviewedPromotions?: PromotionRequestOrderByRelationAggregateInput
    submittedPromotions?: PromotionRequestOrderByRelationAggregateInput
    reviewedResignations?: ResignationRequestOrderByRelationAggregateInput
    submittedResignations?: ResignationRequestOrderByRelationAggregateInput
    reviewedRetirements?: RetirementRequestOrderByRelationAggregateInput
    submittedRetirements?: RetirementRequestOrderByRelationAggregateInput
    reviewedSeparations?: SeparationRequestOrderByRelationAggregateInput
    submittedSeparations?: SeparationRequestOrderByRelationAggregateInput
    reviewedServiceExtensions?: ServiceExtensionRequestOrderByRelationAggregateInput
    submittedServiceExtensions?: ServiceExtensionRequestOrderByRelationAggregateInput
    employee?: EmployeeOrderByWithRelationInput
    institution?: InstitutionOrderByWithRelationInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    username?: string
    employeeId?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    role?: StringFilter<"User"> | string
    active?: BoolFilter<"User"> | boolean
    institutionId?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    reviewedCadreChanges?: CadreChangeRequestListRelationFilter
    submittedCadreChanges?: CadreChangeRequestListRelationFilter
    complaints?: ComplaintListRelationFilter
    reviewedComplaints?: ComplaintListRelationFilter
    reviewedConfirmations?: ConfirmationRequestListRelationFilter
    submittedConfirmations?: ConfirmationRequestListRelationFilter
    reviewedLWOPs?: LwopRequestListRelationFilter
    submittedLWOPs?: LwopRequestListRelationFilter
    notifications?: NotificationListRelationFilter
    reviewedPromotions?: PromotionRequestListRelationFilter
    submittedPromotions?: PromotionRequestListRelationFilter
    reviewedResignations?: ResignationRequestListRelationFilter
    submittedResignations?: ResignationRequestListRelationFilter
    reviewedRetirements?: RetirementRequestListRelationFilter
    submittedRetirements?: RetirementRequestListRelationFilter
    reviewedSeparations?: SeparationRequestListRelationFilter
    submittedSeparations?: SeparationRequestListRelationFilter
    reviewedServiceExtensions?: ServiceExtensionRequestListRelationFilter
    submittedServiceExtensions?: ServiceExtensionRequestListRelationFilter
    employee?: XOR<EmployeeNullableScalarRelationFilter, EmployeeWhereInput> | null
    institution?: XOR<InstitutionScalarRelationFilter, InstitutionWhereInput>
  }, "id" | "username" | "employeeId">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role?: SortOrder
    active?: SortOrder
    employeeId?: SortOrderInput | SortOrder
    institutionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    name?: StringWithAggregatesFilter<"User"> | string
    username?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    role?: StringWithAggregatesFilter<"User"> | string
    active?: BoolWithAggregatesFilter<"User"> | boolean
    employeeId?: StringNullableWithAggregatesFilter<"User"> | string | null
    institutionId?: StringWithAggregatesFilter<"User"> | string
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type InstitutionWhereInput = {
    AND?: InstitutionWhereInput | InstitutionWhereInput[]
    OR?: InstitutionWhereInput[]
    NOT?: InstitutionWhereInput | InstitutionWhereInput[]
    id?: StringFilter<"Institution"> | string
    name?: StringFilter<"Institution"> | string
    employees?: EmployeeListRelationFilter
    users?: UserListRelationFilter
  }

  export type InstitutionOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    employees?: EmployeeOrderByRelationAggregateInput
    users?: UserOrderByRelationAggregateInput
  }

  export type InstitutionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: InstitutionWhereInput | InstitutionWhereInput[]
    OR?: InstitutionWhereInput[]
    NOT?: InstitutionWhereInput | InstitutionWhereInput[]
    employees?: EmployeeListRelationFilter
    users?: UserListRelationFilter
  }, "id" | "name">

  export type InstitutionOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: InstitutionCountOrderByAggregateInput
    _max?: InstitutionMaxOrderByAggregateInput
    _min?: InstitutionMinOrderByAggregateInput
  }

  export type InstitutionScalarWhereWithAggregatesInput = {
    AND?: InstitutionScalarWhereWithAggregatesInput | InstitutionScalarWhereWithAggregatesInput[]
    OR?: InstitutionScalarWhereWithAggregatesInput[]
    NOT?: InstitutionScalarWhereWithAggregatesInput | InstitutionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Institution"> | string
    name?: StringWithAggregatesFilter<"Institution"> | string
  }

  export type EmployeeWhereInput = {
    AND?: EmployeeWhereInput | EmployeeWhereInput[]
    OR?: EmployeeWhereInput[]
    NOT?: EmployeeWhereInput | EmployeeWhereInput[]
    id?: StringFilter<"Employee"> | string
    employeeEntityId?: StringNullableFilter<"Employee"> | string | null
    name?: StringFilter<"Employee"> | string
    gender?: StringFilter<"Employee"> | string
    profileImageUrl?: StringNullableFilter<"Employee"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"Employee"> | Date | string | null
    placeOfBirth?: StringNullableFilter<"Employee"> | string | null
    region?: StringNullableFilter<"Employee"> | string | null
    countryOfBirth?: StringNullableFilter<"Employee"> | string | null
    zanId?: StringFilter<"Employee"> | string
    phoneNumber?: StringNullableFilter<"Employee"> | string | null
    contactAddress?: StringNullableFilter<"Employee"> | string | null
    zssfNumber?: StringNullableFilter<"Employee"> | string | null
    payrollNumber?: StringNullableFilter<"Employee"> | string | null
    cadre?: StringNullableFilter<"Employee"> | string | null
    salaryScale?: StringNullableFilter<"Employee"> | string | null
    ministry?: StringNullableFilter<"Employee"> | string | null
    department?: StringNullableFilter<"Employee"> | string | null
    appointmentType?: StringNullableFilter<"Employee"> | string | null
    contractType?: StringNullableFilter<"Employee"> | string | null
    recentTitleDate?: DateTimeNullableFilter<"Employee"> | Date | string | null
    currentReportingOffice?: StringNullableFilter<"Employee"> | string | null
    currentWorkplace?: StringNullableFilter<"Employee"> | string | null
    employmentDate?: DateTimeNullableFilter<"Employee"> | Date | string | null
    confirmationDate?: DateTimeNullableFilter<"Employee"> | Date | string | null
    retirementDate?: DateTimeNullableFilter<"Employee"> | Date | string | null
    status?: StringNullableFilter<"Employee"> | string | null
    ardhilHaliUrl?: StringNullableFilter<"Employee"> | string | null
    confirmationLetterUrl?: StringNullableFilter<"Employee"> | string | null
    jobContractUrl?: StringNullableFilter<"Employee"> | string | null
    birthCertificateUrl?: StringNullableFilter<"Employee"> | string | null
    institutionId?: StringFilter<"Employee"> | string
    cadreChangeRequests?: CadreChangeRequestListRelationFilter
    confirmationRequests?: ConfirmationRequestListRelationFilter
    institution?: XOR<InstitutionScalarRelationFilter, InstitutionWhereInput>
    certificates?: EmployeeCertificateListRelationFilter
    lwopRequests?: LwopRequestListRelationFilter
    promotionRequests?: PromotionRequestListRelationFilter
    resignationRequests?: ResignationRequestListRelationFilter
    retirementRequests?: RetirementRequestListRelationFilter
    separationRequests?: SeparationRequestListRelationFilter
    serviceExtensionRequests?: ServiceExtensionRequestListRelationFilter
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type EmployeeOrderByWithRelationInput = {
    id?: SortOrder
    employeeEntityId?: SortOrderInput | SortOrder
    name?: SortOrder
    gender?: SortOrder
    profileImageUrl?: SortOrderInput | SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    placeOfBirth?: SortOrderInput | SortOrder
    region?: SortOrderInput | SortOrder
    countryOfBirth?: SortOrderInput | SortOrder
    zanId?: SortOrder
    phoneNumber?: SortOrderInput | SortOrder
    contactAddress?: SortOrderInput | SortOrder
    zssfNumber?: SortOrderInput | SortOrder
    payrollNumber?: SortOrderInput | SortOrder
    cadre?: SortOrderInput | SortOrder
    salaryScale?: SortOrderInput | SortOrder
    ministry?: SortOrderInput | SortOrder
    department?: SortOrderInput | SortOrder
    appointmentType?: SortOrderInput | SortOrder
    contractType?: SortOrderInput | SortOrder
    recentTitleDate?: SortOrderInput | SortOrder
    currentReportingOffice?: SortOrderInput | SortOrder
    currentWorkplace?: SortOrderInput | SortOrder
    employmentDate?: SortOrderInput | SortOrder
    confirmationDate?: SortOrderInput | SortOrder
    retirementDate?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    ardhilHaliUrl?: SortOrderInput | SortOrder
    confirmationLetterUrl?: SortOrderInput | SortOrder
    jobContractUrl?: SortOrderInput | SortOrder
    birthCertificateUrl?: SortOrderInput | SortOrder
    institutionId?: SortOrder
    cadreChangeRequests?: CadreChangeRequestOrderByRelationAggregateInput
    confirmationRequests?: ConfirmationRequestOrderByRelationAggregateInput
    institution?: InstitutionOrderByWithRelationInput
    certificates?: EmployeeCertificateOrderByRelationAggregateInput
    lwopRequests?: LwopRequestOrderByRelationAggregateInput
    promotionRequests?: PromotionRequestOrderByRelationAggregateInput
    resignationRequests?: ResignationRequestOrderByRelationAggregateInput
    retirementRequests?: RetirementRequestOrderByRelationAggregateInput
    separationRequests?: SeparationRequestOrderByRelationAggregateInput
    serviceExtensionRequests?: ServiceExtensionRequestOrderByRelationAggregateInput
    user?: UserOrderByWithRelationInput
  }

  export type EmployeeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    zanId?: string
    AND?: EmployeeWhereInput | EmployeeWhereInput[]
    OR?: EmployeeWhereInput[]
    NOT?: EmployeeWhereInput | EmployeeWhereInput[]
    employeeEntityId?: StringNullableFilter<"Employee"> | string | null
    name?: StringFilter<"Employee"> | string
    gender?: StringFilter<"Employee"> | string
    profileImageUrl?: StringNullableFilter<"Employee"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"Employee"> | Date | string | null
    placeOfBirth?: StringNullableFilter<"Employee"> | string | null
    region?: StringNullableFilter<"Employee"> | string | null
    countryOfBirth?: StringNullableFilter<"Employee"> | string | null
    phoneNumber?: StringNullableFilter<"Employee"> | string | null
    contactAddress?: StringNullableFilter<"Employee"> | string | null
    zssfNumber?: StringNullableFilter<"Employee"> | string | null
    payrollNumber?: StringNullableFilter<"Employee"> | string | null
    cadre?: StringNullableFilter<"Employee"> | string | null
    salaryScale?: StringNullableFilter<"Employee"> | string | null
    ministry?: StringNullableFilter<"Employee"> | string | null
    department?: StringNullableFilter<"Employee"> | string | null
    appointmentType?: StringNullableFilter<"Employee"> | string | null
    contractType?: StringNullableFilter<"Employee"> | string | null
    recentTitleDate?: DateTimeNullableFilter<"Employee"> | Date | string | null
    currentReportingOffice?: StringNullableFilter<"Employee"> | string | null
    currentWorkplace?: StringNullableFilter<"Employee"> | string | null
    employmentDate?: DateTimeNullableFilter<"Employee"> | Date | string | null
    confirmationDate?: DateTimeNullableFilter<"Employee"> | Date | string | null
    retirementDate?: DateTimeNullableFilter<"Employee"> | Date | string | null
    status?: StringNullableFilter<"Employee"> | string | null
    ardhilHaliUrl?: StringNullableFilter<"Employee"> | string | null
    confirmationLetterUrl?: StringNullableFilter<"Employee"> | string | null
    jobContractUrl?: StringNullableFilter<"Employee"> | string | null
    birthCertificateUrl?: StringNullableFilter<"Employee"> | string | null
    institutionId?: StringFilter<"Employee"> | string
    cadreChangeRequests?: CadreChangeRequestListRelationFilter
    confirmationRequests?: ConfirmationRequestListRelationFilter
    institution?: XOR<InstitutionScalarRelationFilter, InstitutionWhereInput>
    certificates?: EmployeeCertificateListRelationFilter
    lwopRequests?: LwopRequestListRelationFilter
    promotionRequests?: PromotionRequestListRelationFilter
    resignationRequests?: ResignationRequestListRelationFilter
    retirementRequests?: RetirementRequestListRelationFilter
    separationRequests?: SeparationRequestListRelationFilter
    serviceExtensionRequests?: ServiceExtensionRequestListRelationFilter
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id" | "zanId">

  export type EmployeeOrderByWithAggregationInput = {
    id?: SortOrder
    employeeEntityId?: SortOrderInput | SortOrder
    name?: SortOrder
    gender?: SortOrder
    profileImageUrl?: SortOrderInput | SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    placeOfBirth?: SortOrderInput | SortOrder
    region?: SortOrderInput | SortOrder
    countryOfBirth?: SortOrderInput | SortOrder
    zanId?: SortOrder
    phoneNumber?: SortOrderInput | SortOrder
    contactAddress?: SortOrderInput | SortOrder
    zssfNumber?: SortOrderInput | SortOrder
    payrollNumber?: SortOrderInput | SortOrder
    cadre?: SortOrderInput | SortOrder
    salaryScale?: SortOrderInput | SortOrder
    ministry?: SortOrderInput | SortOrder
    department?: SortOrderInput | SortOrder
    appointmentType?: SortOrderInput | SortOrder
    contractType?: SortOrderInput | SortOrder
    recentTitleDate?: SortOrderInput | SortOrder
    currentReportingOffice?: SortOrderInput | SortOrder
    currentWorkplace?: SortOrderInput | SortOrder
    employmentDate?: SortOrderInput | SortOrder
    confirmationDate?: SortOrderInput | SortOrder
    retirementDate?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    ardhilHaliUrl?: SortOrderInput | SortOrder
    confirmationLetterUrl?: SortOrderInput | SortOrder
    jobContractUrl?: SortOrderInput | SortOrder
    birthCertificateUrl?: SortOrderInput | SortOrder
    institutionId?: SortOrder
    _count?: EmployeeCountOrderByAggregateInput
    _max?: EmployeeMaxOrderByAggregateInput
    _min?: EmployeeMinOrderByAggregateInput
  }

  export type EmployeeScalarWhereWithAggregatesInput = {
    AND?: EmployeeScalarWhereWithAggregatesInput | EmployeeScalarWhereWithAggregatesInput[]
    OR?: EmployeeScalarWhereWithAggregatesInput[]
    NOT?: EmployeeScalarWhereWithAggregatesInput | EmployeeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Employee"> | string
    employeeEntityId?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    name?: StringWithAggregatesFilter<"Employee"> | string
    gender?: StringWithAggregatesFilter<"Employee"> | string
    profileImageUrl?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    dateOfBirth?: DateTimeNullableWithAggregatesFilter<"Employee"> | Date | string | null
    placeOfBirth?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    region?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    countryOfBirth?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    zanId?: StringWithAggregatesFilter<"Employee"> | string
    phoneNumber?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    contactAddress?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    zssfNumber?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    payrollNumber?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    cadre?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    salaryScale?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    ministry?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    department?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    appointmentType?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    contractType?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    recentTitleDate?: DateTimeNullableWithAggregatesFilter<"Employee"> | Date | string | null
    currentReportingOffice?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    currentWorkplace?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    employmentDate?: DateTimeNullableWithAggregatesFilter<"Employee"> | Date | string | null
    confirmationDate?: DateTimeNullableWithAggregatesFilter<"Employee"> | Date | string | null
    retirementDate?: DateTimeNullableWithAggregatesFilter<"Employee"> | Date | string | null
    status?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    ardhilHaliUrl?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    confirmationLetterUrl?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    jobContractUrl?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    birthCertificateUrl?: StringNullableWithAggregatesFilter<"Employee"> | string | null
    institutionId?: StringWithAggregatesFilter<"Employee"> | string
  }

  export type EmployeeCertificateWhereInput = {
    AND?: EmployeeCertificateWhereInput | EmployeeCertificateWhereInput[]
    OR?: EmployeeCertificateWhereInput[]
    NOT?: EmployeeCertificateWhereInput | EmployeeCertificateWhereInput[]
    id?: StringFilter<"EmployeeCertificate"> | string
    type?: StringFilter<"EmployeeCertificate"> | string
    name?: StringFilter<"EmployeeCertificate"> | string
    url?: StringNullableFilter<"EmployeeCertificate"> | string | null
    employeeId?: StringFilter<"EmployeeCertificate"> | string
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
  }

  export type EmployeeCertificateOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    url?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    employee?: EmployeeOrderByWithRelationInput
  }

  export type EmployeeCertificateWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EmployeeCertificateWhereInput | EmployeeCertificateWhereInput[]
    OR?: EmployeeCertificateWhereInput[]
    NOT?: EmployeeCertificateWhereInput | EmployeeCertificateWhereInput[]
    type?: StringFilter<"EmployeeCertificate"> | string
    name?: StringFilter<"EmployeeCertificate"> | string
    url?: StringNullableFilter<"EmployeeCertificate"> | string | null
    employeeId?: StringFilter<"EmployeeCertificate"> | string
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
  }, "id">

  export type EmployeeCertificateOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    url?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    _count?: EmployeeCertificateCountOrderByAggregateInput
    _max?: EmployeeCertificateMaxOrderByAggregateInput
    _min?: EmployeeCertificateMinOrderByAggregateInput
  }

  export type EmployeeCertificateScalarWhereWithAggregatesInput = {
    AND?: EmployeeCertificateScalarWhereWithAggregatesInput | EmployeeCertificateScalarWhereWithAggregatesInput[]
    OR?: EmployeeCertificateScalarWhereWithAggregatesInput[]
    NOT?: EmployeeCertificateScalarWhereWithAggregatesInput | EmployeeCertificateScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EmployeeCertificate"> | string
    type?: StringWithAggregatesFilter<"EmployeeCertificate"> | string
    name?: StringWithAggregatesFilter<"EmployeeCertificate"> | string
    url?: StringNullableWithAggregatesFilter<"EmployeeCertificate"> | string | null
    employeeId?: StringWithAggregatesFilter<"EmployeeCertificate"> | string
  }

  export type ConfirmationRequestWhereInput = {
    AND?: ConfirmationRequestWhereInput | ConfirmationRequestWhereInput[]
    OR?: ConfirmationRequestWhereInput[]
    NOT?: ConfirmationRequestWhereInput | ConfirmationRequestWhereInput[]
    id?: StringFilter<"ConfirmationRequest"> | string
    status?: StringFilter<"ConfirmationRequest"> | string
    reviewStage?: StringFilter<"ConfirmationRequest"> | string
    documents?: StringNullableListFilter<"ConfirmationRequest">
    rejectionReason?: StringNullableFilter<"ConfirmationRequest"> | string | null
    employeeId?: StringFilter<"ConfirmationRequest"> | string
    submittedById?: StringFilter<"ConfirmationRequest"> | string
    reviewedById?: StringNullableFilter<"ConfirmationRequest"> | string | null
    decisionDate?: DateTimeNullableFilter<"ConfirmationRequest"> | Date | string | null
    commissionDecisionDate?: DateTimeNullableFilter<"ConfirmationRequest"> | Date | string | null
    createdAt?: DateTimeFilter<"ConfirmationRequest"> | Date | string
    updatedAt?: DateTimeFilter<"ConfirmationRequest"> | Date | string
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    submittedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ConfirmationRequestOrderByWithRelationInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    decisionDate?: SortOrderInput | SortOrder
    commissionDecisionDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    employee?: EmployeeOrderByWithRelationInput
    reviewedBy?: UserOrderByWithRelationInput
    submittedBy?: UserOrderByWithRelationInput
  }

  export type ConfirmationRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ConfirmationRequestWhereInput | ConfirmationRequestWhereInput[]
    OR?: ConfirmationRequestWhereInput[]
    NOT?: ConfirmationRequestWhereInput | ConfirmationRequestWhereInput[]
    status?: StringFilter<"ConfirmationRequest"> | string
    reviewStage?: StringFilter<"ConfirmationRequest"> | string
    documents?: StringNullableListFilter<"ConfirmationRequest">
    rejectionReason?: StringNullableFilter<"ConfirmationRequest"> | string | null
    employeeId?: StringFilter<"ConfirmationRequest"> | string
    submittedById?: StringFilter<"ConfirmationRequest"> | string
    reviewedById?: StringNullableFilter<"ConfirmationRequest"> | string | null
    decisionDate?: DateTimeNullableFilter<"ConfirmationRequest"> | Date | string | null
    commissionDecisionDate?: DateTimeNullableFilter<"ConfirmationRequest"> | Date | string | null
    createdAt?: DateTimeFilter<"ConfirmationRequest"> | Date | string
    updatedAt?: DateTimeFilter<"ConfirmationRequest"> | Date | string
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    submittedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type ConfirmationRequestOrderByWithAggregationInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    decisionDate?: SortOrderInput | SortOrder
    commissionDecisionDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ConfirmationRequestCountOrderByAggregateInput
    _max?: ConfirmationRequestMaxOrderByAggregateInput
    _min?: ConfirmationRequestMinOrderByAggregateInput
  }

  export type ConfirmationRequestScalarWhereWithAggregatesInput = {
    AND?: ConfirmationRequestScalarWhereWithAggregatesInput | ConfirmationRequestScalarWhereWithAggregatesInput[]
    OR?: ConfirmationRequestScalarWhereWithAggregatesInput[]
    NOT?: ConfirmationRequestScalarWhereWithAggregatesInput | ConfirmationRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ConfirmationRequest"> | string
    status?: StringWithAggregatesFilter<"ConfirmationRequest"> | string
    reviewStage?: StringWithAggregatesFilter<"ConfirmationRequest"> | string
    documents?: StringNullableListFilter<"ConfirmationRequest">
    rejectionReason?: StringNullableWithAggregatesFilter<"ConfirmationRequest"> | string | null
    employeeId?: StringWithAggregatesFilter<"ConfirmationRequest"> | string
    submittedById?: StringWithAggregatesFilter<"ConfirmationRequest"> | string
    reviewedById?: StringNullableWithAggregatesFilter<"ConfirmationRequest"> | string | null
    decisionDate?: DateTimeNullableWithAggregatesFilter<"ConfirmationRequest"> | Date | string | null
    commissionDecisionDate?: DateTimeNullableWithAggregatesFilter<"ConfirmationRequest"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ConfirmationRequest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ConfirmationRequest"> | Date | string
  }

  export type PromotionRequestWhereInput = {
    AND?: PromotionRequestWhereInput | PromotionRequestWhereInput[]
    OR?: PromotionRequestWhereInput[]
    NOT?: PromotionRequestWhereInput | PromotionRequestWhereInput[]
    id?: StringFilter<"PromotionRequest"> | string
    status?: StringFilter<"PromotionRequest"> | string
    reviewStage?: StringFilter<"PromotionRequest"> | string
    proposedCadre?: StringFilter<"PromotionRequest"> | string
    promotionType?: StringFilter<"PromotionRequest"> | string
    studiedOutsideCountry?: BoolNullableFilter<"PromotionRequest"> | boolean | null
    documents?: StringNullableListFilter<"PromotionRequest">
    rejectionReason?: StringNullableFilter<"PromotionRequest"> | string | null
    employeeId?: StringFilter<"PromotionRequest"> | string
    submittedById?: StringFilter<"PromotionRequest"> | string
    reviewedById?: StringNullableFilter<"PromotionRequest"> | string | null
    createdAt?: DateTimeFilter<"PromotionRequest"> | Date | string
    updatedAt?: DateTimeFilter<"PromotionRequest"> | Date | string
    commissionDecisionReason?: StringNullableFilter<"PromotionRequest"> | string | null
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    submittedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type PromotionRequestOrderByWithRelationInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    proposedCadre?: SortOrder
    promotionType?: SortOrder
    studiedOutsideCountry?: SortOrderInput | SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    commissionDecisionReason?: SortOrderInput | SortOrder
    employee?: EmployeeOrderByWithRelationInput
    reviewedBy?: UserOrderByWithRelationInput
    submittedBy?: UserOrderByWithRelationInput
  }

  export type PromotionRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PromotionRequestWhereInput | PromotionRequestWhereInput[]
    OR?: PromotionRequestWhereInput[]
    NOT?: PromotionRequestWhereInput | PromotionRequestWhereInput[]
    status?: StringFilter<"PromotionRequest"> | string
    reviewStage?: StringFilter<"PromotionRequest"> | string
    proposedCadre?: StringFilter<"PromotionRequest"> | string
    promotionType?: StringFilter<"PromotionRequest"> | string
    studiedOutsideCountry?: BoolNullableFilter<"PromotionRequest"> | boolean | null
    documents?: StringNullableListFilter<"PromotionRequest">
    rejectionReason?: StringNullableFilter<"PromotionRequest"> | string | null
    employeeId?: StringFilter<"PromotionRequest"> | string
    submittedById?: StringFilter<"PromotionRequest"> | string
    reviewedById?: StringNullableFilter<"PromotionRequest"> | string | null
    createdAt?: DateTimeFilter<"PromotionRequest"> | Date | string
    updatedAt?: DateTimeFilter<"PromotionRequest"> | Date | string
    commissionDecisionReason?: StringNullableFilter<"PromotionRequest"> | string | null
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    submittedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type PromotionRequestOrderByWithAggregationInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    proposedCadre?: SortOrder
    promotionType?: SortOrder
    studiedOutsideCountry?: SortOrderInput | SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    commissionDecisionReason?: SortOrderInput | SortOrder
    _count?: PromotionRequestCountOrderByAggregateInput
    _max?: PromotionRequestMaxOrderByAggregateInput
    _min?: PromotionRequestMinOrderByAggregateInput
  }

  export type PromotionRequestScalarWhereWithAggregatesInput = {
    AND?: PromotionRequestScalarWhereWithAggregatesInput | PromotionRequestScalarWhereWithAggregatesInput[]
    OR?: PromotionRequestScalarWhereWithAggregatesInput[]
    NOT?: PromotionRequestScalarWhereWithAggregatesInput | PromotionRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PromotionRequest"> | string
    status?: StringWithAggregatesFilter<"PromotionRequest"> | string
    reviewStage?: StringWithAggregatesFilter<"PromotionRequest"> | string
    proposedCadre?: StringWithAggregatesFilter<"PromotionRequest"> | string
    promotionType?: StringWithAggregatesFilter<"PromotionRequest"> | string
    studiedOutsideCountry?: BoolNullableWithAggregatesFilter<"PromotionRequest"> | boolean | null
    documents?: StringNullableListFilter<"PromotionRequest">
    rejectionReason?: StringNullableWithAggregatesFilter<"PromotionRequest"> | string | null
    employeeId?: StringWithAggregatesFilter<"PromotionRequest"> | string
    submittedById?: StringWithAggregatesFilter<"PromotionRequest"> | string
    reviewedById?: StringNullableWithAggregatesFilter<"PromotionRequest"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PromotionRequest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PromotionRequest"> | Date | string
    commissionDecisionReason?: StringNullableWithAggregatesFilter<"PromotionRequest"> | string | null
  }

  export type LwopRequestWhereInput = {
    AND?: LwopRequestWhereInput | LwopRequestWhereInput[]
    OR?: LwopRequestWhereInput[]
    NOT?: LwopRequestWhereInput | LwopRequestWhereInput[]
    id?: StringFilter<"LwopRequest"> | string
    status?: StringFilter<"LwopRequest"> | string
    reviewStage?: StringFilter<"LwopRequest"> | string
    duration?: StringFilter<"LwopRequest"> | string
    reason?: StringFilter<"LwopRequest"> | string
    documents?: StringNullableListFilter<"LwopRequest">
    rejectionReason?: StringNullableFilter<"LwopRequest"> | string | null
    employeeId?: StringFilter<"LwopRequest"> | string
    submittedById?: StringFilter<"LwopRequest"> | string
    reviewedById?: StringNullableFilter<"LwopRequest"> | string | null
    createdAt?: DateTimeFilter<"LwopRequest"> | Date | string
    updatedAt?: DateTimeFilter<"LwopRequest"> | Date | string
    endDate?: DateTimeNullableFilter<"LwopRequest"> | Date | string | null
    startDate?: DateTimeNullableFilter<"LwopRequest"> | Date | string | null
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    submittedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type LwopRequestOrderByWithRelationInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    duration?: SortOrder
    reason?: SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    endDate?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    employee?: EmployeeOrderByWithRelationInput
    reviewedBy?: UserOrderByWithRelationInput
    submittedBy?: UserOrderByWithRelationInput
  }

  export type LwopRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: LwopRequestWhereInput | LwopRequestWhereInput[]
    OR?: LwopRequestWhereInput[]
    NOT?: LwopRequestWhereInput | LwopRequestWhereInput[]
    status?: StringFilter<"LwopRequest"> | string
    reviewStage?: StringFilter<"LwopRequest"> | string
    duration?: StringFilter<"LwopRequest"> | string
    reason?: StringFilter<"LwopRequest"> | string
    documents?: StringNullableListFilter<"LwopRequest">
    rejectionReason?: StringNullableFilter<"LwopRequest"> | string | null
    employeeId?: StringFilter<"LwopRequest"> | string
    submittedById?: StringFilter<"LwopRequest"> | string
    reviewedById?: StringNullableFilter<"LwopRequest"> | string | null
    createdAt?: DateTimeFilter<"LwopRequest"> | Date | string
    updatedAt?: DateTimeFilter<"LwopRequest"> | Date | string
    endDate?: DateTimeNullableFilter<"LwopRequest"> | Date | string | null
    startDate?: DateTimeNullableFilter<"LwopRequest"> | Date | string | null
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    submittedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type LwopRequestOrderByWithAggregationInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    duration?: SortOrder
    reason?: SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    endDate?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    _count?: LwopRequestCountOrderByAggregateInput
    _max?: LwopRequestMaxOrderByAggregateInput
    _min?: LwopRequestMinOrderByAggregateInput
  }

  export type LwopRequestScalarWhereWithAggregatesInput = {
    AND?: LwopRequestScalarWhereWithAggregatesInput | LwopRequestScalarWhereWithAggregatesInput[]
    OR?: LwopRequestScalarWhereWithAggregatesInput[]
    NOT?: LwopRequestScalarWhereWithAggregatesInput | LwopRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"LwopRequest"> | string
    status?: StringWithAggregatesFilter<"LwopRequest"> | string
    reviewStage?: StringWithAggregatesFilter<"LwopRequest"> | string
    duration?: StringWithAggregatesFilter<"LwopRequest"> | string
    reason?: StringWithAggregatesFilter<"LwopRequest"> | string
    documents?: StringNullableListFilter<"LwopRequest">
    rejectionReason?: StringNullableWithAggregatesFilter<"LwopRequest"> | string | null
    employeeId?: StringWithAggregatesFilter<"LwopRequest"> | string
    submittedById?: StringWithAggregatesFilter<"LwopRequest"> | string
    reviewedById?: StringNullableWithAggregatesFilter<"LwopRequest"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"LwopRequest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"LwopRequest"> | Date | string
    endDate?: DateTimeNullableWithAggregatesFilter<"LwopRequest"> | Date | string | null
    startDate?: DateTimeNullableWithAggregatesFilter<"LwopRequest"> | Date | string | null
  }

  export type CadreChangeRequestWhereInput = {
    AND?: CadreChangeRequestWhereInput | CadreChangeRequestWhereInput[]
    OR?: CadreChangeRequestWhereInput[]
    NOT?: CadreChangeRequestWhereInput | CadreChangeRequestWhereInput[]
    id?: StringFilter<"CadreChangeRequest"> | string
    status?: StringFilter<"CadreChangeRequest"> | string
    reviewStage?: StringFilter<"CadreChangeRequest"> | string
    newCadre?: StringFilter<"CadreChangeRequest"> | string
    reason?: StringNullableFilter<"CadreChangeRequest"> | string | null
    studiedOutsideCountry?: BoolNullableFilter<"CadreChangeRequest"> | boolean | null
    documents?: StringNullableListFilter<"CadreChangeRequest">
    rejectionReason?: StringNullableFilter<"CadreChangeRequest"> | string | null
    employeeId?: StringFilter<"CadreChangeRequest"> | string
    submittedById?: StringFilter<"CadreChangeRequest"> | string
    reviewedById?: StringNullableFilter<"CadreChangeRequest"> | string | null
    createdAt?: DateTimeFilter<"CadreChangeRequest"> | Date | string
    updatedAt?: DateTimeFilter<"CadreChangeRequest"> | Date | string
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    submittedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type CadreChangeRequestOrderByWithRelationInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    newCadre?: SortOrder
    reason?: SortOrderInput | SortOrder
    studiedOutsideCountry?: SortOrderInput | SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    employee?: EmployeeOrderByWithRelationInput
    reviewedBy?: UserOrderByWithRelationInput
    submittedBy?: UserOrderByWithRelationInput
  }

  export type CadreChangeRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CadreChangeRequestWhereInput | CadreChangeRequestWhereInput[]
    OR?: CadreChangeRequestWhereInput[]
    NOT?: CadreChangeRequestWhereInput | CadreChangeRequestWhereInput[]
    status?: StringFilter<"CadreChangeRequest"> | string
    reviewStage?: StringFilter<"CadreChangeRequest"> | string
    newCadre?: StringFilter<"CadreChangeRequest"> | string
    reason?: StringNullableFilter<"CadreChangeRequest"> | string | null
    studiedOutsideCountry?: BoolNullableFilter<"CadreChangeRequest"> | boolean | null
    documents?: StringNullableListFilter<"CadreChangeRequest">
    rejectionReason?: StringNullableFilter<"CadreChangeRequest"> | string | null
    employeeId?: StringFilter<"CadreChangeRequest"> | string
    submittedById?: StringFilter<"CadreChangeRequest"> | string
    reviewedById?: StringNullableFilter<"CadreChangeRequest"> | string | null
    createdAt?: DateTimeFilter<"CadreChangeRequest"> | Date | string
    updatedAt?: DateTimeFilter<"CadreChangeRequest"> | Date | string
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    submittedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type CadreChangeRequestOrderByWithAggregationInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    newCadre?: SortOrder
    reason?: SortOrderInput | SortOrder
    studiedOutsideCountry?: SortOrderInput | SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CadreChangeRequestCountOrderByAggregateInput
    _max?: CadreChangeRequestMaxOrderByAggregateInput
    _min?: CadreChangeRequestMinOrderByAggregateInput
  }

  export type CadreChangeRequestScalarWhereWithAggregatesInput = {
    AND?: CadreChangeRequestScalarWhereWithAggregatesInput | CadreChangeRequestScalarWhereWithAggregatesInput[]
    OR?: CadreChangeRequestScalarWhereWithAggregatesInput[]
    NOT?: CadreChangeRequestScalarWhereWithAggregatesInput | CadreChangeRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CadreChangeRequest"> | string
    status?: StringWithAggregatesFilter<"CadreChangeRequest"> | string
    reviewStage?: StringWithAggregatesFilter<"CadreChangeRequest"> | string
    newCadre?: StringWithAggregatesFilter<"CadreChangeRequest"> | string
    reason?: StringNullableWithAggregatesFilter<"CadreChangeRequest"> | string | null
    studiedOutsideCountry?: BoolNullableWithAggregatesFilter<"CadreChangeRequest"> | boolean | null
    documents?: StringNullableListFilter<"CadreChangeRequest">
    rejectionReason?: StringNullableWithAggregatesFilter<"CadreChangeRequest"> | string | null
    employeeId?: StringWithAggregatesFilter<"CadreChangeRequest"> | string
    submittedById?: StringWithAggregatesFilter<"CadreChangeRequest"> | string
    reviewedById?: StringNullableWithAggregatesFilter<"CadreChangeRequest"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"CadreChangeRequest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CadreChangeRequest"> | Date | string
  }

  export type RetirementRequestWhereInput = {
    AND?: RetirementRequestWhereInput | RetirementRequestWhereInput[]
    OR?: RetirementRequestWhereInput[]
    NOT?: RetirementRequestWhereInput | RetirementRequestWhereInput[]
    id?: StringFilter<"RetirementRequest"> | string
    status?: StringFilter<"RetirementRequest"> | string
    reviewStage?: StringFilter<"RetirementRequest"> | string
    retirementType?: StringFilter<"RetirementRequest"> | string
    illnessDescription?: StringNullableFilter<"RetirementRequest"> | string | null
    proposedDate?: DateTimeFilter<"RetirementRequest"> | Date | string
    delayReason?: StringNullableFilter<"RetirementRequest"> | string | null
    documents?: StringNullableListFilter<"RetirementRequest">
    rejectionReason?: StringNullableFilter<"RetirementRequest"> | string | null
    employeeId?: StringFilter<"RetirementRequest"> | string
    submittedById?: StringFilter<"RetirementRequest"> | string
    reviewedById?: StringNullableFilter<"RetirementRequest"> | string | null
    createdAt?: DateTimeFilter<"RetirementRequest"> | Date | string
    updatedAt?: DateTimeFilter<"RetirementRequest"> | Date | string
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    submittedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type RetirementRequestOrderByWithRelationInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    retirementType?: SortOrder
    illnessDescription?: SortOrderInput | SortOrder
    proposedDate?: SortOrder
    delayReason?: SortOrderInput | SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    employee?: EmployeeOrderByWithRelationInput
    reviewedBy?: UserOrderByWithRelationInput
    submittedBy?: UserOrderByWithRelationInput
  }

  export type RetirementRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RetirementRequestWhereInput | RetirementRequestWhereInput[]
    OR?: RetirementRequestWhereInput[]
    NOT?: RetirementRequestWhereInput | RetirementRequestWhereInput[]
    status?: StringFilter<"RetirementRequest"> | string
    reviewStage?: StringFilter<"RetirementRequest"> | string
    retirementType?: StringFilter<"RetirementRequest"> | string
    illnessDescription?: StringNullableFilter<"RetirementRequest"> | string | null
    proposedDate?: DateTimeFilter<"RetirementRequest"> | Date | string
    delayReason?: StringNullableFilter<"RetirementRequest"> | string | null
    documents?: StringNullableListFilter<"RetirementRequest">
    rejectionReason?: StringNullableFilter<"RetirementRequest"> | string | null
    employeeId?: StringFilter<"RetirementRequest"> | string
    submittedById?: StringFilter<"RetirementRequest"> | string
    reviewedById?: StringNullableFilter<"RetirementRequest"> | string | null
    createdAt?: DateTimeFilter<"RetirementRequest"> | Date | string
    updatedAt?: DateTimeFilter<"RetirementRequest"> | Date | string
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    submittedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type RetirementRequestOrderByWithAggregationInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    retirementType?: SortOrder
    illnessDescription?: SortOrderInput | SortOrder
    proposedDate?: SortOrder
    delayReason?: SortOrderInput | SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RetirementRequestCountOrderByAggregateInput
    _max?: RetirementRequestMaxOrderByAggregateInput
    _min?: RetirementRequestMinOrderByAggregateInput
  }

  export type RetirementRequestScalarWhereWithAggregatesInput = {
    AND?: RetirementRequestScalarWhereWithAggregatesInput | RetirementRequestScalarWhereWithAggregatesInput[]
    OR?: RetirementRequestScalarWhereWithAggregatesInput[]
    NOT?: RetirementRequestScalarWhereWithAggregatesInput | RetirementRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RetirementRequest"> | string
    status?: StringWithAggregatesFilter<"RetirementRequest"> | string
    reviewStage?: StringWithAggregatesFilter<"RetirementRequest"> | string
    retirementType?: StringWithAggregatesFilter<"RetirementRequest"> | string
    illnessDescription?: StringNullableWithAggregatesFilter<"RetirementRequest"> | string | null
    proposedDate?: DateTimeWithAggregatesFilter<"RetirementRequest"> | Date | string
    delayReason?: StringNullableWithAggregatesFilter<"RetirementRequest"> | string | null
    documents?: StringNullableListFilter<"RetirementRequest">
    rejectionReason?: StringNullableWithAggregatesFilter<"RetirementRequest"> | string | null
    employeeId?: StringWithAggregatesFilter<"RetirementRequest"> | string
    submittedById?: StringWithAggregatesFilter<"RetirementRequest"> | string
    reviewedById?: StringNullableWithAggregatesFilter<"RetirementRequest"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"RetirementRequest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RetirementRequest"> | Date | string
  }

  export type ResignationRequestWhereInput = {
    AND?: ResignationRequestWhereInput | ResignationRequestWhereInput[]
    OR?: ResignationRequestWhereInput[]
    NOT?: ResignationRequestWhereInput | ResignationRequestWhereInput[]
    id?: StringFilter<"ResignationRequest"> | string
    status?: StringFilter<"ResignationRequest"> | string
    reviewStage?: StringFilter<"ResignationRequest"> | string
    effectiveDate?: DateTimeFilter<"ResignationRequest"> | Date | string
    reason?: StringNullableFilter<"ResignationRequest"> | string | null
    documents?: StringNullableListFilter<"ResignationRequest">
    rejectionReason?: StringNullableFilter<"ResignationRequest"> | string | null
    employeeId?: StringFilter<"ResignationRequest"> | string
    submittedById?: StringFilter<"ResignationRequest"> | string
    reviewedById?: StringNullableFilter<"ResignationRequest"> | string | null
    createdAt?: DateTimeFilter<"ResignationRequest"> | Date | string
    updatedAt?: DateTimeFilter<"ResignationRequest"> | Date | string
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    submittedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ResignationRequestOrderByWithRelationInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    effectiveDate?: SortOrder
    reason?: SortOrderInput | SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    employee?: EmployeeOrderByWithRelationInput
    reviewedBy?: UserOrderByWithRelationInput
    submittedBy?: UserOrderByWithRelationInput
  }

  export type ResignationRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ResignationRequestWhereInput | ResignationRequestWhereInput[]
    OR?: ResignationRequestWhereInput[]
    NOT?: ResignationRequestWhereInput | ResignationRequestWhereInput[]
    status?: StringFilter<"ResignationRequest"> | string
    reviewStage?: StringFilter<"ResignationRequest"> | string
    effectiveDate?: DateTimeFilter<"ResignationRequest"> | Date | string
    reason?: StringNullableFilter<"ResignationRequest"> | string | null
    documents?: StringNullableListFilter<"ResignationRequest">
    rejectionReason?: StringNullableFilter<"ResignationRequest"> | string | null
    employeeId?: StringFilter<"ResignationRequest"> | string
    submittedById?: StringFilter<"ResignationRequest"> | string
    reviewedById?: StringNullableFilter<"ResignationRequest"> | string | null
    createdAt?: DateTimeFilter<"ResignationRequest"> | Date | string
    updatedAt?: DateTimeFilter<"ResignationRequest"> | Date | string
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    submittedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type ResignationRequestOrderByWithAggregationInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    effectiveDate?: SortOrder
    reason?: SortOrderInput | SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ResignationRequestCountOrderByAggregateInput
    _max?: ResignationRequestMaxOrderByAggregateInput
    _min?: ResignationRequestMinOrderByAggregateInput
  }

  export type ResignationRequestScalarWhereWithAggregatesInput = {
    AND?: ResignationRequestScalarWhereWithAggregatesInput | ResignationRequestScalarWhereWithAggregatesInput[]
    OR?: ResignationRequestScalarWhereWithAggregatesInput[]
    NOT?: ResignationRequestScalarWhereWithAggregatesInput | ResignationRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ResignationRequest"> | string
    status?: StringWithAggregatesFilter<"ResignationRequest"> | string
    reviewStage?: StringWithAggregatesFilter<"ResignationRequest"> | string
    effectiveDate?: DateTimeWithAggregatesFilter<"ResignationRequest"> | Date | string
    reason?: StringNullableWithAggregatesFilter<"ResignationRequest"> | string | null
    documents?: StringNullableListFilter<"ResignationRequest">
    rejectionReason?: StringNullableWithAggregatesFilter<"ResignationRequest"> | string | null
    employeeId?: StringWithAggregatesFilter<"ResignationRequest"> | string
    submittedById?: StringWithAggregatesFilter<"ResignationRequest"> | string
    reviewedById?: StringNullableWithAggregatesFilter<"ResignationRequest"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ResignationRequest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ResignationRequest"> | Date | string
  }

  export type ServiceExtensionRequestWhereInput = {
    AND?: ServiceExtensionRequestWhereInput | ServiceExtensionRequestWhereInput[]
    OR?: ServiceExtensionRequestWhereInput[]
    NOT?: ServiceExtensionRequestWhereInput | ServiceExtensionRequestWhereInput[]
    id?: StringFilter<"ServiceExtensionRequest"> | string
    status?: StringFilter<"ServiceExtensionRequest"> | string
    reviewStage?: StringFilter<"ServiceExtensionRequest"> | string
    currentRetirementDate?: DateTimeFilter<"ServiceExtensionRequest"> | Date | string
    requestedExtensionPeriod?: StringFilter<"ServiceExtensionRequest"> | string
    justification?: StringFilter<"ServiceExtensionRequest"> | string
    documents?: StringNullableListFilter<"ServiceExtensionRequest">
    rejectionReason?: StringNullableFilter<"ServiceExtensionRequest"> | string | null
    employeeId?: StringFilter<"ServiceExtensionRequest"> | string
    submittedById?: StringFilter<"ServiceExtensionRequest"> | string
    reviewedById?: StringNullableFilter<"ServiceExtensionRequest"> | string | null
    createdAt?: DateTimeFilter<"ServiceExtensionRequest"> | Date | string
    updatedAt?: DateTimeFilter<"ServiceExtensionRequest"> | Date | string
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    submittedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ServiceExtensionRequestOrderByWithRelationInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    currentRetirementDate?: SortOrder
    requestedExtensionPeriod?: SortOrder
    justification?: SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    employee?: EmployeeOrderByWithRelationInput
    reviewedBy?: UserOrderByWithRelationInput
    submittedBy?: UserOrderByWithRelationInput
  }

  export type ServiceExtensionRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ServiceExtensionRequestWhereInput | ServiceExtensionRequestWhereInput[]
    OR?: ServiceExtensionRequestWhereInput[]
    NOT?: ServiceExtensionRequestWhereInput | ServiceExtensionRequestWhereInput[]
    status?: StringFilter<"ServiceExtensionRequest"> | string
    reviewStage?: StringFilter<"ServiceExtensionRequest"> | string
    currentRetirementDate?: DateTimeFilter<"ServiceExtensionRequest"> | Date | string
    requestedExtensionPeriod?: StringFilter<"ServiceExtensionRequest"> | string
    justification?: StringFilter<"ServiceExtensionRequest"> | string
    documents?: StringNullableListFilter<"ServiceExtensionRequest">
    rejectionReason?: StringNullableFilter<"ServiceExtensionRequest"> | string | null
    employeeId?: StringFilter<"ServiceExtensionRequest"> | string
    submittedById?: StringFilter<"ServiceExtensionRequest"> | string
    reviewedById?: StringNullableFilter<"ServiceExtensionRequest"> | string | null
    createdAt?: DateTimeFilter<"ServiceExtensionRequest"> | Date | string
    updatedAt?: DateTimeFilter<"ServiceExtensionRequest"> | Date | string
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    submittedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type ServiceExtensionRequestOrderByWithAggregationInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    currentRetirementDate?: SortOrder
    requestedExtensionPeriod?: SortOrder
    justification?: SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ServiceExtensionRequestCountOrderByAggregateInput
    _max?: ServiceExtensionRequestMaxOrderByAggregateInput
    _min?: ServiceExtensionRequestMinOrderByAggregateInput
  }

  export type ServiceExtensionRequestScalarWhereWithAggregatesInput = {
    AND?: ServiceExtensionRequestScalarWhereWithAggregatesInput | ServiceExtensionRequestScalarWhereWithAggregatesInput[]
    OR?: ServiceExtensionRequestScalarWhereWithAggregatesInput[]
    NOT?: ServiceExtensionRequestScalarWhereWithAggregatesInput | ServiceExtensionRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ServiceExtensionRequest"> | string
    status?: StringWithAggregatesFilter<"ServiceExtensionRequest"> | string
    reviewStage?: StringWithAggregatesFilter<"ServiceExtensionRequest"> | string
    currentRetirementDate?: DateTimeWithAggregatesFilter<"ServiceExtensionRequest"> | Date | string
    requestedExtensionPeriod?: StringWithAggregatesFilter<"ServiceExtensionRequest"> | string
    justification?: StringWithAggregatesFilter<"ServiceExtensionRequest"> | string
    documents?: StringNullableListFilter<"ServiceExtensionRequest">
    rejectionReason?: StringNullableWithAggregatesFilter<"ServiceExtensionRequest"> | string | null
    employeeId?: StringWithAggregatesFilter<"ServiceExtensionRequest"> | string
    submittedById?: StringWithAggregatesFilter<"ServiceExtensionRequest"> | string
    reviewedById?: StringNullableWithAggregatesFilter<"ServiceExtensionRequest"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ServiceExtensionRequest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ServiceExtensionRequest"> | Date | string
  }

  export type SeparationRequestWhereInput = {
    AND?: SeparationRequestWhereInput | SeparationRequestWhereInput[]
    OR?: SeparationRequestWhereInput[]
    NOT?: SeparationRequestWhereInput | SeparationRequestWhereInput[]
    id?: StringFilter<"SeparationRequest"> | string
    type?: StringFilter<"SeparationRequest"> | string
    status?: StringFilter<"SeparationRequest"> | string
    reviewStage?: StringFilter<"SeparationRequest"> | string
    reason?: StringFilter<"SeparationRequest"> | string
    documents?: StringNullableListFilter<"SeparationRequest">
    rejectionReason?: StringNullableFilter<"SeparationRequest"> | string | null
    employeeId?: StringFilter<"SeparationRequest"> | string
    submittedById?: StringFilter<"SeparationRequest"> | string
    reviewedById?: StringNullableFilter<"SeparationRequest"> | string | null
    createdAt?: DateTimeFilter<"SeparationRequest"> | Date | string
    updatedAt?: DateTimeFilter<"SeparationRequest"> | Date | string
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    submittedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type SeparationRequestOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    reason?: SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    employee?: EmployeeOrderByWithRelationInput
    reviewedBy?: UserOrderByWithRelationInput
    submittedBy?: UserOrderByWithRelationInput
  }

  export type SeparationRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SeparationRequestWhereInput | SeparationRequestWhereInput[]
    OR?: SeparationRequestWhereInput[]
    NOT?: SeparationRequestWhereInput | SeparationRequestWhereInput[]
    type?: StringFilter<"SeparationRequest"> | string
    status?: StringFilter<"SeparationRequest"> | string
    reviewStage?: StringFilter<"SeparationRequest"> | string
    reason?: StringFilter<"SeparationRequest"> | string
    documents?: StringNullableListFilter<"SeparationRequest">
    rejectionReason?: StringNullableFilter<"SeparationRequest"> | string | null
    employeeId?: StringFilter<"SeparationRequest"> | string
    submittedById?: StringFilter<"SeparationRequest"> | string
    reviewedById?: StringNullableFilter<"SeparationRequest"> | string | null
    createdAt?: DateTimeFilter<"SeparationRequest"> | Date | string
    updatedAt?: DateTimeFilter<"SeparationRequest"> | Date | string
    employee?: XOR<EmployeeScalarRelationFilter, EmployeeWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    submittedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type SeparationRequestOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    reason?: SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SeparationRequestCountOrderByAggregateInput
    _max?: SeparationRequestMaxOrderByAggregateInput
    _min?: SeparationRequestMinOrderByAggregateInput
  }

  export type SeparationRequestScalarWhereWithAggregatesInput = {
    AND?: SeparationRequestScalarWhereWithAggregatesInput | SeparationRequestScalarWhereWithAggregatesInput[]
    OR?: SeparationRequestScalarWhereWithAggregatesInput[]
    NOT?: SeparationRequestScalarWhereWithAggregatesInput | SeparationRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SeparationRequest"> | string
    type?: StringWithAggregatesFilter<"SeparationRequest"> | string
    status?: StringWithAggregatesFilter<"SeparationRequest"> | string
    reviewStage?: StringWithAggregatesFilter<"SeparationRequest"> | string
    reason?: StringWithAggregatesFilter<"SeparationRequest"> | string
    documents?: StringNullableListFilter<"SeparationRequest">
    rejectionReason?: StringNullableWithAggregatesFilter<"SeparationRequest"> | string | null
    employeeId?: StringWithAggregatesFilter<"SeparationRequest"> | string
    submittedById?: StringWithAggregatesFilter<"SeparationRequest"> | string
    reviewedById?: StringNullableWithAggregatesFilter<"SeparationRequest"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"SeparationRequest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SeparationRequest"> | Date | string
  }

  export type ComplaintWhereInput = {
    AND?: ComplaintWhereInput | ComplaintWhereInput[]
    OR?: ComplaintWhereInput[]
    NOT?: ComplaintWhereInput | ComplaintWhereInput[]
    id?: StringFilter<"Complaint"> | string
    complaintType?: StringFilter<"Complaint"> | string
    subject?: StringFilter<"Complaint"> | string
    details?: StringFilter<"Complaint"> | string
    complainantPhoneNumber?: StringFilter<"Complaint"> | string
    nextOfKinPhoneNumber?: StringFilter<"Complaint"> | string
    attachments?: StringNullableListFilter<"Complaint">
    status?: StringFilter<"Complaint"> | string
    reviewStage?: StringFilter<"Complaint"> | string
    officerComments?: StringNullableFilter<"Complaint"> | string | null
    internalNotes?: StringNullableFilter<"Complaint"> | string | null
    rejectionReason?: StringNullableFilter<"Complaint"> | string | null
    complainantId?: StringFilter<"Complaint"> | string
    assignedOfficerRole?: StringFilter<"Complaint"> | string
    reviewedById?: StringNullableFilter<"Complaint"> | string | null
    createdAt?: DateTimeFilter<"Complaint"> | Date | string
    updatedAt?: DateTimeFilter<"Complaint"> | Date | string
    complainant?: XOR<UserScalarRelationFilter, UserWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type ComplaintOrderByWithRelationInput = {
    id?: SortOrder
    complaintType?: SortOrder
    subject?: SortOrder
    details?: SortOrder
    complainantPhoneNumber?: SortOrder
    nextOfKinPhoneNumber?: SortOrder
    attachments?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    officerComments?: SortOrderInput | SortOrder
    internalNotes?: SortOrderInput | SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    complainantId?: SortOrder
    assignedOfficerRole?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    complainant?: UserOrderByWithRelationInput
    reviewedBy?: UserOrderByWithRelationInput
  }

  export type ComplaintWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ComplaintWhereInput | ComplaintWhereInput[]
    OR?: ComplaintWhereInput[]
    NOT?: ComplaintWhereInput | ComplaintWhereInput[]
    complaintType?: StringFilter<"Complaint"> | string
    subject?: StringFilter<"Complaint"> | string
    details?: StringFilter<"Complaint"> | string
    complainantPhoneNumber?: StringFilter<"Complaint"> | string
    nextOfKinPhoneNumber?: StringFilter<"Complaint"> | string
    attachments?: StringNullableListFilter<"Complaint">
    status?: StringFilter<"Complaint"> | string
    reviewStage?: StringFilter<"Complaint"> | string
    officerComments?: StringNullableFilter<"Complaint"> | string | null
    internalNotes?: StringNullableFilter<"Complaint"> | string | null
    rejectionReason?: StringNullableFilter<"Complaint"> | string | null
    complainantId?: StringFilter<"Complaint"> | string
    assignedOfficerRole?: StringFilter<"Complaint"> | string
    reviewedById?: StringNullableFilter<"Complaint"> | string | null
    createdAt?: DateTimeFilter<"Complaint"> | Date | string
    updatedAt?: DateTimeFilter<"Complaint"> | Date | string
    complainant?: XOR<UserScalarRelationFilter, UserWhereInput>
    reviewedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type ComplaintOrderByWithAggregationInput = {
    id?: SortOrder
    complaintType?: SortOrder
    subject?: SortOrder
    details?: SortOrder
    complainantPhoneNumber?: SortOrder
    nextOfKinPhoneNumber?: SortOrder
    attachments?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    officerComments?: SortOrderInput | SortOrder
    internalNotes?: SortOrderInput | SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    complainantId?: SortOrder
    assignedOfficerRole?: SortOrder
    reviewedById?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ComplaintCountOrderByAggregateInput
    _max?: ComplaintMaxOrderByAggregateInput
    _min?: ComplaintMinOrderByAggregateInput
  }

  export type ComplaintScalarWhereWithAggregatesInput = {
    AND?: ComplaintScalarWhereWithAggregatesInput | ComplaintScalarWhereWithAggregatesInput[]
    OR?: ComplaintScalarWhereWithAggregatesInput[]
    NOT?: ComplaintScalarWhereWithAggregatesInput | ComplaintScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Complaint"> | string
    complaintType?: StringWithAggregatesFilter<"Complaint"> | string
    subject?: StringWithAggregatesFilter<"Complaint"> | string
    details?: StringWithAggregatesFilter<"Complaint"> | string
    complainantPhoneNumber?: StringWithAggregatesFilter<"Complaint"> | string
    nextOfKinPhoneNumber?: StringWithAggregatesFilter<"Complaint"> | string
    attachments?: StringNullableListFilter<"Complaint">
    status?: StringWithAggregatesFilter<"Complaint"> | string
    reviewStage?: StringWithAggregatesFilter<"Complaint"> | string
    officerComments?: StringNullableWithAggregatesFilter<"Complaint"> | string | null
    internalNotes?: StringNullableWithAggregatesFilter<"Complaint"> | string | null
    rejectionReason?: StringNullableWithAggregatesFilter<"Complaint"> | string | null
    complainantId?: StringWithAggregatesFilter<"Complaint"> | string
    assignedOfficerRole?: StringWithAggregatesFilter<"Complaint"> | string
    reviewedById?: StringNullableWithAggregatesFilter<"Complaint"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Complaint"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Complaint"> | Date | string
  }

  export type NotificationWhereInput = {
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    id?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    link?: StringNullableFilter<"Notification"> | string | null
    isRead?: BoolFilter<"Notification"> | boolean
    userId?: StringFilter<"Notification"> | string
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type NotificationOrderByWithRelationInput = {
    id?: SortOrder
    message?: SortOrder
    link?: SortOrderInput | SortOrder
    isRead?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type NotificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    message?: StringFilter<"Notification"> | string
    link?: StringNullableFilter<"Notification"> | string | null
    isRead?: BoolFilter<"Notification"> | boolean
    userId?: StringFilter<"Notification"> | string
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type NotificationOrderByWithAggregationInput = {
    id?: SortOrder
    message?: SortOrder
    link?: SortOrderInput | SortOrder
    isRead?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    _count?: NotificationCountOrderByAggregateInput
    _max?: NotificationMaxOrderByAggregateInput
    _min?: NotificationMinOrderByAggregateInput
  }

  export type NotificationScalarWhereWithAggregatesInput = {
    AND?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    OR?: NotificationScalarWhereWithAggregatesInput[]
    NOT?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Notification"> | string
    message?: StringWithAggregatesFilter<"Notification"> | string
    link?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    isRead?: BoolWithAggregatesFilter<"Notification"> | boolean
    userId?: StringWithAggregatesFilter<"Notification"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
  }

  export type UserCreateInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InstitutionCreateInput = {
    id?: string
    name: string
    employees?: EmployeeCreateNestedManyWithoutInstitutionInput
    users?: UserCreateNestedManyWithoutInstitutionInput
  }

  export type InstitutionUncheckedCreateInput = {
    id?: string
    name: string
    employees?: EmployeeUncheckedCreateNestedManyWithoutInstitutionInput
    users?: UserUncheckedCreateNestedManyWithoutInstitutionInput
  }

  export type InstitutionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    employees?: EmployeeUpdateManyWithoutInstitutionNestedInput
    users?: UserUpdateManyWithoutInstitutionNestedInput
  }

  export type InstitutionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    employees?: EmployeeUncheckedUpdateManyWithoutInstitutionNestedInput
    users?: UserUncheckedUpdateManyWithoutInstitutionNestedInput
  }

  export type InstitutionCreateManyInput = {
    id?: string
    name: string
  }

  export type InstitutionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type InstitutionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type EmployeeCreateInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    cadreChangeRequests?: CadreChangeRequestCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestCreateNestedManyWithoutEmployeeInput
    institution: InstitutionCreateNestedOneWithoutEmployeesInput
    certificates?: EmployeeCertificateCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestCreateNestedManyWithoutEmployeeInput
    user?: UserCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeUncheckedCreateInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    institutionId: string
    cadreChangeRequests?: CadreChangeRequestUncheckedCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    certificates?: EmployeeCertificateUncheckedCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestUncheckedCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestUncheckedCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    user?: UserUncheckedCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    cadreChangeRequests?: CadreChangeRequestUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUpdateManyWithoutEmployeeNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutEmployeesNestedInput
    certificates?: EmployeeCertificateUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUpdateManyWithoutEmployeeNestedInput
    user?: UserUpdateOneWithoutEmployeeNestedInput
  }

  export type EmployeeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    cadreChangeRequests?: CadreChangeRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    certificates?: EmployeeCertificateUncheckedUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    user?: UserUncheckedUpdateOneWithoutEmployeeNestedInput
  }

  export type EmployeeCreateManyInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    institutionId: string
  }

  export type EmployeeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EmployeeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
  }

  export type EmployeeCertificateCreateInput = {
    id?: string
    type: string
    name: string
    url?: string | null
    employee: EmployeeCreateNestedOneWithoutCertificatesInput
  }

  export type EmployeeCertificateUncheckedCreateInput = {
    id?: string
    type: string
    name: string
    url?: string | null
    employeeId: string
  }

  export type EmployeeCertificateUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
    employee?: EmployeeUpdateOneRequiredWithoutCertificatesNestedInput
  }

  export type EmployeeCertificateUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
  }

  export type EmployeeCertificateCreateManyInput = {
    id?: string
    type: string
    name: string
    url?: string | null
    employeeId: string
  }

  export type EmployeeCertificateUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EmployeeCertificateUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
  }

  export type ConfirmationRequestCreateInput = {
    id?: string
    status: string
    reviewStage: string
    documents?: ConfirmationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    decisionDate?: Date | string | null
    commissionDecisionDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutConfirmationRequestsInput
    reviewedBy?: UserCreateNestedOneWithoutReviewedConfirmationsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedConfirmationsInput
  }

  export type ConfirmationRequestUncheckedCreateInput = {
    id?: string
    status: string
    reviewStage: string
    documents?: ConfirmationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    reviewedById?: string | null
    decisionDate?: Date | string | null
    commissionDecisionDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfirmationRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    documents?: ConfirmationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commissionDecisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutConfirmationRequestsNestedInput
    reviewedBy?: UserUpdateOneWithoutReviewedConfirmationsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedConfirmationsNestedInput
  }

  export type ConfirmationRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    documents?: ConfirmationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commissionDecisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfirmationRequestCreateManyInput = {
    id?: string
    status: string
    reviewStage: string
    documents?: ConfirmationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    reviewedById?: string | null
    decisionDate?: Date | string | null
    commissionDecisionDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfirmationRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    documents?: ConfirmationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commissionDecisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfirmationRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    documents?: ConfirmationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commissionDecisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionRequestCreateInput = {
    id?: string
    status: string
    reviewStage: string
    proposedCadre: string
    promotionType: string
    studiedOutsideCountry?: boolean | null
    documents?: PromotionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    commissionDecisionReason?: string | null
    employee: EmployeeCreateNestedOneWithoutPromotionRequestsInput
    reviewedBy?: UserCreateNestedOneWithoutReviewedPromotionsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedPromotionsInput
  }

  export type PromotionRequestUncheckedCreateInput = {
    id?: string
    status: string
    reviewStage: string
    proposedCadre: string
    promotionType: string
    studiedOutsideCountry?: boolean | null
    documents?: PromotionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    commissionDecisionReason?: string | null
  }

  export type PromotionRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    proposedCadre?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: PromotionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    commissionDecisionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employee?: EmployeeUpdateOneRequiredWithoutPromotionRequestsNestedInput
    reviewedBy?: UserUpdateOneWithoutReviewedPromotionsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedPromotionsNestedInput
  }

  export type PromotionRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    proposedCadre?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: PromotionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    commissionDecisionReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromotionRequestCreateManyInput = {
    id?: string
    status: string
    reviewStage: string
    proposedCadre: string
    promotionType: string
    studiedOutsideCountry?: boolean | null
    documents?: PromotionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    commissionDecisionReason?: string | null
  }

  export type PromotionRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    proposedCadre?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: PromotionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    commissionDecisionReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromotionRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    proposedCadre?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: PromotionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    commissionDecisionReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LwopRequestCreateInput = {
    id?: string
    status: string
    reviewStage: string
    duration: string
    reason: string
    documents?: LwopRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    endDate?: Date | string | null
    startDate?: Date | string | null
    employee: EmployeeCreateNestedOneWithoutLwopRequestsInput
    reviewedBy?: UserCreateNestedOneWithoutReviewedLWOPsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedLWOPsInput
  }

  export type LwopRequestUncheckedCreateInput = {
    id?: string
    status: string
    reviewStage: string
    duration: string
    reason: string
    documents?: LwopRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    endDate?: Date | string | null
    startDate?: Date | string | null
  }

  export type LwopRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    duration?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: LwopRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    employee?: EmployeeUpdateOneRequiredWithoutLwopRequestsNestedInput
    reviewedBy?: UserUpdateOneWithoutReviewedLWOPsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedLWOPsNestedInput
  }

  export type LwopRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    duration?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: LwopRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LwopRequestCreateManyInput = {
    id?: string
    status: string
    reviewStage: string
    duration: string
    reason: string
    documents?: LwopRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    endDate?: Date | string | null
    startDate?: Date | string | null
  }

  export type LwopRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    duration?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: LwopRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LwopRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    duration?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: LwopRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CadreChangeRequestCreateInput = {
    id?: string
    status: string
    reviewStage: string
    newCadre: string
    reason?: string | null
    studiedOutsideCountry?: boolean | null
    documents?: CadreChangeRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutCadreChangeRequestsInput
    reviewedBy?: UserCreateNestedOneWithoutReviewedCadreChangesInput
    submittedBy: UserCreateNestedOneWithoutSubmittedCadreChangesInput
  }

  export type CadreChangeRequestUncheckedCreateInput = {
    id?: string
    status: string
    reviewStage: string
    newCadre: string
    reason?: string | null
    studiedOutsideCountry?: boolean | null
    documents?: CadreChangeRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CadreChangeRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    newCadre?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: CadreChangeRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutCadreChangeRequestsNestedInput
    reviewedBy?: UserUpdateOneWithoutReviewedCadreChangesNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedCadreChangesNestedInput
  }

  export type CadreChangeRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    newCadre?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: CadreChangeRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CadreChangeRequestCreateManyInput = {
    id?: string
    status: string
    reviewStage: string
    newCadre: string
    reason?: string | null
    studiedOutsideCountry?: boolean | null
    documents?: CadreChangeRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CadreChangeRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    newCadre?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: CadreChangeRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CadreChangeRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    newCadre?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: CadreChangeRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RetirementRequestCreateInput = {
    id?: string
    status: string
    reviewStage: string
    retirementType: string
    illnessDescription?: string | null
    proposedDate: Date | string
    delayReason?: string | null
    documents?: RetirementRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutRetirementRequestsInput
    reviewedBy?: UserCreateNestedOneWithoutReviewedRetirementsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedRetirementsInput
  }

  export type RetirementRequestUncheckedCreateInput = {
    id?: string
    status: string
    reviewStage: string
    retirementType: string
    illnessDescription?: string | null
    proposedDate: Date | string
    delayReason?: string | null
    documents?: RetirementRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RetirementRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    retirementType?: StringFieldUpdateOperationsInput | string
    illnessDescription?: NullableStringFieldUpdateOperationsInput | string | null
    proposedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: RetirementRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutRetirementRequestsNestedInput
    reviewedBy?: UserUpdateOneWithoutReviewedRetirementsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedRetirementsNestedInput
  }

  export type RetirementRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    retirementType?: StringFieldUpdateOperationsInput | string
    illnessDescription?: NullableStringFieldUpdateOperationsInput | string | null
    proposedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: RetirementRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RetirementRequestCreateManyInput = {
    id?: string
    status: string
    reviewStage: string
    retirementType: string
    illnessDescription?: string | null
    proposedDate: Date | string
    delayReason?: string | null
    documents?: RetirementRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RetirementRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    retirementType?: StringFieldUpdateOperationsInput | string
    illnessDescription?: NullableStringFieldUpdateOperationsInput | string | null
    proposedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: RetirementRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RetirementRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    retirementType?: StringFieldUpdateOperationsInput | string
    illnessDescription?: NullableStringFieldUpdateOperationsInput | string | null
    proposedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: RetirementRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResignationRequestCreateInput = {
    id?: string
    status: string
    reviewStage: string
    effectiveDate: Date | string
    reason?: string | null
    documents?: ResignationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutResignationRequestsInput
    reviewedBy?: UserCreateNestedOneWithoutReviewedResignationsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedResignationsInput
  }

  export type ResignationRequestUncheckedCreateInput = {
    id?: string
    status: string
    reviewStage: string
    effectiveDate: Date | string
    reason?: string | null
    documents?: ResignationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ResignationRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: ResignationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutResignationRequestsNestedInput
    reviewedBy?: UserUpdateOneWithoutReviewedResignationsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedResignationsNestedInput
  }

  export type ResignationRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: ResignationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResignationRequestCreateManyInput = {
    id?: string
    status: string
    reviewStage: string
    effectiveDate: Date | string
    reason?: string | null
    documents?: ResignationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ResignationRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: ResignationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResignationRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: ResignationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServiceExtensionRequestCreateInput = {
    id?: string
    status: string
    reviewStage: string
    currentRetirementDate: Date | string
    requestedExtensionPeriod: string
    justification: string
    documents?: ServiceExtensionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutServiceExtensionRequestsInput
    reviewedBy?: UserCreateNestedOneWithoutReviewedServiceExtensionsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedServiceExtensionsInput
  }

  export type ServiceExtensionRequestUncheckedCreateInput = {
    id?: string
    status: string
    reviewStage: string
    currentRetirementDate: Date | string
    requestedExtensionPeriod: string
    justification: string
    documents?: ServiceExtensionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ServiceExtensionRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    currentRetirementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requestedExtensionPeriod?: StringFieldUpdateOperationsInput | string
    justification?: StringFieldUpdateOperationsInput | string
    documents?: ServiceExtensionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutServiceExtensionRequestsNestedInput
    reviewedBy?: UserUpdateOneWithoutReviewedServiceExtensionsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedServiceExtensionsNestedInput
  }

  export type ServiceExtensionRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    currentRetirementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requestedExtensionPeriod?: StringFieldUpdateOperationsInput | string
    justification?: StringFieldUpdateOperationsInput | string
    documents?: ServiceExtensionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServiceExtensionRequestCreateManyInput = {
    id?: string
    status: string
    reviewStage: string
    currentRetirementDate: Date | string
    requestedExtensionPeriod: string
    justification: string
    documents?: ServiceExtensionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ServiceExtensionRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    currentRetirementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requestedExtensionPeriod?: StringFieldUpdateOperationsInput | string
    justification?: StringFieldUpdateOperationsInput | string
    documents?: ServiceExtensionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServiceExtensionRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    currentRetirementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requestedExtensionPeriod?: StringFieldUpdateOperationsInput | string
    justification?: StringFieldUpdateOperationsInput | string
    documents?: ServiceExtensionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeparationRequestCreateInput = {
    id?: string
    type: string
    status: string
    reviewStage: string
    reason: string
    documents?: SeparationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutSeparationRequestsInput
    reviewedBy?: UserCreateNestedOneWithoutReviewedSeparationsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedSeparationsInput
  }

  export type SeparationRequestUncheckedCreateInput = {
    id?: string
    type: string
    status: string
    reviewStage: string
    reason: string
    documents?: SeparationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SeparationRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: SeparationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutSeparationRequestsNestedInput
    reviewedBy?: UserUpdateOneWithoutReviewedSeparationsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedSeparationsNestedInput
  }

  export type SeparationRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: SeparationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeparationRequestCreateManyInput = {
    id?: string
    type: string
    status: string
    reviewStage: string
    reason: string
    documents?: SeparationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SeparationRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: SeparationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeparationRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: SeparationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComplaintCreateInput = {
    id?: string
    complaintType: string
    subject: string
    details: string
    complainantPhoneNumber: string
    nextOfKinPhoneNumber: string
    attachments?: ComplaintCreateattachmentsInput | string[]
    status: string
    reviewStage: string
    officerComments?: string | null
    internalNotes?: string | null
    rejectionReason?: string | null
    assignedOfficerRole: string
    createdAt?: Date | string
    updatedAt?: Date | string
    complainant: UserCreateNestedOneWithoutComplaintsInput
    reviewedBy?: UserCreateNestedOneWithoutReviewedComplaintsInput
  }

  export type ComplaintUncheckedCreateInput = {
    id?: string
    complaintType: string
    subject: string
    details: string
    complainantPhoneNumber: string
    nextOfKinPhoneNumber: string
    attachments?: ComplaintCreateattachmentsInput | string[]
    status: string
    reviewStage: string
    officerComments?: string | null
    internalNotes?: string | null
    rejectionReason?: string | null
    complainantId: string
    assignedOfficerRole: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ComplaintUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    complaintType?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    details?: StringFieldUpdateOperationsInput | string
    complainantPhoneNumber?: StringFieldUpdateOperationsInput | string
    nextOfKinPhoneNumber?: StringFieldUpdateOperationsInput | string
    attachments?: ComplaintUpdateattachmentsInput | string[]
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    officerComments?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    assignedOfficerRole?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    complainant?: UserUpdateOneRequiredWithoutComplaintsNestedInput
    reviewedBy?: UserUpdateOneWithoutReviewedComplaintsNestedInput
  }

  export type ComplaintUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    complaintType?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    details?: StringFieldUpdateOperationsInput | string
    complainantPhoneNumber?: StringFieldUpdateOperationsInput | string
    nextOfKinPhoneNumber?: StringFieldUpdateOperationsInput | string
    attachments?: ComplaintUpdateattachmentsInput | string[]
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    officerComments?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    complainantId?: StringFieldUpdateOperationsInput | string
    assignedOfficerRole?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComplaintCreateManyInput = {
    id?: string
    complaintType: string
    subject: string
    details: string
    complainantPhoneNumber: string
    nextOfKinPhoneNumber: string
    attachments?: ComplaintCreateattachmentsInput | string[]
    status: string
    reviewStage: string
    officerComments?: string | null
    internalNotes?: string | null
    rejectionReason?: string | null
    complainantId: string
    assignedOfficerRole: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ComplaintUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    complaintType?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    details?: StringFieldUpdateOperationsInput | string
    complainantPhoneNumber?: StringFieldUpdateOperationsInput | string
    nextOfKinPhoneNumber?: StringFieldUpdateOperationsInput | string
    attachments?: ComplaintUpdateattachmentsInput | string[]
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    officerComments?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    assignedOfficerRole?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComplaintUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    complaintType?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    details?: StringFieldUpdateOperationsInput | string
    complainantPhoneNumber?: StringFieldUpdateOperationsInput | string
    nextOfKinPhoneNumber?: StringFieldUpdateOperationsInput | string
    attachments?: ComplaintUpdateattachmentsInput | string[]
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    officerComments?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    complainantId?: StringFieldUpdateOperationsInput | string
    assignedOfficerRole?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationCreateInput = {
    id?: string
    message: string
    link?: string | null
    isRead?: boolean
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateInput = {
    id?: string
    message: string
    link?: string | null
    isRead?: boolean
    userId: string
    createdAt?: Date | string
  }

  export type NotificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationCreateManyInput = {
    id?: string
    message: string
    link?: string | null
    isRead?: boolean
    userId: string
    createdAt?: Date | string
  }

  export type NotificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type CadreChangeRequestListRelationFilter = {
    every?: CadreChangeRequestWhereInput
    some?: CadreChangeRequestWhereInput
    none?: CadreChangeRequestWhereInput
  }

  export type ComplaintListRelationFilter = {
    every?: ComplaintWhereInput
    some?: ComplaintWhereInput
    none?: ComplaintWhereInput
  }

  export type ConfirmationRequestListRelationFilter = {
    every?: ConfirmationRequestWhereInput
    some?: ConfirmationRequestWhereInput
    none?: ConfirmationRequestWhereInput
  }

  export type LwopRequestListRelationFilter = {
    every?: LwopRequestWhereInput
    some?: LwopRequestWhereInput
    none?: LwopRequestWhereInput
  }

  export type NotificationListRelationFilter = {
    every?: NotificationWhereInput
    some?: NotificationWhereInput
    none?: NotificationWhereInput
  }

  export type PromotionRequestListRelationFilter = {
    every?: PromotionRequestWhereInput
    some?: PromotionRequestWhereInput
    none?: PromotionRequestWhereInput
  }

  export type ResignationRequestListRelationFilter = {
    every?: ResignationRequestWhereInput
    some?: ResignationRequestWhereInput
    none?: ResignationRequestWhereInput
  }

  export type RetirementRequestListRelationFilter = {
    every?: RetirementRequestWhereInput
    some?: RetirementRequestWhereInput
    none?: RetirementRequestWhereInput
  }

  export type SeparationRequestListRelationFilter = {
    every?: SeparationRequestWhereInput
    some?: SeparationRequestWhereInput
    none?: SeparationRequestWhereInput
  }

  export type ServiceExtensionRequestListRelationFilter = {
    every?: ServiceExtensionRequestWhereInput
    some?: ServiceExtensionRequestWhereInput
    none?: ServiceExtensionRequestWhereInput
  }

  export type EmployeeNullableScalarRelationFilter = {
    is?: EmployeeWhereInput | null
    isNot?: EmployeeWhereInput | null
  }

  export type InstitutionScalarRelationFilter = {
    is?: InstitutionWhereInput
    isNot?: InstitutionWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CadreChangeRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ComplaintOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ConfirmationRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LwopRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PromotionRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ResignationRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RetirementRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SeparationRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ServiceExtensionRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role?: SortOrder
    active?: SortOrder
    employeeId?: SortOrder
    institutionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role?: SortOrder
    active?: SortOrder
    employeeId?: SortOrder
    institutionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role?: SortOrder
    active?: SortOrder
    employeeId?: SortOrder
    institutionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EmployeeListRelationFilter = {
    every?: EmployeeWhereInput
    some?: EmployeeWhereInput
    none?: EmployeeWhereInput
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type EmployeeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InstitutionCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type InstitutionMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type InstitutionMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EmployeeCertificateListRelationFilter = {
    every?: EmployeeCertificateWhereInput
    some?: EmployeeCertificateWhereInput
    none?: EmployeeCertificateWhereInput
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type EmployeeCertificateOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EmployeeCountOrderByAggregateInput = {
    id?: SortOrder
    employeeEntityId?: SortOrder
    name?: SortOrder
    gender?: SortOrder
    profileImageUrl?: SortOrder
    dateOfBirth?: SortOrder
    placeOfBirth?: SortOrder
    region?: SortOrder
    countryOfBirth?: SortOrder
    zanId?: SortOrder
    phoneNumber?: SortOrder
    contactAddress?: SortOrder
    zssfNumber?: SortOrder
    payrollNumber?: SortOrder
    cadre?: SortOrder
    salaryScale?: SortOrder
    ministry?: SortOrder
    department?: SortOrder
    appointmentType?: SortOrder
    contractType?: SortOrder
    recentTitleDate?: SortOrder
    currentReportingOffice?: SortOrder
    currentWorkplace?: SortOrder
    employmentDate?: SortOrder
    confirmationDate?: SortOrder
    retirementDate?: SortOrder
    status?: SortOrder
    ardhilHaliUrl?: SortOrder
    confirmationLetterUrl?: SortOrder
    jobContractUrl?: SortOrder
    birthCertificateUrl?: SortOrder
    institutionId?: SortOrder
  }

  export type EmployeeMaxOrderByAggregateInput = {
    id?: SortOrder
    employeeEntityId?: SortOrder
    name?: SortOrder
    gender?: SortOrder
    profileImageUrl?: SortOrder
    dateOfBirth?: SortOrder
    placeOfBirth?: SortOrder
    region?: SortOrder
    countryOfBirth?: SortOrder
    zanId?: SortOrder
    phoneNumber?: SortOrder
    contactAddress?: SortOrder
    zssfNumber?: SortOrder
    payrollNumber?: SortOrder
    cadre?: SortOrder
    salaryScale?: SortOrder
    ministry?: SortOrder
    department?: SortOrder
    appointmentType?: SortOrder
    contractType?: SortOrder
    recentTitleDate?: SortOrder
    currentReportingOffice?: SortOrder
    currentWorkplace?: SortOrder
    employmentDate?: SortOrder
    confirmationDate?: SortOrder
    retirementDate?: SortOrder
    status?: SortOrder
    ardhilHaliUrl?: SortOrder
    confirmationLetterUrl?: SortOrder
    jobContractUrl?: SortOrder
    birthCertificateUrl?: SortOrder
    institutionId?: SortOrder
  }

  export type EmployeeMinOrderByAggregateInput = {
    id?: SortOrder
    employeeEntityId?: SortOrder
    name?: SortOrder
    gender?: SortOrder
    profileImageUrl?: SortOrder
    dateOfBirth?: SortOrder
    placeOfBirth?: SortOrder
    region?: SortOrder
    countryOfBirth?: SortOrder
    zanId?: SortOrder
    phoneNumber?: SortOrder
    contactAddress?: SortOrder
    zssfNumber?: SortOrder
    payrollNumber?: SortOrder
    cadre?: SortOrder
    salaryScale?: SortOrder
    ministry?: SortOrder
    department?: SortOrder
    appointmentType?: SortOrder
    contractType?: SortOrder
    recentTitleDate?: SortOrder
    currentReportingOffice?: SortOrder
    currentWorkplace?: SortOrder
    employmentDate?: SortOrder
    confirmationDate?: SortOrder
    retirementDate?: SortOrder
    status?: SortOrder
    ardhilHaliUrl?: SortOrder
    confirmationLetterUrl?: SortOrder
    jobContractUrl?: SortOrder
    birthCertificateUrl?: SortOrder
    institutionId?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EmployeeScalarRelationFilter = {
    is?: EmployeeWhereInput
    isNot?: EmployeeWhereInput
  }

  export type EmployeeCertificateCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    url?: SortOrder
    employeeId?: SortOrder
  }

  export type EmployeeCertificateMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    url?: SortOrder
    employeeId?: SortOrder
  }

  export type EmployeeCertificateMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    url?: SortOrder
    employeeId?: SortOrder
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type ConfirmationRequestCountOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    decisionDate?: SortOrder
    commissionDecisionDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConfirmationRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    decisionDate?: SortOrder
    commissionDecisionDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConfirmationRequestMinOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    decisionDate?: SortOrder
    commissionDecisionDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type PromotionRequestCountOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    proposedCadre?: SortOrder
    promotionType?: SortOrder
    studiedOutsideCountry?: SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    commissionDecisionReason?: SortOrder
  }

  export type PromotionRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    proposedCadre?: SortOrder
    promotionType?: SortOrder
    studiedOutsideCountry?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    commissionDecisionReason?: SortOrder
  }

  export type PromotionRequestMinOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    proposedCadre?: SortOrder
    promotionType?: SortOrder
    studiedOutsideCountry?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    commissionDecisionReason?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type LwopRequestCountOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    duration?: SortOrder
    reason?: SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    endDate?: SortOrder
    startDate?: SortOrder
  }

  export type LwopRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    duration?: SortOrder
    reason?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    endDate?: SortOrder
    startDate?: SortOrder
  }

  export type LwopRequestMinOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    duration?: SortOrder
    reason?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    endDate?: SortOrder
    startDate?: SortOrder
  }

  export type CadreChangeRequestCountOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    newCadre?: SortOrder
    reason?: SortOrder
    studiedOutsideCountry?: SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CadreChangeRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    newCadre?: SortOrder
    reason?: SortOrder
    studiedOutsideCountry?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CadreChangeRequestMinOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    newCadre?: SortOrder
    reason?: SortOrder
    studiedOutsideCountry?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RetirementRequestCountOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    retirementType?: SortOrder
    illnessDescription?: SortOrder
    proposedDate?: SortOrder
    delayReason?: SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RetirementRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    retirementType?: SortOrder
    illnessDescription?: SortOrder
    proposedDate?: SortOrder
    delayReason?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RetirementRequestMinOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    retirementType?: SortOrder
    illnessDescription?: SortOrder
    proposedDate?: SortOrder
    delayReason?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ResignationRequestCountOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    effectiveDate?: SortOrder
    reason?: SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ResignationRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    effectiveDate?: SortOrder
    reason?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ResignationRequestMinOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    effectiveDate?: SortOrder
    reason?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ServiceExtensionRequestCountOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    currentRetirementDate?: SortOrder
    requestedExtensionPeriod?: SortOrder
    justification?: SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ServiceExtensionRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    currentRetirementDate?: SortOrder
    requestedExtensionPeriod?: SortOrder
    justification?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ServiceExtensionRequestMinOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    currentRetirementDate?: SortOrder
    requestedExtensionPeriod?: SortOrder
    justification?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SeparationRequestCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    reason?: SortOrder
    documents?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SeparationRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    reason?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SeparationRequestMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    reason?: SortOrder
    rejectionReason?: SortOrder
    employeeId?: SortOrder
    submittedById?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ComplaintCountOrderByAggregateInput = {
    id?: SortOrder
    complaintType?: SortOrder
    subject?: SortOrder
    details?: SortOrder
    complainantPhoneNumber?: SortOrder
    nextOfKinPhoneNumber?: SortOrder
    attachments?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    officerComments?: SortOrder
    internalNotes?: SortOrder
    rejectionReason?: SortOrder
    complainantId?: SortOrder
    assignedOfficerRole?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ComplaintMaxOrderByAggregateInput = {
    id?: SortOrder
    complaintType?: SortOrder
    subject?: SortOrder
    details?: SortOrder
    complainantPhoneNumber?: SortOrder
    nextOfKinPhoneNumber?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    officerComments?: SortOrder
    internalNotes?: SortOrder
    rejectionReason?: SortOrder
    complainantId?: SortOrder
    assignedOfficerRole?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ComplaintMinOrderByAggregateInput = {
    id?: SortOrder
    complaintType?: SortOrder
    subject?: SortOrder
    details?: SortOrder
    complainantPhoneNumber?: SortOrder
    nextOfKinPhoneNumber?: SortOrder
    status?: SortOrder
    reviewStage?: SortOrder
    officerComments?: SortOrder
    internalNotes?: SortOrder
    rejectionReason?: SortOrder
    complainantId?: SortOrder
    assignedOfficerRole?: SortOrder
    reviewedById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NotificationCountOrderByAggregateInput = {
    id?: SortOrder
    message?: SortOrder
    link?: SortOrder
    isRead?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
  }

  export type NotificationMaxOrderByAggregateInput = {
    id?: SortOrder
    message?: SortOrder
    link?: SortOrder
    isRead?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
  }

  export type NotificationMinOrderByAggregateInput = {
    id?: SortOrder
    message?: SortOrder
    link?: SortOrder
    isRead?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
  }

  export type CadreChangeRequestCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<CadreChangeRequestCreateWithoutReviewedByInput, CadreChangeRequestUncheckedCreateWithoutReviewedByInput> | CadreChangeRequestCreateWithoutReviewedByInput[] | CadreChangeRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: CadreChangeRequestCreateOrConnectWithoutReviewedByInput | CadreChangeRequestCreateOrConnectWithoutReviewedByInput[]
    createMany?: CadreChangeRequestCreateManyReviewedByInputEnvelope
    connect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
  }

  export type CadreChangeRequestCreateNestedManyWithoutSubmittedByInput = {
    create?: XOR<CadreChangeRequestCreateWithoutSubmittedByInput, CadreChangeRequestUncheckedCreateWithoutSubmittedByInput> | CadreChangeRequestCreateWithoutSubmittedByInput[] | CadreChangeRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: CadreChangeRequestCreateOrConnectWithoutSubmittedByInput | CadreChangeRequestCreateOrConnectWithoutSubmittedByInput[]
    createMany?: CadreChangeRequestCreateManySubmittedByInputEnvelope
    connect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
  }

  export type ComplaintCreateNestedManyWithoutComplainantInput = {
    create?: XOR<ComplaintCreateWithoutComplainantInput, ComplaintUncheckedCreateWithoutComplainantInput> | ComplaintCreateWithoutComplainantInput[] | ComplaintUncheckedCreateWithoutComplainantInput[]
    connectOrCreate?: ComplaintCreateOrConnectWithoutComplainantInput | ComplaintCreateOrConnectWithoutComplainantInput[]
    createMany?: ComplaintCreateManyComplainantInputEnvelope
    connect?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
  }

  export type ComplaintCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<ComplaintCreateWithoutReviewedByInput, ComplaintUncheckedCreateWithoutReviewedByInput> | ComplaintCreateWithoutReviewedByInput[] | ComplaintUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: ComplaintCreateOrConnectWithoutReviewedByInput | ComplaintCreateOrConnectWithoutReviewedByInput[]
    createMany?: ComplaintCreateManyReviewedByInputEnvelope
    connect?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
  }

  export type ConfirmationRequestCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<ConfirmationRequestCreateWithoutReviewedByInput, ConfirmationRequestUncheckedCreateWithoutReviewedByInput> | ConfirmationRequestCreateWithoutReviewedByInput[] | ConfirmationRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: ConfirmationRequestCreateOrConnectWithoutReviewedByInput | ConfirmationRequestCreateOrConnectWithoutReviewedByInput[]
    createMany?: ConfirmationRequestCreateManyReviewedByInputEnvelope
    connect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
  }

  export type ConfirmationRequestCreateNestedManyWithoutSubmittedByInput = {
    create?: XOR<ConfirmationRequestCreateWithoutSubmittedByInput, ConfirmationRequestUncheckedCreateWithoutSubmittedByInput> | ConfirmationRequestCreateWithoutSubmittedByInput[] | ConfirmationRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: ConfirmationRequestCreateOrConnectWithoutSubmittedByInput | ConfirmationRequestCreateOrConnectWithoutSubmittedByInput[]
    createMany?: ConfirmationRequestCreateManySubmittedByInputEnvelope
    connect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
  }

  export type LwopRequestCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<LwopRequestCreateWithoutReviewedByInput, LwopRequestUncheckedCreateWithoutReviewedByInput> | LwopRequestCreateWithoutReviewedByInput[] | LwopRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: LwopRequestCreateOrConnectWithoutReviewedByInput | LwopRequestCreateOrConnectWithoutReviewedByInput[]
    createMany?: LwopRequestCreateManyReviewedByInputEnvelope
    connect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
  }

  export type LwopRequestCreateNestedManyWithoutSubmittedByInput = {
    create?: XOR<LwopRequestCreateWithoutSubmittedByInput, LwopRequestUncheckedCreateWithoutSubmittedByInput> | LwopRequestCreateWithoutSubmittedByInput[] | LwopRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: LwopRequestCreateOrConnectWithoutSubmittedByInput | LwopRequestCreateOrConnectWithoutSubmittedByInput[]
    createMany?: LwopRequestCreateManySubmittedByInputEnvelope
    connect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type PromotionRequestCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<PromotionRequestCreateWithoutReviewedByInput, PromotionRequestUncheckedCreateWithoutReviewedByInput> | PromotionRequestCreateWithoutReviewedByInput[] | PromotionRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: PromotionRequestCreateOrConnectWithoutReviewedByInput | PromotionRequestCreateOrConnectWithoutReviewedByInput[]
    createMany?: PromotionRequestCreateManyReviewedByInputEnvelope
    connect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
  }

  export type PromotionRequestCreateNestedManyWithoutSubmittedByInput = {
    create?: XOR<PromotionRequestCreateWithoutSubmittedByInput, PromotionRequestUncheckedCreateWithoutSubmittedByInput> | PromotionRequestCreateWithoutSubmittedByInput[] | PromotionRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: PromotionRequestCreateOrConnectWithoutSubmittedByInput | PromotionRequestCreateOrConnectWithoutSubmittedByInput[]
    createMany?: PromotionRequestCreateManySubmittedByInputEnvelope
    connect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
  }

  export type ResignationRequestCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<ResignationRequestCreateWithoutReviewedByInput, ResignationRequestUncheckedCreateWithoutReviewedByInput> | ResignationRequestCreateWithoutReviewedByInput[] | ResignationRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: ResignationRequestCreateOrConnectWithoutReviewedByInput | ResignationRequestCreateOrConnectWithoutReviewedByInput[]
    createMany?: ResignationRequestCreateManyReviewedByInputEnvelope
    connect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
  }

  export type ResignationRequestCreateNestedManyWithoutSubmittedByInput = {
    create?: XOR<ResignationRequestCreateWithoutSubmittedByInput, ResignationRequestUncheckedCreateWithoutSubmittedByInput> | ResignationRequestCreateWithoutSubmittedByInput[] | ResignationRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: ResignationRequestCreateOrConnectWithoutSubmittedByInput | ResignationRequestCreateOrConnectWithoutSubmittedByInput[]
    createMany?: ResignationRequestCreateManySubmittedByInputEnvelope
    connect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
  }

  export type RetirementRequestCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<RetirementRequestCreateWithoutReviewedByInput, RetirementRequestUncheckedCreateWithoutReviewedByInput> | RetirementRequestCreateWithoutReviewedByInput[] | RetirementRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: RetirementRequestCreateOrConnectWithoutReviewedByInput | RetirementRequestCreateOrConnectWithoutReviewedByInput[]
    createMany?: RetirementRequestCreateManyReviewedByInputEnvelope
    connect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
  }

  export type RetirementRequestCreateNestedManyWithoutSubmittedByInput = {
    create?: XOR<RetirementRequestCreateWithoutSubmittedByInput, RetirementRequestUncheckedCreateWithoutSubmittedByInput> | RetirementRequestCreateWithoutSubmittedByInput[] | RetirementRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: RetirementRequestCreateOrConnectWithoutSubmittedByInput | RetirementRequestCreateOrConnectWithoutSubmittedByInput[]
    createMany?: RetirementRequestCreateManySubmittedByInputEnvelope
    connect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
  }

  export type SeparationRequestCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<SeparationRequestCreateWithoutReviewedByInput, SeparationRequestUncheckedCreateWithoutReviewedByInput> | SeparationRequestCreateWithoutReviewedByInput[] | SeparationRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: SeparationRequestCreateOrConnectWithoutReviewedByInput | SeparationRequestCreateOrConnectWithoutReviewedByInput[]
    createMany?: SeparationRequestCreateManyReviewedByInputEnvelope
    connect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
  }

  export type SeparationRequestCreateNestedManyWithoutSubmittedByInput = {
    create?: XOR<SeparationRequestCreateWithoutSubmittedByInput, SeparationRequestUncheckedCreateWithoutSubmittedByInput> | SeparationRequestCreateWithoutSubmittedByInput[] | SeparationRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: SeparationRequestCreateOrConnectWithoutSubmittedByInput | SeparationRequestCreateOrConnectWithoutSubmittedByInput[]
    createMany?: SeparationRequestCreateManySubmittedByInputEnvelope
    connect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
  }

  export type ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<ServiceExtensionRequestCreateWithoutReviewedByInput, ServiceExtensionRequestUncheckedCreateWithoutReviewedByInput> | ServiceExtensionRequestCreateWithoutReviewedByInput[] | ServiceExtensionRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: ServiceExtensionRequestCreateOrConnectWithoutReviewedByInput | ServiceExtensionRequestCreateOrConnectWithoutReviewedByInput[]
    createMany?: ServiceExtensionRequestCreateManyReviewedByInputEnvelope
    connect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
  }

  export type ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput = {
    create?: XOR<ServiceExtensionRequestCreateWithoutSubmittedByInput, ServiceExtensionRequestUncheckedCreateWithoutSubmittedByInput> | ServiceExtensionRequestCreateWithoutSubmittedByInput[] | ServiceExtensionRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: ServiceExtensionRequestCreateOrConnectWithoutSubmittedByInput | ServiceExtensionRequestCreateOrConnectWithoutSubmittedByInput[]
    createMany?: ServiceExtensionRequestCreateManySubmittedByInputEnvelope
    connect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
  }

  export type EmployeeCreateNestedOneWithoutUserInput = {
    create?: XOR<EmployeeCreateWithoutUserInput, EmployeeUncheckedCreateWithoutUserInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutUserInput
    connect?: EmployeeWhereUniqueInput
  }

  export type InstitutionCreateNestedOneWithoutUsersInput = {
    create?: XOR<InstitutionCreateWithoutUsersInput, InstitutionUncheckedCreateWithoutUsersInput>
    connectOrCreate?: InstitutionCreateOrConnectWithoutUsersInput
    connect?: InstitutionWhereUniqueInput
  }

  export type CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<CadreChangeRequestCreateWithoutReviewedByInput, CadreChangeRequestUncheckedCreateWithoutReviewedByInput> | CadreChangeRequestCreateWithoutReviewedByInput[] | CadreChangeRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: CadreChangeRequestCreateOrConnectWithoutReviewedByInput | CadreChangeRequestCreateOrConnectWithoutReviewedByInput[]
    createMany?: CadreChangeRequestCreateManyReviewedByInputEnvelope
    connect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
  }

  export type CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput = {
    create?: XOR<CadreChangeRequestCreateWithoutSubmittedByInput, CadreChangeRequestUncheckedCreateWithoutSubmittedByInput> | CadreChangeRequestCreateWithoutSubmittedByInput[] | CadreChangeRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: CadreChangeRequestCreateOrConnectWithoutSubmittedByInput | CadreChangeRequestCreateOrConnectWithoutSubmittedByInput[]
    createMany?: CadreChangeRequestCreateManySubmittedByInputEnvelope
    connect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
  }

  export type ComplaintUncheckedCreateNestedManyWithoutComplainantInput = {
    create?: XOR<ComplaintCreateWithoutComplainantInput, ComplaintUncheckedCreateWithoutComplainantInput> | ComplaintCreateWithoutComplainantInput[] | ComplaintUncheckedCreateWithoutComplainantInput[]
    connectOrCreate?: ComplaintCreateOrConnectWithoutComplainantInput | ComplaintCreateOrConnectWithoutComplainantInput[]
    createMany?: ComplaintCreateManyComplainantInputEnvelope
    connect?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
  }

  export type ComplaintUncheckedCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<ComplaintCreateWithoutReviewedByInput, ComplaintUncheckedCreateWithoutReviewedByInput> | ComplaintCreateWithoutReviewedByInput[] | ComplaintUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: ComplaintCreateOrConnectWithoutReviewedByInput | ComplaintCreateOrConnectWithoutReviewedByInput[]
    createMany?: ComplaintCreateManyReviewedByInputEnvelope
    connect?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
  }

  export type ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<ConfirmationRequestCreateWithoutReviewedByInput, ConfirmationRequestUncheckedCreateWithoutReviewedByInput> | ConfirmationRequestCreateWithoutReviewedByInput[] | ConfirmationRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: ConfirmationRequestCreateOrConnectWithoutReviewedByInput | ConfirmationRequestCreateOrConnectWithoutReviewedByInput[]
    createMany?: ConfirmationRequestCreateManyReviewedByInputEnvelope
    connect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
  }

  export type ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput = {
    create?: XOR<ConfirmationRequestCreateWithoutSubmittedByInput, ConfirmationRequestUncheckedCreateWithoutSubmittedByInput> | ConfirmationRequestCreateWithoutSubmittedByInput[] | ConfirmationRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: ConfirmationRequestCreateOrConnectWithoutSubmittedByInput | ConfirmationRequestCreateOrConnectWithoutSubmittedByInput[]
    createMany?: ConfirmationRequestCreateManySubmittedByInputEnvelope
    connect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
  }

  export type LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<LwopRequestCreateWithoutReviewedByInput, LwopRequestUncheckedCreateWithoutReviewedByInput> | LwopRequestCreateWithoutReviewedByInput[] | LwopRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: LwopRequestCreateOrConnectWithoutReviewedByInput | LwopRequestCreateOrConnectWithoutReviewedByInput[]
    createMany?: LwopRequestCreateManyReviewedByInputEnvelope
    connect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
  }

  export type LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput = {
    create?: XOR<LwopRequestCreateWithoutSubmittedByInput, LwopRequestUncheckedCreateWithoutSubmittedByInput> | LwopRequestCreateWithoutSubmittedByInput[] | LwopRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: LwopRequestCreateOrConnectWithoutSubmittedByInput | LwopRequestCreateOrConnectWithoutSubmittedByInput[]
    createMany?: LwopRequestCreateManySubmittedByInputEnvelope
    connect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<PromotionRequestCreateWithoutReviewedByInput, PromotionRequestUncheckedCreateWithoutReviewedByInput> | PromotionRequestCreateWithoutReviewedByInput[] | PromotionRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: PromotionRequestCreateOrConnectWithoutReviewedByInput | PromotionRequestCreateOrConnectWithoutReviewedByInput[]
    createMany?: PromotionRequestCreateManyReviewedByInputEnvelope
    connect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
  }

  export type PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput = {
    create?: XOR<PromotionRequestCreateWithoutSubmittedByInput, PromotionRequestUncheckedCreateWithoutSubmittedByInput> | PromotionRequestCreateWithoutSubmittedByInput[] | PromotionRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: PromotionRequestCreateOrConnectWithoutSubmittedByInput | PromotionRequestCreateOrConnectWithoutSubmittedByInput[]
    createMany?: PromotionRequestCreateManySubmittedByInputEnvelope
    connect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
  }

  export type ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<ResignationRequestCreateWithoutReviewedByInput, ResignationRequestUncheckedCreateWithoutReviewedByInput> | ResignationRequestCreateWithoutReviewedByInput[] | ResignationRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: ResignationRequestCreateOrConnectWithoutReviewedByInput | ResignationRequestCreateOrConnectWithoutReviewedByInput[]
    createMany?: ResignationRequestCreateManyReviewedByInputEnvelope
    connect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
  }

  export type ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput = {
    create?: XOR<ResignationRequestCreateWithoutSubmittedByInput, ResignationRequestUncheckedCreateWithoutSubmittedByInput> | ResignationRequestCreateWithoutSubmittedByInput[] | ResignationRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: ResignationRequestCreateOrConnectWithoutSubmittedByInput | ResignationRequestCreateOrConnectWithoutSubmittedByInput[]
    createMany?: ResignationRequestCreateManySubmittedByInputEnvelope
    connect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
  }

  export type RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<RetirementRequestCreateWithoutReviewedByInput, RetirementRequestUncheckedCreateWithoutReviewedByInput> | RetirementRequestCreateWithoutReviewedByInput[] | RetirementRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: RetirementRequestCreateOrConnectWithoutReviewedByInput | RetirementRequestCreateOrConnectWithoutReviewedByInput[]
    createMany?: RetirementRequestCreateManyReviewedByInputEnvelope
    connect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
  }

  export type RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput = {
    create?: XOR<RetirementRequestCreateWithoutSubmittedByInput, RetirementRequestUncheckedCreateWithoutSubmittedByInput> | RetirementRequestCreateWithoutSubmittedByInput[] | RetirementRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: RetirementRequestCreateOrConnectWithoutSubmittedByInput | RetirementRequestCreateOrConnectWithoutSubmittedByInput[]
    createMany?: RetirementRequestCreateManySubmittedByInputEnvelope
    connect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
  }

  export type SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<SeparationRequestCreateWithoutReviewedByInput, SeparationRequestUncheckedCreateWithoutReviewedByInput> | SeparationRequestCreateWithoutReviewedByInput[] | SeparationRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: SeparationRequestCreateOrConnectWithoutReviewedByInput | SeparationRequestCreateOrConnectWithoutReviewedByInput[]
    createMany?: SeparationRequestCreateManyReviewedByInputEnvelope
    connect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
  }

  export type SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput = {
    create?: XOR<SeparationRequestCreateWithoutSubmittedByInput, SeparationRequestUncheckedCreateWithoutSubmittedByInput> | SeparationRequestCreateWithoutSubmittedByInput[] | SeparationRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: SeparationRequestCreateOrConnectWithoutSubmittedByInput | SeparationRequestCreateOrConnectWithoutSubmittedByInput[]
    createMany?: SeparationRequestCreateManySubmittedByInputEnvelope
    connect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
  }

  export type ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput = {
    create?: XOR<ServiceExtensionRequestCreateWithoutReviewedByInput, ServiceExtensionRequestUncheckedCreateWithoutReviewedByInput> | ServiceExtensionRequestCreateWithoutReviewedByInput[] | ServiceExtensionRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: ServiceExtensionRequestCreateOrConnectWithoutReviewedByInput | ServiceExtensionRequestCreateOrConnectWithoutReviewedByInput[]
    createMany?: ServiceExtensionRequestCreateManyReviewedByInputEnvelope
    connect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
  }

  export type ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput = {
    create?: XOR<ServiceExtensionRequestCreateWithoutSubmittedByInput, ServiceExtensionRequestUncheckedCreateWithoutSubmittedByInput> | ServiceExtensionRequestCreateWithoutSubmittedByInput[] | ServiceExtensionRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: ServiceExtensionRequestCreateOrConnectWithoutSubmittedByInput | ServiceExtensionRequestCreateOrConnectWithoutSubmittedByInput[]
    createMany?: ServiceExtensionRequestCreateManySubmittedByInputEnvelope
    connect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type CadreChangeRequestUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<CadreChangeRequestCreateWithoutReviewedByInput, CadreChangeRequestUncheckedCreateWithoutReviewedByInput> | CadreChangeRequestCreateWithoutReviewedByInput[] | CadreChangeRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: CadreChangeRequestCreateOrConnectWithoutReviewedByInput | CadreChangeRequestCreateOrConnectWithoutReviewedByInput[]
    upsert?: CadreChangeRequestUpsertWithWhereUniqueWithoutReviewedByInput | CadreChangeRequestUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: CadreChangeRequestCreateManyReviewedByInputEnvelope
    set?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    disconnect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    delete?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    connect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    update?: CadreChangeRequestUpdateWithWhereUniqueWithoutReviewedByInput | CadreChangeRequestUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: CadreChangeRequestUpdateManyWithWhereWithoutReviewedByInput | CadreChangeRequestUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: CadreChangeRequestScalarWhereInput | CadreChangeRequestScalarWhereInput[]
  }

  export type CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput = {
    create?: XOR<CadreChangeRequestCreateWithoutSubmittedByInput, CadreChangeRequestUncheckedCreateWithoutSubmittedByInput> | CadreChangeRequestCreateWithoutSubmittedByInput[] | CadreChangeRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: CadreChangeRequestCreateOrConnectWithoutSubmittedByInput | CadreChangeRequestCreateOrConnectWithoutSubmittedByInput[]
    upsert?: CadreChangeRequestUpsertWithWhereUniqueWithoutSubmittedByInput | CadreChangeRequestUpsertWithWhereUniqueWithoutSubmittedByInput[]
    createMany?: CadreChangeRequestCreateManySubmittedByInputEnvelope
    set?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    disconnect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    delete?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    connect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    update?: CadreChangeRequestUpdateWithWhereUniqueWithoutSubmittedByInput | CadreChangeRequestUpdateWithWhereUniqueWithoutSubmittedByInput[]
    updateMany?: CadreChangeRequestUpdateManyWithWhereWithoutSubmittedByInput | CadreChangeRequestUpdateManyWithWhereWithoutSubmittedByInput[]
    deleteMany?: CadreChangeRequestScalarWhereInput | CadreChangeRequestScalarWhereInput[]
  }

  export type ComplaintUpdateManyWithoutComplainantNestedInput = {
    create?: XOR<ComplaintCreateWithoutComplainantInput, ComplaintUncheckedCreateWithoutComplainantInput> | ComplaintCreateWithoutComplainantInput[] | ComplaintUncheckedCreateWithoutComplainantInput[]
    connectOrCreate?: ComplaintCreateOrConnectWithoutComplainantInput | ComplaintCreateOrConnectWithoutComplainantInput[]
    upsert?: ComplaintUpsertWithWhereUniqueWithoutComplainantInput | ComplaintUpsertWithWhereUniqueWithoutComplainantInput[]
    createMany?: ComplaintCreateManyComplainantInputEnvelope
    set?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
    disconnect?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
    delete?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
    connect?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
    update?: ComplaintUpdateWithWhereUniqueWithoutComplainantInput | ComplaintUpdateWithWhereUniqueWithoutComplainantInput[]
    updateMany?: ComplaintUpdateManyWithWhereWithoutComplainantInput | ComplaintUpdateManyWithWhereWithoutComplainantInput[]
    deleteMany?: ComplaintScalarWhereInput | ComplaintScalarWhereInput[]
  }

  export type ComplaintUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<ComplaintCreateWithoutReviewedByInput, ComplaintUncheckedCreateWithoutReviewedByInput> | ComplaintCreateWithoutReviewedByInput[] | ComplaintUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: ComplaintCreateOrConnectWithoutReviewedByInput | ComplaintCreateOrConnectWithoutReviewedByInput[]
    upsert?: ComplaintUpsertWithWhereUniqueWithoutReviewedByInput | ComplaintUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: ComplaintCreateManyReviewedByInputEnvelope
    set?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
    disconnect?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
    delete?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
    connect?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
    update?: ComplaintUpdateWithWhereUniqueWithoutReviewedByInput | ComplaintUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: ComplaintUpdateManyWithWhereWithoutReviewedByInput | ComplaintUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: ComplaintScalarWhereInput | ComplaintScalarWhereInput[]
  }

  export type ConfirmationRequestUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<ConfirmationRequestCreateWithoutReviewedByInput, ConfirmationRequestUncheckedCreateWithoutReviewedByInput> | ConfirmationRequestCreateWithoutReviewedByInput[] | ConfirmationRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: ConfirmationRequestCreateOrConnectWithoutReviewedByInput | ConfirmationRequestCreateOrConnectWithoutReviewedByInput[]
    upsert?: ConfirmationRequestUpsertWithWhereUniqueWithoutReviewedByInput | ConfirmationRequestUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: ConfirmationRequestCreateManyReviewedByInputEnvelope
    set?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    disconnect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    delete?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    connect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    update?: ConfirmationRequestUpdateWithWhereUniqueWithoutReviewedByInput | ConfirmationRequestUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: ConfirmationRequestUpdateManyWithWhereWithoutReviewedByInput | ConfirmationRequestUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: ConfirmationRequestScalarWhereInput | ConfirmationRequestScalarWhereInput[]
  }

  export type ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput = {
    create?: XOR<ConfirmationRequestCreateWithoutSubmittedByInput, ConfirmationRequestUncheckedCreateWithoutSubmittedByInput> | ConfirmationRequestCreateWithoutSubmittedByInput[] | ConfirmationRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: ConfirmationRequestCreateOrConnectWithoutSubmittedByInput | ConfirmationRequestCreateOrConnectWithoutSubmittedByInput[]
    upsert?: ConfirmationRequestUpsertWithWhereUniqueWithoutSubmittedByInput | ConfirmationRequestUpsertWithWhereUniqueWithoutSubmittedByInput[]
    createMany?: ConfirmationRequestCreateManySubmittedByInputEnvelope
    set?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    disconnect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    delete?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    connect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    update?: ConfirmationRequestUpdateWithWhereUniqueWithoutSubmittedByInput | ConfirmationRequestUpdateWithWhereUniqueWithoutSubmittedByInput[]
    updateMany?: ConfirmationRequestUpdateManyWithWhereWithoutSubmittedByInput | ConfirmationRequestUpdateManyWithWhereWithoutSubmittedByInput[]
    deleteMany?: ConfirmationRequestScalarWhereInput | ConfirmationRequestScalarWhereInput[]
  }

  export type LwopRequestUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<LwopRequestCreateWithoutReviewedByInput, LwopRequestUncheckedCreateWithoutReviewedByInput> | LwopRequestCreateWithoutReviewedByInput[] | LwopRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: LwopRequestCreateOrConnectWithoutReviewedByInput | LwopRequestCreateOrConnectWithoutReviewedByInput[]
    upsert?: LwopRequestUpsertWithWhereUniqueWithoutReviewedByInput | LwopRequestUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: LwopRequestCreateManyReviewedByInputEnvelope
    set?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    disconnect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    delete?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    connect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    update?: LwopRequestUpdateWithWhereUniqueWithoutReviewedByInput | LwopRequestUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: LwopRequestUpdateManyWithWhereWithoutReviewedByInput | LwopRequestUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: LwopRequestScalarWhereInput | LwopRequestScalarWhereInput[]
  }

  export type LwopRequestUpdateManyWithoutSubmittedByNestedInput = {
    create?: XOR<LwopRequestCreateWithoutSubmittedByInput, LwopRequestUncheckedCreateWithoutSubmittedByInput> | LwopRequestCreateWithoutSubmittedByInput[] | LwopRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: LwopRequestCreateOrConnectWithoutSubmittedByInput | LwopRequestCreateOrConnectWithoutSubmittedByInput[]
    upsert?: LwopRequestUpsertWithWhereUniqueWithoutSubmittedByInput | LwopRequestUpsertWithWhereUniqueWithoutSubmittedByInput[]
    createMany?: LwopRequestCreateManySubmittedByInputEnvelope
    set?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    disconnect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    delete?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    connect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    update?: LwopRequestUpdateWithWhereUniqueWithoutSubmittedByInput | LwopRequestUpdateWithWhereUniqueWithoutSubmittedByInput[]
    updateMany?: LwopRequestUpdateManyWithWhereWithoutSubmittedByInput | LwopRequestUpdateManyWithWhereWithoutSubmittedByInput[]
    deleteMany?: LwopRequestScalarWhereInput | LwopRequestScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type PromotionRequestUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<PromotionRequestCreateWithoutReviewedByInput, PromotionRequestUncheckedCreateWithoutReviewedByInput> | PromotionRequestCreateWithoutReviewedByInput[] | PromotionRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: PromotionRequestCreateOrConnectWithoutReviewedByInput | PromotionRequestCreateOrConnectWithoutReviewedByInput[]
    upsert?: PromotionRequestUpsertWithWhereUniqueWithoutReviewedByInput | PromotionRequestUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: PromotionRequestCreateManyReviewedByInputEnvelope
    set?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    disconnect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    delete?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    connect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    update?: PromotionRequestUpdateWithWhereUniqueWithoutReviewedByInput | PromotionRequestUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: PromotionRequestUpdateManyWithWhereWithoutReviewedByInput | PromotionRequestUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: PromotionRequestScalarWhereInput | PromotionRequestScalarWhereInput[]
  }

  export type PromotionRequestUpdateManyWithoutSubmittedByNestedInput = {
    create?: XOR<PromotionRequestCreateWithoutSubmittedByInput, PromotionRequestUncheckedCreateWithoutSubmittedByInput> | PromotionRequestCreateWithoutSubmittedByInput[] | PromotionRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: PromotionRequestCreateOrConnectWithoutSubmittedByInput | PromotionRequestCreateOrConnectWithoutSubmittedByInput[]
    upsert?: PromotionRequestUpsertWithWhereUniqueWithoutSubmittedByInput | PromotionRequestUpsertWithWhereUniqueWithoutSubmittedByInput[]
    createMany?: PromotionRequestCreateManySubmittedByInputEnvelope
    set?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    disconnect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    delete?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    connect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    update?: PromotionRequestUpdateWithWhereUniqueWithoutSubmittedByInput | PromotionRequestUpdateWithWhereUniqueWithoutSubmittedByInput[]
    updateMany?: PromotionRequestUpdateManyWithWhereWithoutSubmittedByInput | PromotionRequestUpdateManyWithWhereWithoutSubmittedByInput[]
    deleteMany?: PromotionRequestScalarWhereInput | PromotionRequestScalarWhereInput[]
  }

  export type ResignationRequestUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<ResignationRequestCreateWithoutReviewedByInput, ResignationRequestUncheckedCreateWithoutReviewedByInput> | ResignationRequestCreateWithoutReviewedByInput[] | ResignationRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: ResignationRequestCreateOrConnectWithoutReviewedByInput | ResignationRequestCreateOrConnectWithoutReviewedByInput[]
    upsert?: ResignationRequestUpsertWithWhereUniqueWithoutReviewedByInput | ResignationRequestUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: ResignationRequestCreateManyReviewedByInputEnvelope
    set?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    disconnect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    delete?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    connect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    update?: ResignationRequestUpdateWithWhereUniqueWithoutReviewedByInput | ResignationRequestUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: ResignationRequestUpdateManyWithWhereWithoutReviewedByInput | ResignationRequestUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: ResignationRequestScalarWhereInput | ResignationRequestScalarWhereInput[]
  }

  export type ResignationRequestUpdateManyWithoutSubmittedByNestedInput = {
    create?: XOR<ResignationRequestCreateWithoutSubmittedByInput, ResignationRequestUncheckedCreateWithoutSubmittedByInput> | ResignationRequestCreateWithoutSubmittedByInput[] | ResignationRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: ResignationRequestCreateOrConnectWithoutSubmittedByInput | ResignationRequestCreateOrConnectWithoutSubmittedByInput[]
    upsert?: ResignationRequestUpsertWithWhereUniqueWithoutSubmittedByInput | ResignationRequestUpsertWithWhereUniqueWithoutSubmittedByInput[]
    createMany?: ResignationRequestCreateManySubmittedByInputEnvelope
    set?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    disconnect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    delete?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    connect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    update?: ResignationRequestUpdateWithWhereUniqueWithoutSubmittedByInput | ResignationRequestUpdateWithWhereUniqueWithoutSubmittedByInput[]
    updateMany?: ResignationRequestUpdateManyWithWhereWithoutSubmittedByInput | ResignationRequestUpdateManyWithWhereWithoutSubmittedByInput[]
    deleteMany?: ResignationRequestScalarWhereInput | ResignationRequestScalarWhereInput[]
  }

  export type RetirementRequestUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<RetirementRequestCreateWithoutReviewedByInput, RetirementRequestUncheckedCreateWithoutReviewedByInput> | RetirementRequestCreateWithoutReviewedByInput[] | RetirementRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: RetirementRequestCreateOrConnectWithoutReviewedByInput | RetirementRequestCreateOrConnectWithoutReviewedByInput[]
    upsert?: RetirementRequestUpsertWithWhereUniqueWithoutReviewedByInput | RetirementRequestUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: RetirementRequestCreateManyReviewedByInputEnvelope
    set?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    disconnect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    delete?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    connect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    update?: RetirementRequestUpdateWithWhereUniqueWithoutReviewedByInput | RetirementRequestUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: RetirementRequestUpdateManyWithWhereWithoutReviewedByInput | RetirementRequestUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: RetirementRequestScalarWhereInput | RetirementRequestScalarWhereInput[]
  }

  export type RetirementRequestUpdateManyWithoutSubmittedByNestedInput = {
    create?: XOR<RetirementRequestCreateWithoutSubmittedByInput, RetirementRequestUncheckedCreateWithoutSubmittedByInput> | RetirementRequestCreateWithoutSubmittedByInput[] | RetirementRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: RetirementRequestCreateOrConnectWithoutSubmittedByInput | RetirementRequestCreateOrConnectWithoutSubmittedByInput[]
    upsert?: RetirementRequestUpsertWithWhereUniqueWithoutSubmittedByInput | RetirementRequestUpsertWithWhereUniqueWithoutSubmittedByInput[]
    createMany?: RetirementRequestCreateManySubmittedByInputEnvelope
    set?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    disconnect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    delete?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    connect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    update?: RetirementRequestUpdateWithWhereUniqueWithoutSubmittedByInput | RetirementRequestUpdateWithWhereUniqueWithoutSubmittedByInput[]
    updateMany?: RetirementRequestUpdateManyWithWhereWithoutSubmittedByInput | RetirementRequestUpdateManyWithWhereWithoutSubmittedByInput[]
    deleteMany?: RetirementRequestScalarWhereInput | RetirementRequestScalarWhereInput[]
  }

  export type SeparationRequestUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<SeparationRequestCreateWithoutReviewedByInput, SeparationRequestUncheckedCreateWithoutReviewedByInput> | SeparationRequestCreateWithoutReviewedByInput[] | SeparationRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: SeparationRequestCreateOrConnectWithoutReviewedByInput | SeparationRequestCreateOrConnectWithoutReviewedByInput[]
    upsert?: SeparationRequestUpsertWithWhereUniqueWithoutReviewedByInput | SeparationRequestUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: SeparationRequestCreateManyReviewedByInputEnvelope
    set?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    disconnect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    delete?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    connect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    update?: SeparationRequestUpdateWithWhereUniqueWithoutReviewedByInput | SeparationRequestUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: SeparationRequestUpdateManyWithWhereWithoutReviewedByInput | SeparationRequestUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: SeparationRequestScalarWhereInput | SeparationRequestScalarWhereInput[]
  }

  export type SeparationRequestUpdateManyWithoutSubmittedByNestedInput = {
    create?: XOR<SeparationRequestCreateWithoutSubmittedByInput, SeparationRequestUncheckedCreateWithoutSubmittedByInput> | SeparationRequestCreateWithoutSubmittedByInput[] | SeparationRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: SeparationRequestCreateOrConnectWithoutSubmittedByInput | SeparationRequestCreateOrConnectWithoutSubmittedByInput[]
    upsert?: SeparationRequestUpsertWithWhereUniqueWithoutSubmittedByInput | SeparationRequestUpsertWithWhereUniqueWithoutSubmittedByInput[]
    createMany?: SeparationRequestCreateManySubmittedByInputEnvelope
    set?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    disconnect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    delete?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    connect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    update?: SeparationRequestUpdateWithWhereUniqueWithoutSubmittedByInput | SeparationRequestUpdateWithWhereUniqueWithoutSubmittedByInput[]
    updateMany?: SeparationRequestUpdateManyWithWhereWithoutSubmittedByInput | SeparationRequestUpdateManyWithWhereWithoutSubmittedByInput[]
    deleteMany?: SeparationRequestScalarWhereInput | SeparationRequestScalarWhereInput[]
  }

  export type ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<ServiceExtensionRequestCreateWithoutReviewedByInput, ServiceExtensionRequestUncheckedCreateWithoutReviewedByInput> | ServiceExtensionRequestCreateWithoutReviewedByInput[] | ServiceExtensionRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: ServiceExtensionRequestCreateOrConnectWithoutReviewedByInput | ServiceExtensionRequestCreateOrConnectWithoutReviewedByInput[]
    upsert?: ServiceExtensionRequestUpsertWithWhereUniqueWithoutReviewedByInput | ServiceExtensionRequestUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: ServiceExtensionRequestCreateManyReviewedByInputEnvelope
    set?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    disconnect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    delete?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    connect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    update?: ServiceExtensionRequestUpdateWithWhereUniqueWithoutReviewedByInput | ServiceExtensionRequestUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: ServiceExtensionRequestUpdateManyWithWhereWithoutReviewedByInput | ServiceExtensionRequestUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: ServiceExtensionRequestScalarWhereInput | ServiceExtensionRequestScalarWhereInput[]
  }

  export type ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput = {
    create?: XOR<ServiceExtensionRequestCreateWithoutSubmittedByInput, ServiceExtensionRequestUncheckedCreateWithoutSubmittedByInput> | ServiceExtensionRequestCreateWithoutSubmittedByInput[] | ServiceExtensionRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: ServiceExtensionRequestCreateOrConnectWithoutSubmittedByInput | ServiceExtensionRequestCreateOrConnectWithoutSubmittedByInput[]
    upsert?: ServiceExtensionRequestUpsertWithWhereUniqueWithoutSubmittedByInput | ServiceExtensionRequestUpsertWithWhereUniqueWithoutSubmittedByInput[]
    createMany?: ServiceExtensionRequestCreateManySubmittedByInputEnvelope
    set?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    disconnect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    delete?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    connect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    update?: ServiceExtensionRequestUpdateWithWhereUniqueWithoutSubmittedByInput | ServiceExtensionRequestUpdateWithWhereUniqueWithoutSubmittedByInput[]
    updateMany?: ServiceExtensionRequestUpdateManyWithWhereWithoutSubmittedByInput | ServiceExtensionRequestUpdateManyWithWhereWithoutSubmittedByInput[]
    deleteMany?: ServiceExtensionRequestScalarWhereInput | ServiceExtensionRequestScalarWhereInput[]
  }

  export type EmployeeUpdateOneWithoutUserNestedInput = {
    create?: XOR<EmployeeCreateWithoutUserInput, EmployeeUncheckedCreateWithoutUserInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutUserInput
    upsert?: EmployeeUpsertWithoutUserInput
    disconnect?: EmployeeWhereInput | boolean
    delete?: EmployeeWhereInput | boolean
    connect?: EmployeeWhereUniqueInput
    update?: XOR<XOR<EmployeeUpdateToOneWithWhereWithoutUserInput, EmployeeUpdateWithoutUserInput>, EmployeeUncheckedUpdateWithoutUserInput>
  }

  export type InstitutionUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<InstitutionCreateWithoutUsersInput, InstitutionUncheckedCreateWithoutUsersInput>
    connectOrCreate?: InstitutionCreateOrConnectWithoutUsersInput
    upsert?: InstitutionUpsertWithoutUsersInput
    connect?: InstitutionWhereUniqueInput
    update?: XOR<XOR<InstitutionUpdateToOneWithWhereWithoutUsersInput, InstitutionUpdateWithoutUsersInput>, InstitutionUncheckedUpdateWithoutUsersInput>
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<CadreChangeRequestCreateWithoutReviewedByInput, CadreChangeRequestUncheckedCreateWithoutReviewedByInput> | CadreChangeRequestCreateWithoutReviewedByInput[] | CadreChangeRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: CadreChangeRequestCreateOrConnectWithoutReviewedByInput | CadreChangeRequestCreateOrConnectWithoutReviewedByInput[]
    upsert?: CadreChangeRequestUpsertWithWhereUniqueWithoutReviewedByInput | CadreChangeRequestUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: CadreChangeRequestCreateManyReviewedByInputEnvelope
    set?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    disconnect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    delete?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    connect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    update?: CadreChangeRequestUpdateWithWhereUniqueWithoutReviewedByInput | CadreChangeRequestUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: CadreChangeRequestUpdateManyWithWhereWithoutReviewedByInput | CadreChangeRequestUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: CadreChangeRequestScalarWhereInput | CadreChangeRequestScalarWhereInput[]
  }

  export type CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput = {
    create?: XOR<CadreChangeRequestCreateWithoutSubmittedByInput, CadreChangeRequestUncheckedCreateWithoutSubmittedByInput> | CadreChangeRequestCreateWithoutSubmittedByInput[] | CadreChangeRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: CadreChangeRequestCreateOrConnectWithoutSubmittedByInput | CadreChangeRequestCreateOrConnectWithoutSubmittedByInput[]
    upsert?: CadreChangeRequestUpsertWithWhereUniqueWithoutSubmittedByInput | CadreChangeRequestUpsertWithWhereUniqueWithoutSubmittedByInput[]
    createMany?: CadreChangeRequestCreateManySubmittedByInputEnvelope
    set?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    disconnect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    delete?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    connect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    update?: CadreChangeRequestUpdateWithWhereUniqueWithoutSubmittedByInput | CadreChangeRequestUpdateWithWhereUniqueWithoutSubmittedByInput[]
    updateMany?: CadreChangeRequestUpdateManyWithWhereWithoutSubmittedByInput | CadreChangeRequestUpdateManyWithWhereWithoutSubmittedByInput[]
    deleteMany?: CadreChangeRequestScalarWhereInput | CadreChangeRequestScalarWhereInput[]
  }

  export type ComplaintUncheckedUpdateManyWithoutComplainantNestedInput = {
    create?: XOR<ComplaintCreateWithoutComplainantInput, ComplaintUncheckedCreateWithoutComplainantInput> | ComplaintCreateWithoutComplainantInput[] | ComplaintUncheckedCreateWithoutComplainantInput[]
    connectOrCreate?: ComplaintCreateOrConnectWithoutComplainantInput | ComplaintCreateOrConnectWithoutComplainantInput[]
    upsert?: ComplaintUpsertWithWhereUniqueWithoutComplainantInput | ComplaintUpsertWithWhereUniqueWithoutComplainantInput[]
    createMany?: ComplaintCreateManyComplainantInputEnvelope
    set?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
    disconnect?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
    delete?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
    connect?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
    update?: ComplaintUpdateWithWhereUniqueWithoutComplainantInput | ComplaintUpdateWithWhereUniqueWithoutComplainantInput[]
    updateMany?: ComplaintUpdateManyWithWhereWithoutComplainantInput | ComplaintUpdateManyWithWhereWithoutComplainantInput[]
    deleteMany?: ComplaintScalarWhereInput | ComplaintScalarWhereInput[]
  }

  export type ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<ComplaintCreateWithoutReviewedByInput, ComplaintUncheckedCreateWithoutReviewedByInput> | ComplaintCreateWithoutReviewedByInput[] | ComplaintUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: ComplaintCreateOrConnectWithoutReviewedByInput | ComplaintCreateOrConnectWithoutReviewedByInput[]
    upsert?: ComplaintUpsertWithWhereUniqueWithoutReviewedByInput | ComplaintUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: ComplaintCreateManyReviewedByInputEnvelope
    set?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
    disconnect?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
    delete?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
    connect?: ComplaintWhereUniqueInput | ComplaintWhereUniqueInput[]
    update?: ComplaintUpdateWithWhereUniqueWithoutReviewedByInput | ComplaintUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: ComplaintUpdateManyWithWhereWithoutReviewedByInput | ComplaintUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: ComplaintScalarWhereInput | ComplaintScalarWhereInput[]
  }

  export type ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<ConfirmationRequestCreateWithoutReviewedByInput, ConfirmationRequestUncheckedCreateWithoutReviewedByInput> | ConfirmationRequestCreateWithoutReviewedByInput[] | ConfirmationRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: ConfirmationRequestCreateOrConnectWithoutReviewedByInput | ConfirmationRequestCreateOrConnectWithoutReviewedByInput[]
    upsert?: ConfirmationRequestUpsertWithWhereUniqueWithoutReviewedByInput | ConfirmationRequestUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: ConfirmationRequestCreateManyReviewedByInputEnvelope
    set?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    disconnect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    delete?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    connect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    update?: ConfirmationRequestUpdateWithWhereUniqueWithoutReviewedByInput | ConfirmationRequestUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: ConfirmationRequestUpdateManyWithWhereWithoutReviewedByInput | ConfirmationRequestUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: ConfirmationRequestScalarWhereInput | ConfirmationRequestScalarWhereInput[]
  }

  export type ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput = {
    create?: XOR<ConfirmationRequestCreateWithoutSubmittedByInput, ConfirmationRequestUncheckedCreateWithoutSubmittedByInput> | ConfirmationRequestCreateWithoutSubmittedByInput[] | ConfirmationRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: ConfirmationRequestCreateOrConnectWithoutSubmittedByInput | ConfirmationRequestCreateOrConnectWithoutSubmittedByInput[]
    upsert?: ConfirmationRequestUpsertWithWhereUniqueWithoutSubmittedByInput | ConfirmationRequestUpsertWithWhereUniqueWithoutSubmittedByInput[]
    createMany?: ConfirmationRequestCreateManySubmittedByInputEnvelope
    set?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    disconnect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    delete?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    connect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    update?: ConfirmationRequestUpdateWithWhereUniqueWithoutSubmittedByInput | ConfirmationRequestUpdateWithWhereUniqueWithoutSubmittedByInput[]
    updateMany?: ConfirmationRequestUpdateManyWithWhereWithoutSubmittedByInput | ConfirmationRequestUpdateManyWithWhereWithoutSubmittedByInput[]
    deleteMany?: ConfirmationRequestScalarWhereInput | ConfirmationRequestScalarWhereInput[]
  }

  export type LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<LwopRequestCreateWithoutReviewedByInput, LwopRequestUncheckedCreateWithoutReviewedByInput> | LwopRequestCreateWithoutReviewedByInput[] | LwopRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: LwopRequestCreateOrConnectWithoutReviewedByInput | LwopRequestCreateOrConnectWithoutReviewedByInput[]
    upsert?: LwopRequestUpsertWithWhereUniqueWithoutReviewedByInput | LwopRequestUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: LwopRequestCreateManyReviewedByInputEnvelope
    set?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    disconnect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    delete?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    connect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    update?: LwopRequestUpdateWithWhereUniqueWithoutReviewedByInput | LwopRequestUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: LwopRequestUpdateManyWithWhereWithoutReviewedByInput | LwopRequestUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: LwopRequestScalarWhereInput | LwopRequestScalarWhereInput[]
  }

  export type LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput = {
    create?: XOR<LwopRequestCreateWithoutSubmittedByInput, LwopRequestUncheckedCreateWithoutSubmittedByInput> | LwopRequestCreateWithoutSubmittedByInput[] | LwopRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: LwopRequestCreateOrConnectWithoutSubmittedByInput | LwopRequestCreateOrConnectWithoutSubmittedByInput[]
    upsert?: LwopRequestUpsertWithWhereUniqueWithoutSubmittedByInput | LwopRequestUpsertWithWhereUniqueWithoutSubmittedByInput[]
    createMany?: LwopRequestCreateManySubmittedByInputEnvelope
    set?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    disconnect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    delete?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    connect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    update?: LwopRequestUpdateWithWhereUniqueWithoutSubmittedByInput | LwopRequestUpdateWithWhereUniqueWithoutSubmittedByInput[]
    updateMany?: LwopRequestUpdateManyWithWhereWithoutSubmittedByInput | LwopRequestUpdateManyWithWhereWithoutSubmittedByInput[]
    deleteMany?: LwopRequestScalarWhereInput | LwopRequestScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<PromotionRequestCreateWithoutReviewedByInput, PromotionRequestUncheckedCreateWithoutReviewedByInput> | PromotionRequestCreateWithoutReviewedByInput[] | PromotionRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: PromotionRequestCreateOrConnectWithoutReviewedByInput | PromotionRequestCreateOrConnectWithoutReviewedByInput[]
    upsert?: PromotionRequestUpsertWithWhereUniqueWithoutReviewedByInput | PromotionRequestUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: PromotionRequestCreateManyReviewedByInputEnvelope
    set?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    disconnect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    delete?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    connect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    update?: PromotionRequestUpdateWithWhereUniqueWithoutReviewedByInput | PromotionRequestUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: PromotionRequestUpdateManyWithWhereWithoutReviewedByInput | PromotionRequestUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: PromotionRequestScalarWhereInput | PromotionRequestScalarWhereInput[]
  }

  export type PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput = {
    create?: XOR<PromotionRequestCreateWithoutSubmittedByInput, PromotionRequestUncheckedCreateWithoutSubmittedByInput> | PromotionRequestCreateWithoutSubmittedByInput[] | PromotionRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: PromotionRequestCreateOrConnectWithoutSubmittedByInput | PromotionRequestCreateOrConnectWithoutSubmittedByInput[]
    upsert?: PromotionRequestUpsertWithWhereUniqueWithoutSubmittedByInput | PromotionRequestUpsertWithWhereUniqueWithoutSubmittedByInput[]
    createMany?: PromotionRequestCreateManySubmittedByInputEnvelope
    set?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    disconnect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    delete?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    connect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    update?: PromotionRequestUpdateWithWhereUniqueWithoutSubmittedByInput | PromotionRequestUpdateWithWhereUniqueWithoutSubmittedByInput[]
    updateMany?: PromotionRequestUpdateManyWithWhereWithoutSubmittedByInput | PromotionRequestUpdateManyWithWhereWithoutSubmittedByInput[]
    deleteMany?: PromotionRequestScalarWhereInput | PromotionRequestScalarWhereInput[]
  }

  export type ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<ResignationRequestCreateWithoutReviewedByInput, ResignationRequestUncheckedCreateWithoutReviewedByInput> | ResignationRequestCreateWithoutReviewedByInput[] | ResignationRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: ResignationRequestCreateOrConnectWithoutReviewedByInput | ResignationRequestCreateOrConnectWithoutReviewedByInput[]
    upsert?: ResignationRequestUpsertWithWhereUniqueWithoutReviewedByInput | ResignationRequestUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: ResignationRequestCreateManyReviewedByInputEnvelope
    set?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    disconnect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    delete?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    connect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    update?: ResignationRequestUpdateWithWhereUniqueWithoutReviewedByInput | ResignationRequestUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: ResignationRequestUpdateManyWithWhereWithoutReviewedByInput | ResignationRequestUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: ResignationRequestScalarWhereInput | ResignationRequestScalarWhereInput[]
  }

  export type ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput = {
    create?: XOR<ResignationRequestCreateWithoutSubmittedByInput, ResignationRequestUncheckedCreateWithoutSubmittedByInput> | ResignationRequestCreateWithoutSubmittedByInput[] | ResignationRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: ResignationRequestCreateOrConnectWithoutSubmittedByInput | ResignationRequestCreateOrConnectWithoutSubmittedByInput[]
    upsert?: ResignationRequestUpsertWithWhereUniqueWithoutSubmittedByInput | ResignationRequestUpsertWithWhereUniqueWithoutSubmittedByInput[]
    createMany?: ResignationRequestCreateManySubmittedByInputEnvelope
    set?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    disconnect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    delete?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    connect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    update?: ResignationRequestUpdateWithWhereUniqueWithoutSubmittedByInput | ResignationRequestUpdateWithWhereUniqueWithoutSubmittedByInput[]
    updateMany?: ResignationRequestUpdateManyWithWhereWithoutSubmittedByInput | ResignationRequestUpdateManyWithWhereWithoutSubmittedByInput[]
    deleteMany?: ResignationRequestScalarWhereInput | ResignationRequestScalarWhereInput[]
  }

  export type RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<RetirementRequestCreateWithoutReviewedByInput, RetirementRequestUncheckedCreateWithoutReviewedByInput> | RetirementRequestCreateWithoutReviewedByInput[] | RetirementRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: RetirementRequestCreateOrConnectWithoutReviewedByInput | RetirementRequestCreateOrConnectWithoutReviewedByInput[]
    upsert?: RetirementRequestUpsertWithWhereUniqueWithoutReviewedByInput | RetirementRequestUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: RetirementRequestCreateManyReviewedByInputEnvelope
    set?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    disconnect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    delete?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    connect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    update?: RetirementRequestUpdateWithWhereUniqueWithoutReviewedByInput | RetirementRequestUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: RetirementRequestUpdateManyWithWhereWithoutReviewedByInput | RetirementRequestUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: RetirementRequestScalarWhereInput | RetirementRequestScalarWhereInput[]
  }

  export type RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput = {
    create?: XOR<RetirementRequestCreateWithoutSubmittedByInput, RetirementRequestUncheckedCreateWithoutSubmittedByInput> | RetirementRequestCreateWithoutSubmittedByInput[] | RetirementRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: RetirementRequestCreateOrConnectWithoutSubmittedByInput | RetirementRequestCreateOrConnectWithoutSubmittedByInput[]
    upsert?: RetirementRequestUpsertWithWhereUniqueWithoutSubmittedByInput | RetirementRequestUpsertWithWhereUniqueWithoutSubmittedByInput[]
    createMany?: RetirementRequestCreateManySubmittedByInputEnvelope
    set?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    disconnect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    delete?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    connect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    update?: RetirementRequestUpdateWithWhereUniqueWithoutSubmittedByInput | RetirementRequestUpdateWithWhereUniqueWithoutSubmittedByInput[]
    updateMany?: RetirementRequestUpdateManyWithWhereWithoutSubmittedByInput | RetirementRequestUpdateManyWithWhereWithoutSubmittedByInput[]
    deleteMany?: RetirementRequestScalarWhereInput | RetirementRequestScalarWhereInput[]
  }

  export type SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<SeparationRequestCreateWithoutReviewedByInput, SeparationRequestUncheckedCreateWithoutReviewedByInput> | SeparationRequestCreateWithoutReviewedByInput[] | SeparationRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: SeparationRequestCreateOrConnectWithoutReviewedByInput | SeparationRequestCreateOrConnectWithoutReviewedByInput[]
    upsert?: SeparationRequestUpsertWithWhereUniqueWithoutReviewedByInput | SeparationRequestUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: SeparationRequestCreateManyReviewedByInputEnvelope
    set?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    disconnect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    delete?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    connect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    update?: SeparationRequestUpdateWithWhereUniqueWithoutReviewedByInput | SeparationRequestUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: SeparationRequestUpdateManyWithWhereWithoutReviewedByInput | SeparationRequestUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: SeparationRequestScalarWhereInput | SeparationRequestScalarWhereInput[]
  }

  export type SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput = {
    create?: XOR<SeparationRequestCreateWithoutSubmittedByInput, SeparationRequestUncheckedCreateWithoutSubmittedByInput> | SeparationRequestCreateWithoutSubmittedByInput[] | SeparationRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: SeparationRequestCreateOrConnectWithoutSubmittedByInput | SeparationRequestCreateOrConnectWithoutSubmittedByInput[]
    upsert?: SeparationRequestUpsertWithWhereUniqueWithoutSubmittedByInput | SeparationRequestUpsertWithWhereUniqueWithoutSubmittedByInput[]
    createMany?: SeparationRequestCreateManySubmittedByInputEnvelope
    set?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    disconnect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    delete?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    connect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    update?: SeparationRequestUpdateWithWhereUniqueWithoutSubmittedByInput | SeparationRequestUpdateWithWhereUniqueWithoutSubmittedByInput[]
    updateMany?: SeparationRequestUpdateManyWithWhereWithoutSubmittedByInput | SeparationRequestUpdateManyWithWhereWithoutSubmittedByInput[]
    deleteMany?: SeparationRequestScalarWhereInput | SeparationRequestScalarWhereInput[]
  }

  export type ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput = {
    create?: XOR<ServiceExtensionRequestCreateWithoutReviewedByInput, ServiceExtensionRequestUncheckedCreateWithoutReviewedByInput> | ServiceExtensionRequestCreateWithoutReviewedByInput[] | ServiceExtensionRequestUncheckedCreateWithoutReviewedByInput[]
    connectOrCreate?: ServiceExtensionRequestCreateOrConnectWithoutReviewedByInput | ServiceExtensionRequestCreateOrConnectWithoutReviewedByInput[]
    upsert?: ServiceExtensionRequestUpsertWithWhereUniqueWithoutReviewedByInput | ServiceExtensionRequestUpsertWithWhereUniqueWithoutReviewedByInput[]
    createMany?: ServiceExtensionRequestCreateManyReviewedByInputEnvelope
    set?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    disconnect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    delete?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    connect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    update?: ServiceExtensionRequestUpdateWithWhereUniqueWithoutReviewedByInput | ServiceExtensionRequestUpdateWithWhereUniqueWithoutReviewedByInput[]
    updateMany?: ServiceExtensionRequestUpdateManyWithWhereWithoutReviewedByInput | ServiceExtensionRequestUpdateManyWithWhereWithoutReviewedByInput[]
    deleteMany?: ServiceExtensionRequestScalarWhereInput | ServiceExtensionRequestScalarWhereInput[]
  }

  export type ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput = {
    create?: XOR<ServiceExtensionRequestCreateWithoutSubmittedByInput, ServiceExtensionRequestUncheckedCreateWithoutSubmittedByInput> | ServiceExtensionRequestCreateWithoutSubmittedByInput[] | ServiceExtensionRequestUncheckedCreateWithoutSubmittedByInput[]
    connectOrCreate?: ServiceExtensionRequestCreateOrConnectWithoutSubmittedByInput | ServiceExtensionRequestCreateOrConnectWithoutSubmittedByInput[]
    upsert?: ServiceExtensionRequestUpsertWithWhereUniqueWithoutSubmittedByInput | ServiceExtensionRequestUpsertWithWhereUniqueWithoutSubmittedByInput[]
    createMany?: ServiceExtensionRequestCreateManySubmittedByInputEnvelope
    set?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    disconnect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    delete?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    connect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    update?: ServiceExtensionRequestUpdateWithWhereUniqueWithoutSubmittedByInput | ServiceExtensionRequestUpdateWithWhereUniqueWithoutSubmittedByInput[]
    updateMany?: ServiceExtensionRequestUpdateManyWithWhereWithoutSubmittedByInput | ServiceExtensionRequestUpdateManyWithWhereWithoutSubmittedByInput[]
    deleteMany?: ServiceExtensionRequestScalarWhereInput | ServiceExtensionRequestScalarWhereInput[]
  }

  export type EmployeeCreateNestedManyWithoutInstitutionInput = {
    create?: XOR<EmployeeCreateWithoutInstitutionInput, EmployeeUncheckedCreateWithoutInstitutionInput> | EmployeeCreateWithoutInstitutionInput[] | EmployeeUncheckedCreateWithoutInstitutionInput[]
    connectOrCreate?: EmployeeCreateOrConnectWithoutInstitutionInput | EmployeeCreateOrConnectWithoutInstitutionInput[]
    createMany?: EmployeeCreateManyInstitutionInputEnvelope
    connect?: EmployeeWhereUniqueInput | EmployeeWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutInstitutionInput = {
    create?: XOR<UserCreateWithoutInstitutionInput, UserUncheckedCreateWithoutInstitutionInput> | UserCreateWithoutInstitutionInput[] | UserUncheckedCreateWithoutInstitutionInput[]
    connectOrCreate?: UserCreateOrConnectWithoutInstitutionInput | UserCreateOrConnectWithoutInstitutionInput[]
    createMany?: UserCreateManyInstitutionInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type EmployeeUncheckedCreateNestedManyWithoutInstitutionInput = {
    create?: XOR<EmployeeCreateWithoutInstitutionInput, EmployeeUncheckedCreateWithoutInstitutionInput> | EmployeeCreateWithoutInstitutionInput[] | EmployeeUncheckedCreateWithoutInstitutionInput[]
    connectOrCreate?: EmployeeCreateOrConnectWithoutInstitutionInput | EmployeeCreateOrConnectWithoutInstitutionInput[]
    createMany?: EmployeeCreateManyInstitutionInputEnvelope
    connect?: EmployeeWhereUniqueInput | EmployeeWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutInstitutionInput = {
    create?: XOR<UserCreateWithoutInstitutionInput, UserUncheckedCreateWithoutInstitutionInput> | UserCreateWithoutInstitutionInput[] | UserUncheckedCreateWithoutInstitutionInput[]
    connectOrCreate?: UserCreateOrConnectWithoutInstitutionInput | UserCreateOrConnectWithoutInstitutionInput[]
    createMany?: UserCreateManyInstitutionInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type EmployeeUpdateManyWithoutInstitutionNestedInput = {
    create?: XOR<EmployeeCreateWithoutInstitutionInput, EmployeeUncheckedCreateWithoutInstitutionInput> | EmployeeCreateWithoutInstitutionInput[] | EmployeeUncheckedCreateWithoutInstitutionInput[]
    connectOrCreate?: EmployeeCreateOrConnectWithoutInstitutionInput | EmployeeCreateOrConnectWithoutInstitutionInput[]
    upsert?: EmployeeUpsertWithWhereUniqueWithoutInstitutionInput | EmployeeUpsertWithWhereUniqueWithoutInstitutionInput[]
    createMany?: EmployeeCreateManyInstitutionInputEnvelope
    set?: EmployeeWhereUniqueInput | EmployeeWhereUniqueInput[]
    disconnect?: EmployeeWhereUniqueInput | EmployeeWhereUniqueInput[]
    delete?: EmployeeWhereUniqueInput | EmployeeWhereUniqueInput[]
    connect?: EmployeeWhereUniqueInput | EmployeeWhereUniqueInput[]
    update?: EmployeeUpdateWithWhereUniqueWithoutInstitutionInput | EmployeeUpdateWithWhereUniqueWithoutInstitutionInput[]
    updateMany?: EmployeeUpdateManyWithWhereWithoutInstitutionInput | EmployeeUpdateManyWithWhereWithoutInstitutionInput[]
    deleteMany?: EmployeeScalarWhereInput | EmployeeScalarWhereInput[]
  }

  export type UserUpdateManyWithoutInstitutionNestedInput = {
    create?: XOR<UserCreateWithoutInstitutionInput, UserUncheckedCreateWithoutInstitutionInput> | UserCreateWithoutInstitutionInput[] | UserUncheckedCreateWithoutInstitutionInput[]
    connectOrCreate?: UserCreateOrConnectWithoutInstitutionInput | UserCreateOrConnectWithoutInstitutionInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutInstitutionInput | UserUpsertWithWhereUniqueWithoutInstitutionInput[]
    createMany?: UserCreateManyInstitutionInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutInstitutionInput | UserUpdateWithWhereUniqueWithoutInstitutionInput[]
    updateMany?: UserUpdateManyWithWhereWithoutInstitutionInput | UserUpdateManyWithWhereWithoutInstitutionInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type EmployeeUncheckedUpdateManyWithoutInstitutionNestedInput = {
    create?: XOR<EmployeeCreateWithoutInstitutionInput, EmployeeUncheckedCreateWithoutInstitutionInput> | EmployeeCreateWithoutInstitutionInput[] | EmployeeUncheckedCreateWithoutInstitutionInput[]
    connectOrCreate?: EmployeeCreateOrConnectWithoutInstitutionInput | EmployeeCreateOrConnectWithoutInstitutionInput[]
    upsert?: EmployeeUpsertWithWhereUniqueWithoutInstitutionInput | EmployeeUpsertWithWhereUniqueWithoutInstitutionInput[]
    createMany?: EmployeeCreateManyInstitutionInputEnvelope
    set?: EmployeeWhereUniqueInput | EmployeeWhereUniqueInput[]
    disconnect?: EmployeeWhereUniqueInput | EmployeeWhereUniqueInput[]
    delete?: EmployeeWhereUniqueInput | EmployeeWhereUniqueInput[]
    connect?: EmployeeWhereUniqueInput | EmployeeWhereUniqueInput[]
    update?: EmployeeUpdateWithWhereUniqueWithoutInstitutionInput | EmployeeUpdateWithWhereUniqueWithoutInstitutionInput[]
    updateMany?: EmployeeUpdateManyWithWhereWithoutInstitutionInput | EmployeeUpdateManyWithWhereWithoutInstitutionInput[]
    deleteMany?: EmployeeScalarWhereInput | EmployeeScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutInstitutionNestedInput = {
    create?: XOR<UserCreateWithoutInstitutionInput, UserUncheckedCreateWithoutInstitutionInput> | UserCreateWithoutInstitutionInput[] | UserUncheckedCreateWithoutInstitutionInput[]
    connectOrCreate?: UserCreateOrConnectWithoutInstitutionInput | UserCreateOrConnectWithoutInstitutionInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutInstitutionInput | UserUpsertWithWhereUniqueWithoutInstitutionInput[]
    createMany?: UserCreateManyInstitutionInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutInstitutionInput | UserUpdateWithWhereUniqueWithoutInstitutionInput[]
    updateMany?: UserUpdateManyWithWhereWithoutInstitutionInput | UserUpdateManyWithWhereWithoutInstitutionInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type CadreChangeRequestCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<CadreChangeRequestCreateWithoutEmployeeInput, CadreChangeRequestUncheckedCreateWithoutEmployeeInput> | CadreChangeRequestCreateWithoutEmployeeInput[] | CadreChangeRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: CadreChangeRequestCreateOrConnectWithoutEmployeeInput | CadreChangeRequestCreateOrConnectWithoutEmployeeInput[]
    createMany?: CadreChangeRequestCreateManyEmployeeInputEnvelope
    connect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
  }

  export type ConfirmationRequestCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<ConfirmationRequestCreateWithoutEmployeeInput, ConfirmationRequestUncheckedCreateWithoutEmployeeInput> | ConfirmationRequestCreateWithoutEmployeeInput[] | ConfirmationRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: ConfirmationRequestCreateOrConnectWithoutEmployeeInput | ConfirmationRequestCreateOrConnectWithoutEmployeeInput[]
    createMany?: ConfirmationRequestCreateManyEmployeeInputEnvelope
    connect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
  }

  export type InstitutionCreateNestedOneWithoutEmployeesInput = {
    create?: XOR<InstitutionCreateWithoutEmployeesInput, InstitutionUncheckedCreateWithoutEmployeesInput>
    connectOrCreate?: InstitutionCreateOrConnectWithoutEmployeesInput
    connect?: InstitutionWhereUniqueInput
  }

  export type EmployeeCertificateCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<EmployeeCertificateCreateWithoutEmployeeInput, EmployeeCertificateUncheckedCreateWithoutEmployeeInput> | EmployeeCertificateCreateWithoutEmployeeInput[] | EmployeeCertificateUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: EmployeeCertificateCreateOrConnectWithoutEmployeeInput | EmployeeCertificateCreateOrConnectWithoutEmployeeInput[]
    createMany?: EmployeeCertificateCreateManyEmployeeInputEnvelope
    connect?: EmployeeCertificateWhereUniqueInput | EmployeeCertificateWhereUniqueInput[]
  }

  export type LwopRequestCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<LwopRequestCreateWithoutEmployeeInput, LwopRequestUncheckedCreateWithoutEmployeeInput> | LwopRequestCreateWithoutEmployeeInput[] | LwopRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: LwopRequestCreateOrConnectWithoutEmployeeInput | LwopRequestCreateOrConnectWithoutEmployeeInput[]
    createMany?: LwopRequestCreateManyEmployeeInputEnvelope
    connect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
  }

  export type PromotionRequestCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<PromotionRequestCreateWithoutEmployeeInput, PromotionRequestUncheckedCreateWithoutEmployeeInput> | PromotionRequestCreateWithoutEmployeeInput[] | PromotionRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: PromotionRequestCreateOrConnectWithoutEmployeeInput | PromotionRequestCreateOrConnectWithoutEmployeeInput[]
    createMany?: PromotionRequestCreateManyEmployeeInputEnvelope
    connect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
  }

  export type ResignationRequestCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<ResignationRequestCreateWithoutEmployeeInput, ResignationRequestUncheckedCreateWithoutEmployeeInput> | ResignationRequestCreateWithoutEmployeeInput[] | ResignationRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: ResignationRequestCreateOrConnectWithoutEmployeeInput | ResignationRequestCreateOrConnectWithoutEmployeeInput[]
    createMany?: ResignationRequestCreateManyEmployeeInputEnvelope
    connect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
  }

  export type RetirementRequestCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<RetirementRequestCreateWithoutEmployeeInput, RetirementRequestUncheckedCreateWithoutEmployeeInput> | RetirementRequestCreateWithoutEmployeeInput[] | RetirementRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: RetirementRequestCreateOrConnectWithoutEmployeeInput | RetirementRequestCreateOrConnectWithoutEmployeeInput[]
    createMany?: RetirementRequestCreateManyEmployeeInputEnvelope
    connect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
  }

  export type SeparationRequestCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<SeparationRequestCreateWithoutEmployeeInput, SeparationRequestUncheckedCreateWithoutEmployeeInput> | SeparationRequestCreateWithoutEmployeeInput[] | SeparationRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: SeparationRequestCreateOrConnectWithoutEmployeeInput | SeparationRequestCreateOrConnectWithoutEmployeeInput[]
    createMany?: SeparationRequestCreateManyEmployeeInputEnvelope
    connect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
  }

  export type ServiceExtensionRequestCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<ServiceExtensionRequestCreateWithoutEmployeeInput, ServiceExtensionRequestUncheckedCreateWithoutEmployeeInput> | ServiceExtensionRequestCreateWithoutEmployeeInput[] | ServiceExtensionRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: ServiceExtensionRequestCreateOrConnectWithoutEmployeeInput | ServiceExtensionRequestCreateOrConnectWithoutEmployeeInput[]
    createMany?: ServiceExtensionRequestCreateManyEmployeeInputEnvelope
    connect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutEmployeeInput = {
    create?: XOR<UserCreateWithoutEmployeeInput, UserUncheckedCreateWithoutEmployeeInput>
    connectOrCreate?: UserCreateOrConnectWithoutEmployeeInput
    connect?: UserWhereUniqueInput
  }

  export type CadreChangeRequestUncheckedCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<CadreChangeRequestCreateWithoutEmployeeInput, CadreChangeRequestUncheckedCreateWithoutEmployeeInput> | CadreChangeRequestCreateWithoutEmployeeInput[] | CadreChangeRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: CadreChangeRequestCreateOrConnectWithoutEmployeeInput | CadreChangeRequestCreateOrConnectWithoutEmployeeInput[]
    createMany?: CadreChangeRequestCreateManyEmployeeInputEnvelope
    connect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
  }

  export type ConfirmationRequestUncheckedCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<ConfirmationRequestCreateWithoutEmployeeInput, ConfirmationRequestUncheckedCreateWithoutEmployeeInput> | ConfirmationRequestCreateWithoutEmployeeInput[] | ConfirmationRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: ConfirmationRequestCreateOrConnectWithoutEmployeeInput | ConfirmationRequestCreateOrConnectWithoutEmployeeInput[]
    createMany?: ConfirmationRequestCreateManyEmployeeInputEnvelope
    connect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
  }

  export type EmployeeCertificateUncheckedCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<EmployeeCertificateCreateWithoutEmployeeInput, EmployeeCertificateUncheckedCreateWithoutEmployeeInput> | EmployeeCertificateCreateWithoutEmployeeInput[] | EmployeeCertificateUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: EmployeeCertificateCreateOrConnectWithoutEmployeeInput | EmployeeCertificateCreateOrConnectWithoutEmployeeInput[]
    createMany?: EmployeeCertificateCreateManyEmployeeInputEnvelope
    connect?: EmployeeCertificateWhereUniqueInput | EmployeeCertificateWhereUniqueInput[]
  }

  export type LwopRequestUncheckedCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<LwopRequestCreateWithoutEmployeeInput, LwopRequestUncheckedCreateWithoutEmployeeInput> | LwopRequestCreateWithoutEmployeeInput[] | LwopRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: LwopRequestCreateOrConnectWithoutEmployeeInput | LwopRequestCreateOrConnectWithoutEmployeeInput[]
    createMany?: LwopRequestCreateManyEmployeeInputEnvelope
    connect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
  }

  export type PromotionRequestUncheckedCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<PromotionRequestCreateWithoutEmployeeInput, PromotionRequestUncheckedCreateWithoutEmployeeInput> | PromotionRequestCreateWithoutEmployeeInput[] | PromotionRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: PromotionRequestCreateOrConnectWithoutEmployeeInput | PromotionRequestCreateOrConnectWithoutEmployeeInput[]
    createMany?: PromotionRequestCreateManyEmployeeInputEnvelope
    connect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
  }

  export type ResignationRequestUncheckedCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<ResignationRequestCreateWithoutEmployeeInput, ResignationRequestUncheckedCreateWithoutEmployeeInput> | ResignationRequestCreateWithoutEmployeeInput[] | ResignationRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: ResignationRequestCreateOrConnectWithoutEmployeeInput | ResignationRequestCreateOrConnectWithoutEmployeeInput[]
    createMany?: ResignationRequestCreateManyEmployeeInputEnvelope
    connect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
  }

  export type RetirementRequestUncheckedCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<RetirementRequestCreateWithoutEmployeeInput, RetirementRequestUncheckedCreateWithoutEmployeeInput> | RetirementRequestCreateWithoutEmployeeInput[] | RetirementRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: RetirementRequestCreateOrConnectWithoutEmployeeInput | RetirementRequestCreateOrConnectWithoutEmployeeInput[]
    createMany?: RetirementRequestCreateManyEmployeeInputEnvelope
    connect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
  }

  export type SeparationRequestUncheckedCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<SeparationRequestCreateWithoutEmployeeInput, SeparationRequestUncheckedCreateWithoutEmployeeInput> | SeparationRequestCreateWithoutEmployeeInput[] | SeparationRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: SeparationRequestCreateOrConnectWithoutEmployeeInput | SeparationRequestCreateOrConnectWithoutEmployeeInput[]
    createMany?: SeparationRequestCreateManyEmployeeInputEnvelope
    connect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
  }

  export type ServiceExtensionRequestUncheckedCreateNestedManyWithoutEmployeeInput = {
    create?: XOR<ServiceExtensionRequestCreateWithoutEmployeeInput, ServiceExtensionRequestUncheckedCreateWithoutEmployeeInput> | ServiceExtensionRequestCreateWithoutEmployeeInput[] | ServiceExtensionRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: ServiceExtensionRequestCreateOrConnectWithoutEmployeeInput | ServiceExtensionRequestCreateOrConnectWithoutEmployeeInput[]
    createMany?: ServiceExtensionRequestCreateManyEmployeeInputEnvelope
    connect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedOneWithoutEmployeeInput = {
    create?: XOR<UserCreateWithoutEmployeeInput, UserUncheckedCreateWithoutEmployeeInput>
    connectOrCreate?: UserCreateOrConnectWithoutEmployeeInput
    connect?: UserWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type CadreChangeRequestUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<CadreChangeRequestCreateWithoutEmployeeInput, CadreChangeRequestUncheckedCreateWithoutEmployeeInput> | CadreChangeRequestCreateWithoutEmployeeInput[] | CadreChangeRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: CadreChangeRequestCreateOrConnectWithoutEmployeeInput | CadreChangeRequestCreateOrConnectWithoutEmployeeInput[]
    upsert?: CadreChangeRequestUpsertWithWhereUniqueWithoutEmployeeInput | CadreChangeRequestUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: CadreChangeRequestCreateManyEmployeeInputEnvelope
    set?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    disconnect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    delete?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    connect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    update?: CadreChangeRequestUpdateWithWhereUniqueWithoutEmployeeInput | CadreChangeRequestUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: CadreChangeRequestUpdateManyWithWhereWithoutEmployeeInput | CadreChangeRequestUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: CadreChangeRequestScalarWhereInput | CadreChangeRequestScalarWhereInput[]
  }

  export type ConfirmationRequestUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<ConfirmationRequestCreateWithoutEmployeeInput, ConfirmationRequestUncheckedCreateWithoutEmployeeInput> | ConfirmationRequestCreateWithoutEmployeeInput[] | ConfirmationRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: ConfirmationRequestCreateOrConnectWithoutEmployeeInput | ConfirmationRequestCreateOrConnectWithoutEmployeeInput[]
    upsert?: ConfirmationRequestUpsertWithWhereUniqueWithoutEmployeeInput | ConfirmationRequestUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: ConfirmationRequestCreateManyEmployeeInputEnvelope
    set?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    disconnect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    delete?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    connect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    update?: ConfirmationRequestUpdateWithWhereUniqueWithoutEmployeeInput | ConfirmationRequestUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: ConfirmationRequestUpdateManyWithWhereWithoutEmployeeInput | ConfirmationRequestUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: ConfirmationRequestScalarWhereInput | ConfirmationRequestScalarWhereInput[]
  }

  export type InstitutionUpdateOneRequiredWithoutEmployeesNestedInput = {
    create?: XOR<InstitutionCreateWithoutEmployeesInput, InstitutionUncheckedCreateWithoutEmployeesInput>
    connectOrCreate?: InstitutionCreateOrConnectWithoutEmployeesInput
    upsert?: InstitutionUpsertWithoutEmployeesInput
    connect?: InstitutionWhereUniqueInput
    update?: XOR<XOR<InstitutionUpdateToOneWithWhereWithoutEmployeesInput, InstitutionUpdateWithoutEmployeesInput>, InstitutionUncheckedUpdateWithoutEmployeesInput>
  }

  export type EmployeeCertificateUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<EmployeeCertificateCreateWithoutEmployeeInput, EmployeeCertificateUncheckedCreateWithoutEmployeeInput> | EmployeeCertificateCreateWithoutEmployeeInput[] | EmployeeCertificateUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: EmployeeCertificateCreateOrConnectWithoutEmployeeInput | EmployeeCertificateCreateOrConnectWithoutEmployeeInput[]
    upsert?: EmployeeCertificateUpsertWithWhereUniqueWithoutEmployeeInput | EmployeeCertificateUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: EmployeeCertificateCreateManyEmployeeInputEnvelope
    set?: EmployeeCertificateWhereUniqueInput | EmployeeCertificateWhereUniqueInput[]
    disconnect?: EmployeeCertificateWhereUniqueInput | EmployeeCertificateWhereUniqueInput[]
    delete?: EmployeeCertificateWhereUniqueInput | EmployeeCertificateWhereUniqueInput[]
    connect?: EmployeeCertificateWhereUniqueInput | EmployeeCertificateWhereUniqueInput[]
    update?: EmployeeCertificateUpdateWithWhereUniqueWithoutEmployeeInput | EmployeeCertificateUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: EmployeeCertificateUpdateManyWithWhereWithoutEmployeeInput | EmployeeCertificateUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: EmployeeCertificateScalarWhereInput | EmployeeCertificateScalarWhereInput[]
  }

  export type LwopRequestUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<LwopRequestCreateWithoutEmployeeInput, LwopRequestUncheckedCreateWithoutEmployeeInput> | LwopRequestCreateWithoutEmployeeInput[] | LwopRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: LwopRequestCreateOrConnectWithoutEmployeeInput | LwopRequestCreateOrConnectWithoutEmployeeInput[]
    upsert?: LwopRequestUpsertWithWhereUniqueWithoutEmployeeInput | LwopRequestUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: LwopRequestCreateManyEmployeeInputEnvelope
    set?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    disconnect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    delete?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    connect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    update?: LwopRequestUpdateWithWhereUniqueWithoutEmployeeInput | LwopRequestUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: LwopRequestUpdateManyWithWhereWithoutEmployeeInput | LwopRequestUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: LwopRequestScalarWhereInput | LwopRequestScalarWhereInput[]
  }

  export type PromotionRequestUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<PromotionRequestCreateWithoutEmployeeInput, PromotionRequestUncheckedCreateWithoutEmployeeInput> | PromotionRequestCreateWithoutEmployeeInput[] | PromotionRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: PromotionRequestCreateOrConnectWithoutEmployeeInput | PromotionRequestCreateOrConnectWithoutEmployeeInput[]
    upsert?: PromotionRequestUpsertWithWhereUniqueWithoutEmployeeInput | PromotionRequestUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: PromotionRequestCreateManyEmployeeInputEnvelope
    set?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    disconnect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    delete?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    connect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    update?: PromotionRequestUpdateWithWhereUniqueWithoutEmployeeInput | PromotionRequestUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: PromotionRequestUpdateManyWithWhereWithoutEmployeeInput | PromotionRequestUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: PromotionRequestScalarWhereInput | PromotionRequestScalarWhereInput[]
  }

  export type ResignationRequestUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<ResignationRequestCreateWithoutEmployeeInput, ResignationRequestUncheckedCreateWithoutEmployeeInput> | ResignationRequestCreateWithoutEmployeeInput[] | ResignationRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: ResignationRequestCreateOrConnectWithoutEmployeeInput | ResignationRequestCreateOrConnectWithoutEmployeeInput[]
    upsert?: ResignationRequestUpsertWithWhereUniqueWithoutEmployeeInput | ResignationRequestUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: ResignationRequestCreateManyEmployeeInputEnvelope
    set?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    disconnect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    delete?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    connect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    update?: ResignationRequestUpdateWithWhereUniqueWithoutEmployeeInput | ResignationRequestUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: ResignationRequestUpdateManyWithWhereWithoutEmployeeInput | ResignationRequestUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: ResignationRequestScalarWhereInput | ResignationRequestScalarWhereInput[]
  }

  export type RetirementRequestUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<RetirementRequestCreateWithoutEmployeeInput, RetirementRequestUncheckedCreateWithoutEmployeeInput> | RetirementRequestCreateWithoutEmployeeInput[] | RetirementRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: RetirementRequestCreateOrConnectWithoutEmployeeInput | RetirementRequestCreateOrConnectWithoutEmployeeInput[]
    upsert?: RetirementRequestUpsertWithWhereUniqueWithoutEmployeeInput | RetirementRequestUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: RetirementRequestCreateManyEmployeeInputEnvelope
    set?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    disconnect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    delete?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    connect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    update?: RetirementRequestUpdateWithWhereUniqueWithoutEmployeeInput | RetirementRequestUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: RetirementRequestUpdateManyWithWhereWithoutEmployeeInput | RetirementRequestUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: RetirementRequestScalarWhereInput | RetirementRequestScalarWhereInput[]
  }

  export type SeparationRequestUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<SeparationRequestCreateWithoutEmployeeInput, SeparationRequestUncheckedCreateWithoutEmployeeInput> | SeparationRequestCreateWithoutEmployeeInput[] | SeparationRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: SeparationRequestCreateOrConnectWithoutEmployeeInput | SeparationRequestCreateOrConnectWithoutEmployeeInput[]
    upsert?: SeparationRequestUpsertWithWhereUniqueWithoutEmployeeInput | SeparationRequestUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: SeparationRequestCreateManyEmployeeInputEnvelope
    set?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    disconnect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    delete?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    connect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    update?: SeparationRequestUpdateWithWhereUniqueWithoutEmployeeInput | SeparationRequestUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: SeparationRequestUpdateManyWithWhereWithoutEmployeeInput | SeparationRequestUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: SeparationRequestScalarWhereInput | SeparationRequestScalarWhereInput[]
  }

  export type ServiceExtensionRequestUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<ServiceExtensionRequestCreateWithoutEmployeeInput, ServiceExtensionRequestUncheckedCreateWithoutEmployeeInput> | ServiceExtensionRequestCreateWithoutEmployeeInput[] | ServiceExtensionRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: ServiceExtensionRequestCreateOrConnectWithoutEmployeeInput | ServiceExtensionRequestCreateOrConnectWithoutEmployeeInput[]
    upsert?: ServiceExtensionRequestUpsertWithWhereUniqueWithoutEmployeeInput | ServiceExtensionRequestUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: ServiceExtensionRequestCreateManyEmployeeInputEnvelope
    set?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    disconnect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    delete?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    connect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    update?: ServiceExtensionRequestUpdateWithWhereUniqueWithoutEmployeeInput | ServiceExtensionRequestUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: ServiceExtensionRequestUpdateManyWithWhereWithoutEmployeeInput | ServiceExtensionRequestUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: ServiceExtensionRequestScalarWhereInput | ServiceExtensionRequestScalarWhereInput[]
  }

  export type UserUpdateOneWithoutEmployeeNestedInput = {
    create?: XOR<UserCreateWithoutEmployeeInput, UserUncheckedCreateWithoutEmployeeInput>
    connectOrCreate?: UserCreateOrConnectWithoutEmployeeInput
    upsert?: UserUpsertWithoutEmployeeInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEmployeeInput, UserUpdateWithoutEmployeeInput>, UserUncheckedUpdateWithoutEmployeeInput>
  }

  export type CadreChangeRequestUncheckedUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<CadreChangeRequestCreateWithoutEmployeeInput, CadreChangeRequestUncheckedCreateWithoutEmployeeInput> | CadreChangeRequestCreateWithoutEmployeeInput[] | CadreChangeRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: CadreChangeRequestCreateOrConnectWithoutEmployeeInput | CadreChangeRequestCreateOrConnectWithoutEmployeeInput[]
    upsert?: CadreChangeRequestUpsertWithWhereUniqueWithoutEmployeeInput | CadreChangeRequestUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: CadreChangeRequestCreateManyEmployeeInputEnvelope
    set?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    disconnect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    delete?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    connect?: CadreChangeRequestWhereUniqueInput | CadreChangeRequestWhereUniqueInput[]
    update?: CadreChangeRequestUpdateWithWhereUniqueWithoutEmployeeInput | CadreChangeRequestUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: CadreChangeRequestUpdateManyWithWhereWithoutEmployeeInput | CadreChangeRequestUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: CadreChangeRequestScalarWhereInput | CadreChangeRequestScalarWhereInput[]
  }

  export type ConfirmationRequestUncheckedUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<ConfirmationRequestCreateWithoutEmployeeInput, ConfirmationRequestUncheckedCreateWithoutEmployeeInput> | ConfirmationRequestCreateWithoutEmployeeInput[] | ConfirmationRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: ConfirmationRequestCreateOrConnectWithoutEmployeeInput | ConfirmationRequestCreateOrConnectWithoutEmployeeInput[]
    upsert?: ConfirmationRequestUpsertWithWhereUniqueWithoutEmployeeInput | ConfirmationRequestUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: ConfirmationRequestCreateManyEmployeeInputEnvelope
    set?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    disconnect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    delete?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    connect?: ConfirmationRequestWhereUniqueInput | ConfirmationRequestWhereUniqueInput[]
    update?: ConfirmationRequestUpdateWithWhereUniqueWithoutEmployeeInput | ConfirmationRequestUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: ConfirmationRequestUpdateManyWithWhereWithoutEmployeeInput | ConfirmationRequestUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: ConfirmationRequestScalarWhereInput | ConfirmationRequestScalarWhereInput[]
  }

  export type EmployeeCertificateUncheckedUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<EmployeeCertificateCreateWithoutEmployeeInput, EmployeeCertificateUncheckedCreateWithoutEmployeeInput> | EmployeeCertificateCreateWithoutEmployeeInput[] | EmployeeCertificateUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: EmployeeCertificateCreateOrConnectWithoutEmployeeInput | EmployeeCertificateCreateOrConnectWithoutEmployeeInput[]
    upsert?: EmployeeCertificateUpsertWithWhereUniqueWithoutEmployeeInput | EmployeeCertificateUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: EmployeeCertificateCreateManyEmployeeInputEnvelope
    set?: EmployeeCertificateWhereUniqueInput | EmployeeCertificateWhereUniqueInput[]
    disconnect?: EmployeeCertificateWhereUniqueInput | EmployeeCertificateWhereUniqueInput[]
    delete?: EmployeeCertificateWhereUniqueInput | EmployeeCertificateWhereUniqueInput[]
    connect?: EmployeeCertificateWhereUniqueInput | EmployeeCertificateWhereUniqueInput[]
    update?: EmployeeCertificateUpdateWithWhereUniqueWithoutEmployeeInput | EmployeeCertificateUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: EmployeeCertificateUpdateManyWithWhereWithoutEmployeeInput | EmployeeCertificateUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: EmployeeCertificateScalarWhereInput | EmployeeCertificateScalarWhereInput[]
  }

  export type LwopRequestUncheckedUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<LwopRequestCreateWithoutEmployeeInput, LwopRequestUncheckedCreateWithoutEmployeeInput> | LwopRequestCreateWithoutEmployeeInput[] | LwopRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: LwopRequestCreateOrConnectWithoutEmployeeInput | LwopRequestCreateOrConnectWithoutEmployeeInput[]
    upsert?: LwopRequestUpsertWithWhereUniqueWithoutEmployeeInput | LwopRequestUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: LwopRequestCreateManyEmployeeInputEnvelope
    set?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    disconnect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    delete?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    connect?: LwopRequestWhereUniqueInput | LwopRequestWhereUniqueInput[]
    update?: LwopRequestUpdateWithWhereUniqueWithoutEmployeeInput | LwopRequestUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: LwopRequestUpdateManyWithWhereWithoutEmployeeInput | LwopRequestUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: LwopRequestScalarWhereInput | LwopRequestScalarWhereInput[]
  }

  export type PromotionRequestUncheckedUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<PromotionRequestCreateWithoutEmployeeInput, PromotionRequestUncheckedCreateWithoutEmployeeInput> | PromotionRequestCreateWithoutEmployeeInput[] | PromotionRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: PromotionRequestCreateOrConnectWithoutEmployeeInput | PromotionRequestCreateOrConnectWithoutEmployeeInput[]
    upsert?: PromotionRequestUpsertWithWhereUniqueWithoutEmployeeInput | PromotionRequestUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: PromotionRequestCreateManyEmployeeInputEnvelope
    set?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    disconnect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    delete?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    connect?: PromotionRequestWhereUniqueInput | PromotionRequestWhereUniqueInput[]
    update?: PromotionRequestUpdateWithWhereUniqueWithoutEmployeeInput | PromotionRequestUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: PromotionRequestUpdateManyWithWhereWithoutEmployeeInput | PromotionRequestUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: PromotionRequestScalarWhereInput | PromotionRequestScalarWhereInput[]
  }

  export type ResignationRequestUncheckedUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<ResignationRequestCreateWithoutEmployeeInput, ResignationRequestUncheckedCreateWithoutEmployeeInput> | ResignationRequestCreateWithoutEmployeeInput[] | ResignationRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: ResignationRequestCreateOrConnectWithoutEmployeeInput | ResignationRequestCreateOrConnectWithoutEmployeeInput[]
    upsert?: ResignationRequestUpsertWithWhereUniqueWithoutEmployeeInput | ResignationRequestUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: ResignationRequestCreateManyEmployeeInputEnvelope
    set?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    disconnect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    delete?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    connect?: ResignationRequestWhereUniqueInput | ResignationRequestWhereUniqueInput[]
    update?: ResignationRequestUpdateWithWhereUniqueWithoutEmployeeInput | ResignationRequestUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: ResignationRequestUpdateManyWithWhereWithoutEmployeeInput | ResignationRequestUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: ResignationRequestScalarWhereInput | ResignationRequestScalarWhereInput[]
  }

  export type RetirementRequestUncheckedUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<RetirementRequestCreateWithoutEmployeeInput, RetirementRequestUncheckedCreateWithoutEmployeeInput> | RetirementRequestCreateWithoutEmployeeInput[] | RetirementRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: RetirementRequestCreateOrConnectWithoutEmployeeInput | RetirementRequestCreateOrConnectWithoutEmployeeInput[]
    upsert?: RetirementRequestUpsertWithWhereUniqueWithoutEmployeeInput | RetirementRequestUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: RetirementRequestCreateManyEmployeeInputEnvelope
    set?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    disconnect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    delete?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    connect?: RetirementRequestWhereUniqueInput | RetirementRequestWhereUniqueInput[]
    update?: RetirementRequestUpdateWithWhereUniqueWithoutEmployeeInput | RetirementRequestUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: RetirementRequestUpdateManyWithWhereWithoutEmployeeInput | RetirementRequestUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: RetirementRequestScalarWhereInput | RetirementRequestScalarWhereInput[]
  }

  export type SeparationRequestUncheckedUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<SeparationRequestCreateWithoutEmployeeInput, SeparationRequestUncheckedCreateWithoutEmployeeInput> | SeparationRequestCreateWithoutEmployeeInput[] | SeparationRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: SeparationRequestCreateOrConnectWithoutEmployeeInput | SeparationRequestCreateOrConnectWithoutEmployeeInput[]
    upsert?: SeparationRequestUpsertWithWhereUniqueWithoutEmployeeInput | SeparationRequestUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: SeparationRequestCreateManyEmployeeInputEnvelope
    set?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    disconnect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    delete?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    connect?: SeparationRequestWhereUniqueInput | SeparationRequestWhereUniqueInput[]
    update?: SeparationRequestUpdateWithWhereUniqueWithoutEmployeeInput | SeparationRequestUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: SeparationRequestUpdateManyWithWhereWithoutEmployeeInput | SeparationRequestUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: SeparationRequestScalarWhereInput | SeparationRequestScalarWhereInput[]
  }

  export type ServiceExtensionRequestUncheckedUpdateManyWithoutEmployeeNestedInput = {
    create?: XOR<ServiceExtensionRequestCreateWithoutEmployeeInput, ServiceExtensionRequestUncheckedCreateWithoutEmployeeInput> | ServiceExtensionRequestCreateWithoutEmployeeInput[] | ServiceExtensionRequestUncheckedCreateWithoutEmployeeInput[]
    connectOrCreate?: ServiceExtensionRequestCreateOrConnectWithoutEmployeeInput | ServiceExtensionRequestCreateOrConnectWithoutEmployeeInput[]
    upsert?: ServiceExtensionRequestUpsertWithWhereUniqueWithoutEmployeeInput | ServiceExtensionRequestUpsertWithWhereUniqueWithoutEmployeeInput[]
    createMany?: ServiceExtensionRequestCreateManyEmployeeInputEnvelope
    set?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    disconnect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    delete?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    connect?: ServiceExtensionRequestWhereUniqueInput | ServiceExtensionRequestWhereUniqueInput[]
    update?: ServiceExtensionRequestUpdateWithWhereUniqueWithoutEmployeeInput | ServiceExtensionRequestUpdateWithWhereUniqueWithoutEmployeeInput[]
    updateMany?: ServiceExtensionRequestUpdateManyWithWhereWithoutEmployeeInput | ServiceExtensionRequestUpdateManyWithWhereWithoutEmployeeInput[]
    deleteMany?: ServiceExtensionRequestScalarWhereInput | ServiceExtensionRequestScalarWhereInput[]
  }

  export type UserUncheckedUpdateOneWithoutEmployeeNestedInput = {
    create?: XOR<UserCreateWithoutEmployeeInput, UserUncheckedCreateWithoutEmployeeInput>
    connectOrCreate?: UserCreateOrConnectWithoutEmployeeInput
    upsert?: UserUpsertWithoutEmployeeInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEmployeeInput, UserUpdateWithoutEmployeeInput>, UserUncheckedUpdateWithoutEmployeeInput>
  }

  export type EmployeeCreateNestedOneWithoutCertificatesInput = {
    create?: XOR<EmployeeCreateWithoutCertificatesInput, EmployeeUncheckedCreateWithoutCertificatesInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutCertificatesInput
    connect?: EmployeeWhereUniqueInput
  }

  export type EmployeeUpdateOneRequiredWithoutCertificatesNestedInput = {
    create?: XOR<EmployeeCreateWithoutCertificatesInput, EmployeeUncheckedCreateWithoutCertificatesInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutCertificatesInput
    upsert?: EmployeeUpsertWithoutCertificatesInput
    connect?: EmployeeWhereUniqueInput
    update?: XOR<XOR<EmployeeUpdateToOneWithWhereWithoutCertificatesInput, EmployeeUpdateWithoutCertificatesInput>, EmployeeUncheckedUpdateWithoutCertificatesInput>
  }

  export type ConfirmationRequestCreatedocumentsInput = {
    set: string[]
  }

  export type EmployeeCreateNestedOneWithoutConfirmationRequestsInput = {
    create?: XOR<EmployeeCreateWithoutConfirmationRequestsInput, EmployeeUncheckedCreateWithoutConfirmationRequestsInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutConfirmationRequestsInput
    connect?: EmployeeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReviewedConfirmationsInput = {
    create?: XOR<UserCreateWithoutReviewedConfirmationsInput, UserUncheckedCreateWithoutReviewedConfirmationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedConfirmationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSubmittedConfirmationsInput = {
    create?: XOR<UserCreateWithoutSubmittedConfirmationsInput, UserUncheckedCreateWithoutSubmittedConfirmationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedConfirmationsInput
    connect?: UserWhereUniqueInput
  }

  export type ConfirmationRequestUpdatedocumentsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EmployeeUpdateOneRequiredWithoutConfirmationRequestsNestedInput = {
    create?: XOR<EmployeeCreateWithoutConfirmationRequestsInput, EmployeeUncheckedCreateWithoutConfirmationRequestsInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutConfirmationRequestsInput
    upsert?: EmployeeUpsertWithoutConfirmationRequestsInput
    connect?: EmployeeWhereUniqueInput
    update?: XOR<XOR<EmployeeUpdateToOneWithWhereWithoutConfirmationRequestsInput, EmployeeUpdateWithoutConfirmationRequestsInput>, EmployeeUncheckedUpdateWithoutConfirmationRequestsInput>
  }

  export type UserUpdateOneWithoutReviewedConfirmationsNestedInput = {
    create?: XOR<UserCreateWithoutReviewedConfirmationsInput, UserUncheckedCreateWithoutReviewedConfirmationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedConfirmationsInput
    upsert?: UserUpsertWithoutReviewedConfirmationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewedConfirmationsInput, UserUpdateWithoutReviewedConfirmationsInput>, UserUncheckedUpdateWithoutReviewedConfirmationsInput>
  }

  export type UserUpdateOneRequiredWithoutSubmittedConfirmationsNestedInput = {
    create?: XOR<UserCreateWithoutSubmittedConfirmationsInput, UserUncheckedCreateWithoutSubmittedConfirmationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedConfirmationsInput
    upsert?: UserUpsertWithoutSubmittedConfirmationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSubmittedConfirmationsInput, UserUpdateWithoutSubmittedConfirmationsInput>, UserUncheckedUpdateWithoutSubmittedConfirmationsInput>
  }

  export type PromotionRequestCreatedocumentsInput = {
    set: string[]
  }

  export type EmployeeCreateNestedOneWithoutPromotionRequestsInput = {
    create?: XOR<EmployeeCreateWithoutPromotionRequestsInput, EmployeeUncheckedCreateWithoutPromotionRequestsInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutPromotionRequestsInput
    connect?: EmployeeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReviewedPromotionsInput = {
    create?: XOR<UserCreateWithoutReviewedPromotionsInput, UserUncheckedCreateWithoutReviewedPromotionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedPromotionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSubmittedPromotionsInput = {
    create?: XOR<UserCreateWithoutSubmittedPromotionsInput, UserUncheckedCreateWithoutSubmittedPromotionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedPromotionsInput
    connect?: UserWhereUniqueInput
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type PromotionRequestUpdatedocumentsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EmployeeUpdateOneRequiredWithoutPromotionRequestsNestedInput = {
    create?: XOR<EmployeeCreateWithoutPromotionRequestsInput, EmployeeUncheckedCreateWithoutPromotionRequestsInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutPromotionRequestsInput
    upsert?: EmployeeUpsertWithoutPromotionRequestsInput
    connect?: EmployeeWhereUniqueInput
    update?: XOR<XOR<EmployeeUpdateToOneWithWhereWithoutPromotionRequestsInput, EmployeeUpdateWithoutPromotionRequestsInput>, EmployeeUncheckedUpdateWithoutPromotionRequestsInput>
  }

  export type UserUpdateOneWithoutReviewedPromotionsNestedInput = {
    create?: XOR<UserCreateWithoutReviewedPromotionsInput, UserUncheckedCreateWithoutReviewedPromotionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedPromotionsInput
    upsert?: UserUpsertWithoutReviewedPromotionsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewedPromotionsInput, UserUpdateWithoutReviewedPromotionsInput>, UserUncheckedUpdateWithoutReviewedPromotionsInput>
  }

  export type UserUpdateOneRequiredWithoutSubmittedPromotionsNestedInput = {
    create?: XOR<UserCreateWithoutSubmittedPromotionsInput, UserUncheckedCreateWithoutSubmittedPromotionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedPromotionsInput
    upsert?: UserUpsertWithoutSubmittedPromotionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSubmittedPromotionsInput, UserUpdateWithoutSubmittedPromotionsInput>, UserUncheckedUpdateWithoutSubmittedPromotionsInput>
  }

  export type LwopRequestCreatedocumentsInput = {
    set: string[]
  }

  export type EmployeeCreateNestedOneWithoutLwopRequestsInput = {
    create?: XOR<EmployeeCreateWithoutLwopRequestsInput, EmployeeUncheckedCreateWithoutLwopRequestsInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutLwopRequestsInput
    connect?: EmployeeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReviewedLWOPsInput = {
    create?: XOR<UserCreateWithoutReviewedLWOPsInput, UserUncheckedCreateWithoutReviewedLWOPsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedLWOPsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSubmittedLWOPsInput = {
    create?: XOR<UserCreateWithoutSubmittedLWOPsInput, UserUncheckedCreateWithoutSubmittedLWOPsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedLWOPsInput
    connect?: UserWhereUniqueInput
  }

  export type LwopRequestUpdatedocumentsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EmployeeUpdateOneRequiredWithoutLwopRequestsNestedInput = {
    create?: XOR<EmployeeCreateWithoutLwopRequestsInput, EmployeeUncheckedCreateWithoutLwopRequestsInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutLwopRequestsInput
    upsert?: EmployeeUpsertWithoutLwopRequestsInput
    connect?: EmployeeWhereUniqueInput
    update?: XOR<XOR<EmployeeUpdateToOneWithWhereWithoutLwopRequestsInput, EmployeeUpdateWithoutLwopRequestsInput>, EmployeeUncheckedUpdateWithoutLwopRequestsInput>
  }

  export type UserUpdateOneWithoutReviewedLWOPsNestedInput = {
    create?: XOR<UserCreateWithoutReviewedLWOPsInput, UserUncheckedCreateWithoutReviewedLWOPsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedLWOPsInput
    upsert?: UserUpsertWithoutReviewedLWOPsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewedLWOPsInput, UserUpdateWithoutReviewedLWOPsInput>, UserUncheckedUpdateWithoutReviewedLWOPsInput>
  }

  export type UserUpdateOneRequiredWithoutSubmittedLWOPsNestedInput = {
    create?: XOR<UserCreateWithoutSubmittedLWOPsInput, UserUncheckedCreateWithoutSubmittedLWOPsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedLWOPsInput
    upsert?: UserUpsertWithoutSubmittedLWOPsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSubmittedLWOPsInput, UserUpdateWithoutSubmittedLWOPsInput>, UserUncheckedUpdateWithoutSubmittedLWOPsInput>
  }

  export type CadreChangeRequestCreatedocumentsInput = {
    set: string[]
  }

  export type EmployeeCreateNestedOneWithoutCadreChangeRequestsInput = {
    create?: XOR<EmployeeCreateWithoutCadreChangeRequestsInput, EmployeeUncheckedCreateWithoutCadreChangeRequestsInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutCadreChangeRequestsInput
    connect?: EmployeeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReviewedCadreChangesInput = {
    create?: XOR<UserCreateWithoutReviewedCadreChangesInput, UserUncheckedCreateWithoutReviewedCadreChangesInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedCadreChangesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSubmittedCadreChangesInput = {
    create?: XOR<UserCreateWithoutSubmittedCadreChangesInput, UserUncheckedCreateWithoutSubmittedCadreChangesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedCadreChangesInput
    connect?: UserWhereUniqueInput
  }

  export type CadreChangeRequestUpdatedocumentsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EmployeeUpdateOneRequiredWithoutCadreChangeRequestsNestedInput = {
    create?: XOR<EmployeeCreateWithoutCadreChangeRequestsInput, EmployeeUncheckedCreateWithoutCadreChangeRequestsInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutCadreChangeRequestsInput
    upsert?: EmployeeUpsertWithoutCadreChangeRequestsInput
    connect?: EmployeeWhereUniqueInput
    update?: XOR<XOR<EmployeeUpdateToOneWithWhereWithoutCadreChangeRequestsInput, EmployeeUpdateWithoutCadreChangeRequestsInput>, EmployeeUncheckedUpdateWithoutCadreChangeRequestsInput>
  }

  export type UserUpdateOneWithoutReviewedCadreChangesNestedInput = {
    create?: XOR<UserCreateWithoutReviewedCadreChangesInput, UserUncheckedCreateWithoutReviewedCadreChangesInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedCadreChangesInput
    upsert?: UserUpsertWithoutReviewedCadreChangesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewedCadreChangesInput, UserUpdateWithoutReviewedCadreChangesInput>, UserUncheckedUpdateWithoutReviewedCadreChangesInput>
  }

  export type UserUpdateOneRequiredWithoutSubmittedCadreChangesNestedInput = {
    create?: XOR<UserCreateWithoutSubmittedCadreChangesInput, UserUncheckedCreateWithoutSubmittedCadreChangesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedCadreChangesInput
    upsert?: UserUpsertWithoutSubmittedCadreChangesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSubmittedCadreChangesInput, UserUpdateWithoutSubmittedCadreChangesInput>, UserUncheckedUpdateWithoutSubmittedCadreChangesInput>
  }

  export type RetirementRequestCreatedocumentsInput = {
    set: string[]
  }

  export type EmployeeCreateNestedOneWithoutRetirementRequestsInput = {
    create?: XOR<EmployeeCreateWithoutRetirementRequestsInput, EmployeeUncheckedCreateWithoutRetirementRequestsInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutRetirementRequestsInput
    connect?: EmployeeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReviewedRetirementsInput = {
    create?: XOR<UserCreateWithoutReviewedRetirementsInput, UserUncheckedCreateWithoutReviewedRetirementsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedRetirementsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSubmittedRetirementsInput = {
    create?: XOR<UserCreateWithoutSubmittedRetirementsInput, UserUncheckedCreateWithoutSubmittedRetirementsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedRetirementsInput
    connect?: UserWhereUniqueInput
  }

  export type RetirementRequestUpdatedocumentsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EmployeeUpdateOneRequiredWithoutRetirementRequestsNestedInput = {
    create?: XOR<EmployeeCreateWithoutRetirementRequestsInput, EmployeeUncheckedCreateWithoutRetirementRequestsInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutRetirementRequestsInput
    upsert?: EmployeeUpsertWithoutRetirementRequestsInput
    connect?: EmployeeWhereUniqueInput
    update?: XOR<XOR<EmployeeUpdateToOneWithWhereWithoutRetirementRequestsInput, EmployeeUpdateWithoutRetirementRequestsInput>, EmployeeUncheckedUpdateWithoutRetirementRequestsInput>
  }

  export type UserUpdateOneWithoutReviewedRetirementsNestedInput = {
    create?: XOR<UserCreateWithoutReviewedRetirementsInput, UserUncheckedCreateWithoutReviewedRetirementsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedRetirementsInput
    upsert?: UserUpsertWithoutReviewedRetirementsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewedRetirementsInput, UserUpdateWithoutReviewedRetirementsInput>, UserUncheckedUpdateWithoutReviewedRetirementsInput>
  }

  export type UserUpdateOneRequiredWithoutSubmittedRetirementsNestedInput = {
    create?: XOR<UserCreateWithoutSubmittedRetirementsInput, UserUncheckedCreateWithoutSubmittedRetirementsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedRetirementsInput
    upsert?: UserUpsertWithoutSubmittedRetirementsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSubmittedRetirementsInput, UserUpdateWithoutSubmittedRetirementsInput>, UserUncheckedUpdateWithoutSubmittedRetirementsInput>
  }

  export type ResignationRequestCreatedocumentsInput = {
    set: string[]
  }

  export type EmployeeCreateNestedOneWithoutResignationRequestsInput = {
    create?: XOR<EmployeeCreateWithoutResignationRequestsInput, EmployeeUncheckedCreateWithoutResignationRequestsInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutResignationRequestsInput
    connect?: EmployeeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReviewedResignationsInput = {
    create?: XOR<UserCreateWithoutReviewedResignationsInput, UserUncheckedCreateWithoutReviewedResignationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedResignationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSubmittedResignationsInput = {
    create?: XOR<UserCreateWithoutSubmittedResignationsInput, UserUncheckedCreateWithoutSubmittedResignationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedResignationsInput
    connect?: UserWhereUniqueInput
  }

  export type ResignationRequestUpdatedocumentsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EmployeeUpdateOneRequiredWithoutResignationRequestsNestedInput = {
    create?: XOR<EmployeeCreateWithoutResignationRequestsInput, EmployeeUncheckedCreateWithoutResignationRequestsInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutResignationRequestsInput
    upsert?: EmployeeUpsertWithoutResignationRequestsInput
    connect?: EmployeeWhereUniqueInput
    update?: XOR<XOR<EmployeeUpdateToOneWithWhereWithoutResignationRequestsInput, EmployeeUpdateWithoutResignationRequestsInput>, EmployeeUncheckedUpdateWithoutResignationRequestsInput>
  }

  export type UserUpdateOneWithoutReviewedResignationsNestedInput = {
    create?: XOR<UserCreateWithoutReviewedResignationsInput, UserUncheckedCreateWithoutReviewedResignationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedResignationsInput
    upsert?: UserUpsertWithoutReviewedResignationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewedResignationsInput, UserUpdateWithoutReviewedResignationsInput>, UserUncheckedUpdateWithoutReviewedResignationsInput>
  }

  export type UserUpdateOneRequiredWithoutSubmittedResignationsNestedInput = {
    create?: XOR<UserCreateWithoutSubmittedResignationsInput, UserUncheckedCreateWithoutSubmittedResignationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedResignationsInput
    upsert?: UserUpsertWithoutSubmittedResignationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSubmittedResignationsInput, UserUpdateWithoutSubmittedResignationsInput>, UserUncheckedUpdateWithoutSubmittedResignationsInput>
  }

  export type ServiceExtensionRequestCreatedocumentsInput = {
    set: string[]
  }

  export type EmployeeCreateNestedOneWithoutServiceExtensionRequestsInput = {
    create?: XOR<EmployeeCreateWithoutServiceExtensionRequestsInput, EmployeeUncheckedCreateWithoutServiceExtensionRequestsInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutServiceExtensionRequestsInput
    connect?: EmployeeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReviewedServiceExtensionsInput = {
    create?: XOR<UserCreateWithoutReviewedServiceExtensionsInput, UserUncheckedCreateWithoutReviewedServiceExtensionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedServiceExtensionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSubmittedServiceExtensionsInput = {
    create?: XOR<UserCreateWithoutSubmittedServiceExtensionsInput, UserUncheckedCreateWithoutSubmittedServiceExtensionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedServiceExtensionsInput
    connect?: UserWhereUniqueInput
  }

  export type ServiceExtensionRequestUpdatedocumentsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EmployeeUpdateOneRequiredWithoutServiceExtensionRequestsNestedInput = {
    create?: XOR<EmployeeCreateWithoutServiceExtensionRequestsInput, EmployeeUncheckedCreateWithoutServiceExtensionRequestsInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutServiceExtensionRequestsInput
    upsert?: EmployeeUpsertWithoutServiceExtensionRequestsInput
    connect?: EmployeeWhereUniqueInput
    update?: XOR<XOR<EmployeeUpdateToOneWithWhereWithoutServiceExtensionRequestsInput, EmployeeUpdateWithoutServiceExtensionRequestsInput>, EmployeeUncheckedUpdateWithoutServiceExtensionRequestsInput>
  }

  export type UserUpdateOneWithoutReviewedServiceExtensionsNestedInput = {
    create?: XOR<UserCreateWithoutReviewedServiceExtensionsInput, UserUncheckedCreateWithoutReviewedServiceExtensionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedServiceExtensionsInput
    upsert?: UserUpsertWithoutReviewedServiceExtensionsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewedServiceExtensionsInput, UserUpdateWithoutReviewedServiceExtensionsInput>, UserUncheckedUpdateWithoutReviewedServiceExtensionsInput>
  }

  export type UserUpdateOneRequiredWithoutSubmittedServiceExtensionsNestedInput = {
    create?: XOR<UserCreateWithoutSubmittedServiceExtensionsInput, UserUncheckedCreateWithoutSubmittedServiceExtensionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedServiceExtensionsInput
    upsert?: UserUpsertWithoutSubmittedServiceExtensionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSubmittedServiceExtensionsInput, UserUpdateWithoutSubmittedServiceExtensionsInput>, UserUncheckedUpdateWithoutSubmittedServiceExtensionsInput>
  }

  export type SeparationRequestCreatedocumentsInput = {
    set: string[]
  }

  export type EmployeeCreateNestedOneWithoutSeparationRequestsInput = {
    create?: XOR<EmployeeCreateWithoutSeparationRequestsInput, EmployeeUncheckedCreateWithoutSeparationRequestsInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutSeparationRequestsInput
    connect?: EmployeeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReviewedSeparationsInput = {
    create?: XOR<UserCreateWithoutReviewedSeparationsInput, UserUncheckedCreateWithoutReviewedSeparationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedSeparationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSubmittedSeparationsInput = {
    create?: XOR<UserCreateWithoutSubmittedSeparationsInput, UserUncheckedCreateWithoutSubmittedSeparationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedSeparationsInput
    connect?: UserWhereUniqueInput
  }

  export type SeparationRequestUpdatedocumentsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EmployeeUpdateOneRequiredWithoutSeparationRequestsNestedInput = {
    create?: XOR<EmployeeCreateWithoutSeparationRequestsInput, EmployeeUncheckedCreateWithoutSeparationRequestsInput>
    connectOrCreate?: EmployeeCreateOrConnectWithoutSeparationRequestsInput
    upsert?: EmployeeUpsertWithoutSeparationRequestsInput
    connect?: EmployeeWhereUniqueInput
    update?: XOR<XOR<EmployeeUpdateToOneWithWhereWithoutSeparationRequestsInput, EmployeeUpdateWithoutSeparationRequestsInput>, EmployeeUncheckedUpdateWithoutSeparationRequestsInput>
  }

  export type UserUpdateOneWithoutReviewedSeparationsNestedInput = {
    create?: XOR<UserCreateWithoutReviewedSeparationsInput, UserUncheckedCreateWithoutReviewedSeparationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedSeparationsInput
    upsert?: UserUpsertWithoutReviewedSeparationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewedSeparationsInput, UserUpdateWithoutReviewedSeparationsInput>, UserUncheckedUpdateWithoutReviewedSeparationsInput>
  }

  export type UserUpdateOneRequiredWithoutSubmittedSeparationsNestedInput = {
    create?: XOR<UserCreateWithoutSubmittedSeparationsInput, UserUncheckedCreateWithoutSubmittedSeparationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedSeparationsInput
    upsert?: UserUpsertWithoutSubmittedSeparationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSubmittedSeparationsInput, UserUpdateWithoutSubmittedSeparationsInput>, UserUncheckedUpdateWithoutSubmittedSeparationsInput>
  }

  export type ComplaintCreateattachmentsInput = {
    set: string[]
  }

  export type UserCreateNestedOneWithoutComplaintsInput = {
    create?: XOR<UserCreateWithoutComplaintsInput, UserUncheckedCreateWithoutComplaintsInput>
    connectOrCreate?: UserCreateOrConnectWithoutComplaintsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReviewedComplaintsInput = {
    create?: XOR<UserCreateWithoutReviewedComplaintsInput, UserUncheckedCreateWithoutReviewedComplaintsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedComplaintsInput
    connect?: UserWhereUniqueInput
  }

  export type ComplaintUpdateattachmentsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type UserUpdateOneRequiredWithoutComplaintsNestedInput = {
    create?: XOR<UserCreateWithoutComplaintsInput, UserUncheckedCreateWithoutComplaintsInput>
    connectOrCreate?: UserCreateOrConnectWithoutComplaintsInput
    upsert?: UserUpsertWithoutComplaintsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutComplaintsInput, UserUpdateWithoutComplaintsInput>, UserUncheckedUpdateWithoutComplaintsInput>
  }

  export type UserUpdateOneWithoutReviewedComplaintsNestedInput = {
    create?: XOR<UserCreateWithoutReviewedComplaintsInput, UserUncheckedCreateWithoutReviewedComplaintsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedComplaintsInput
    upsert?: UserUpsertWithoutReviewedComplaintsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewedComplaintsInput, UserUpdateWithoutReviewedComplaintsInput>, UserUncheckedUpdateWithoutReviewedComplaintsInput>
  }

  export type UserCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutNotificationsNestedInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    upsert?: UserUpsertWithoutNotificationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotificationsInput, UserUpdateWithoutNotificationsInput>, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type CadreChangeRequestCreateWithoutReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    newCadre: string
    reason?: string | null
    studiedOutsideCountry?: boolean | null
    documents?: CadreChangeRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutCadreChangeRequestsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedCadreChangesInput
  }

  export type CadreChangeRequestUncheckedCreateWithoutReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    newCadre: string
    reason?: string | null
    studiedOutsideCountry?: boolean | null
    documents?: CadreChangeRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CadreChangeRequestCreateOrConnectWithoutReviewedByInput = {
    where: CadreChangeRequestWhereUniqueInput
    create: XOR<CadreChangeRequestCreateWithoutReviewedByInput, CadreChangeRequestUncheckedCreateWithoutReviewedByInput>
  }

  export type CadreChangeRequestCreateManyReviewedByInputEnvelope = {
    data: CadreChangeRequestCreateManyReviewedByInput | CadreChangeRequestCreateManyReviewedByInput[]
    skipDuplicates?: boolean
  }

  export type CadreChangeRequestCreateWithoutSubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    newCadre: string
    reason?: string | null
    studiedOutsideCountry?: boolean | null
    documents?: CadreChangeRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutCadreChangeRequestsInput
    reviewedBy?: UserCreateNestedOneWithoutReviewedCadreChangesInput
  }

  export type CadreChangeRequestUncheckedCreateWithoutSubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    newCadre: string
    reason?: string | null
    studiedOutsideCountry?: boolean | null
    documents?: CadreChangeRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CadreChangeRequestCreateOrConnectWithoutSubmittedByInput = {
    where: CadreChangeRequestWhereUniqueInput
    create: XOR<CadreChangeRequestCreateWithoutSubmittedByInput, CadreChangeRequestUncheckedCreateWithoutSubmittedByInput>
  }

  export type CadreChangeRequestCreateManySubmittedByInputEnvelope = {
    data: CadreChangeRequestCreateManySubmittedByInput | CadreChangeRequestCreateManySubmittedByInput[]
    skipDuplicates?: boolean
  }

  export type ComplaintCreateWithoutComplainantInput = {
    id?: string
    complaintType: string
    subject: string
    details: string
    complainantPhoneNumber: string
    nextOfKinPhoneNumber: string
    attachments?: ComplaintCreateattachmentsInput | string[]
    status: string
    reviewStage: string
    officerComments?: string | null
    internalNotes?: string | null
    rejectionReason?: string | null
    assignedOfficerRole: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedBy?: UserCreateNestedOneWithoutReviewedComplaintsInput
  }

  export type ComplaintUncheckedCreateWithoutComplainantInput = {
    id?: string
    complaintType: string
    subject: string
    details: string
    complainantPhoneNumber: string
    nextOfKinPhoneNumber: string
    attachments?: ComplaintCreateattachmentsInput | string[]
    status: string
    reviewStage: string
    officerComments?: string | null
    internalNotes?: string | null
    rejectionReason?: string | null
    assignedOfficerRole: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ComplaintCreateOrConnectWithoutComplainantInput = {
    where: ComplaintWhereUniqueInput
    create: XOR<ComplaintCreateWithoutComplainantInput, ComplaintUncheckedCreateWithoutComplainantInput>
  }

  export type ComplaintCreateManyComplainantInputEnvelope = {
    data: ComplaintCreateManyComplainantInput | ComplaintCreateManyComplainantInput[]
    skipDuplicates?: boolean
  }

  export type ComplaintCreateWithoutReviewedByInput = {
    id?: string
    complaintType: string
    subject: string
    details: string
    complainantPhoneNumber: string
    nextOfKinPhoneNumber: string
    attachments?: ComplaintCreateattachmentsInput | string[]
    status: string
    reviewStage: string
    officerComments?: string | null
    internalNotes?: string | null
    rejectionReason?: string | null
    assignedOfficerRole: string
    createdAt?: Date | string
    updatedAt?: Date | string
    complainant: UserCreateNestedOneWithoutComplaintsInput
  }

  export type ComplaintUncheckedCreateWithoutReviewedByInput = {
    id?: string
    complaintType: string
    subject: string
    details: string
    complainantPhoneNumber: string
    nextOfKinPhoneNumber: string
    attachments?: ComplaintCreateattachmentsInput | string[]
    status: string
    reviewStage: string
    officerComments?: string | null
    internalNotes?: string | null
    rejectionReason?: string | null
    complainantId: string
    assignedOfficerRole: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ComplaintCreateOrConnectWithoutReviewedByInput = {
    where: ComplaintWhereUniqueInput
    create: XOR<ComplaintCreateWithoutReviewedByInput, ComplaintUncheckedCreateWithoutReviewedByInput>
  }

  export type ComplaintCreateManyReviewedByInputEnvelope = {
    data: ComplaintCreateManyReviewedByInput | ComplaintCreateManyReviewedByInput[]
    skipDuplicates?: boolean
  }

  export type ConfirmationRequestCreateWithoutReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    documents?: ConfirmationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    decisionDate?: Date | string | null
    commissionDecisionDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutConfirmationRequestsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedConfirmationsInput
  }

  export type ConfirmationRequestUncheckedCreateWithoutReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    documents?: ConfirmationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    decisionDate?: Date | string | null
    commissionDecisionDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfirmationRequestCreateOrConnectWithoutReviewedByInput = {
    where: ConfirmationRequestWhereUniqueInput
    create: XOR<ConfirmationRequestCreateWithoutReviewedByInput, ConfirmationRequestUncheckedCreateWithoutReviewedByInput>
  }

  export type ConfirmationRequestCreateManyReviewedByInputEnvelope = {
    data: ConfirmationRequestCreateManyReviewedByInput | ConfirmationRequestCreateManyReviewedByInput[]
    skipDuplicates?: boolean
  }

  export type ConfirmationRequestCreateWithoutSubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    documents?: ConfirmationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    decisionDate?: Date | string | null
    commissionDecisionDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutConfirmationRequestsInput
    reviewedBy?: UserCreateNestedOneWithoutReviewedConfirmationsInput
  }

  export type ConfirmationRequestUncheckedCreateWithoutSubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    documents?: ConfirmationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    reviewedById?: string | null
    decisionDate?: Date | string | null
    commissionDecisionDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfirmationRequestCreateOrConnectWithoutSubmittedByInput = {
    where: ConfirmationRequestWhereUniqueInput
    create: XOR<ConfirmationRequestCreateWithoutSubmittedByInput, ConfirmationRequestUncheckedCreateWithoutSubmittedByInput>
  }

  export type ConfirmationRequestCreateManySubmittedByInputEnvelope = {
    data: ConfirmationRequestCreateManySubmittedByInput | ConfirmationRequestCreateManySubmittedByInput[]
    skipDuplicates?: boolean
  }

  export type LwopRequestCreateWithoutReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    duration: string
    reason: string
    documents?: LwopRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    endDate?: Date | string | null
    startDate?: Date | string | null
    employee: EmployeeCreateNestedOneWithoutLwopRequestsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedLWOPsInput
  }

  export type LwopRequestUncheckedCreateWithoutReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    duration: string
    reason: string
    documents?: LwopRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    endDate?: Date | string | null
    startDate?: Date | string | null
  }

  export type LwopRequestCreateOrConnectWithoutReviewedByInput = {
    where: LwopRequestWhereUniqueInput
    create: XOR<LwopRequestCreateWithoutReviewedByInput, LwopRequestUncheckedCreateWithoutReviewedByInput>
  }

  export type LwopRequestCreateManyReviewedByInputEnvelope = {
    data: LwopRequestCreateManyReviewedByInput | LwopRequestCreateManyReviewedByInput[]
    skipDuplicates?: boolean
  }

  export type LwopRequestCreateWithoutSubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    duration: string
    reason: string
    documents?: LwopRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    endDate?: Date | string | null
    startDate?: Date | string | null
    employee: EmployeeCreateNestedOneWithoutLwopRequestsInput
    reviewedBy?: UserCreateNestedOneWithoutReviewedLWOPsInput
  }

  export type LwopRequestUncheckedCreateWithoutSubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    duration: string
    reason: string
    documents?: LwopRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    endDate?: Date | string | null
    startDate?: Date | string | null
  }

  export type LwopRequestCreateOrConnectWithoutSubmittedByInput = {
    where: LwopRequestWhereUniqueInput
    create: XOR<LwopRequestCreateWithoutSubmittedByInput, LwopRequestUncheckedCreateWithoutSubmittedByInput>
  }

  export type LwopRequestCreateManySubmittedByInputEnvelope = {
    data: LwopRequestCreateManySubmittedByInput | LwopRequestCreateManySubmittedByInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutUserInput = {
    id?: string
    message: string
    link?: string | null
    isRead?: boolean
    createdAt?: Date | string
  }

  export type NotificationUncheckedCreateWithoutUserInput = {
    id?: string
    message: string
    link?: string | null
    isRead?: boolean
    createdAt?: Date | string
  }

  export type NotificationCreateOrConnectWithoutUserInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationCreateManyUserInputEnvelope = {
    data: NotificationCreateManyUserInput | NotificationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PromotionRequestCreateWithoutReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    proposedCadre: string
    promotionType: string
    studiedOutsideCountry?: boolean | null
    documents?: PromotionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    commissionDecisionReason?: string | null
    employee: EmployeeCreateNestedOneWithoutPromotionRequestsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedPromotionsInput
  }

  export type PromotionRequestUncheckedCreateWithoutReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    proposedCadre: string
    promotionType: string
    studiedOutsideCountry?: boolean | null
    documents?: PromotionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    commissionDecisionReason?: string | null
  }

  export type PromotionRequestCreateOrConnectWithoutReviewedByInput = {
    where: PromotionRequestWhereUniqueInput
    create: XOR<PromotionRequestCreateWithoutReviewedByInput, PromotionRequestUncheckedCreateWithoutReviewedByInput>
  }

  export type PromotionRequestCreateManyReviewedByInputEnvelope = {
    data: PromotionRequestCreateManyReviewedByInput | PromotionRequestCreateManyReviewedByInput[]
    skipDuplicates?: boolean
  }

  export type PromotionRequestCreateWithoutSubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    proposedCadre: string
    promotionType: string
    studiedOutsideCountry?: boolean | null
    documents?: PromotionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    commissionDecisionReason?: string | null
    employee: EmployeeCreateNestedOneWithoutPromotionRequestsInput
    reviewedBy?: UserCreateNestedOneWithoutReviewedPromotionsInput
  }

  export type PromotionRequestUncheckedCreateWithoutSubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    proposedCadre: string
    promotionType: string
    studiedOutsideCountry?: boolean | null
    documents?: PromotionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    commissionDecisionReason?: string | null
  }

  export type PromotionRequestCreateOrConnectWithoutSubmittedByInput = {
    where: PromotionRequestWhereUniqueInput
    create: XOR<PromotionRequestCreateWithoutSubmittedByInput, PromotionRequestUncheckedCreateWithoutSubmittedByInput>
  }

  export type PromotionRequestCreateManySubmittedByInputEnvelope = {
    data: PromotionRequestCreateManySubmittedByInput | PromotionRequestCreateManySubmittedByInput[]
    skipDuplicates?: boolean
  }

  export type ResignationRequestCreateWithoutReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    effectiveDate: Date | string
    reason?: string | null
    documents?: ResignationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutResignationRequestsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedResignationsInput
  }

  export type ResignationRequestUncheckedCreateWithoutReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    effectiveDate: Date | string
    reason?: string | null
    documents?: ResignationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ResignationRequestCreateOrConnectWithoutReviewedByInput = {
    where: ResignationRequestWhereUniqueInput
    create: XOR<ResignationRequestCreateWithoutReviewedByInput, ResignationRequestUncheckedCreateWithoutReviewedByInput>
  }

  export type ResignationRequestCreateManyReviewedByInputEnvelope = {
    data: ResignationRequestCreateManyReviewedByInput | ResignationRequestCreateManyReviewedByInput[]
    skipDuplicates?: boolean
  }

  export type ResignationRequestCreateWithoutSubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    effectiveDate: Date | string
    reason?: string | null
    documents?: ResignationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutResignationRequestsInput
    reviewedBy?: UserCreateNestedOneWithoutReviewedResignationsInput
  }

  export type ResignationRequestUncheckedCreateWithoutSubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    effectiveDate: Date | string
    reason?: string | null
    documents?: ResignationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ResignationRequestCreateOrConnectWithoutSubmittedByInput = {
    where: ResignationRequestWhereUniqueInput
    create: XOR<ResignationRequestCreateWithoutSubmittedByInput, ResignationRequestUncheckedCreateWithoutSubmittedByInput>
  }

  export type ResignationRequestCreateManySubmittedByInputEnvelope = {
    data: ResignationRequestCreateManySubmittedByInput | ResignationRequestCreateManySubmittedByInput[]
    skipDuplicates?: boolean
  }

  export type RetirementRequestCreateWithoutReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    retirementType: string
    illnessDescription?: string | null
    proposedDate: Date | string
    delayReason?: string | null
    documents?: RetirementRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutRetirementRequestsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedRetirementsInput
  }

  export type RetirementRequestUncheckedCreateWithoutReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    retirementType: string
    illnessDescription?: string | null
    proposedDate: Date | string
    delayReason?: string | null
    documents?: RetirementRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RetirementRequestCreateOrConnectWithoutReviewedByInput = {
    where: RetirementRequestWhereUniqueInput
    create: XOR<RetirementRequestCreateWithoutReviewedByInput, RetirementRequestUncheckedCreateWithoutReviewedByInput>
  }

  export type RetirementRequestCreateManyReviewedByInputEnvelope = {
    data: RetirementRequestCreateManyReviewedByInput | RetirementRequestCreateManyReviewedByInput[]
    skipDuplicates?: boolean
  }

  export type RetirementRequestCreateWithoutSubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    retirementType: string
    illnessDescription?: string | null
    proposedDate: Date | string
    delayReason?: string | null
    documents?: RetirementRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutRetirementRequestsInput
    reviewedBy?: UserCreateNestedOneWithoutReviewedRetirementsInput
  }

  export type RetirementRequestUncheckedCreateWithoutSubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    retirementType: string
    illnessDescription?: string | null
    proposedDate: Date | string
    delayReason?: string | null
    documents?: RetirementRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RetirementRequestCreateOrConnectWithoutSubmittedByInput = {
    where: RetirementRequestWhereUniqueInput
    create: XOR<RetirementRequestCreateWithoutSubmittedByInput, RetirementRequestUncheckedCreateWithoutSubmittedByInput>
  }

  export type RetirementRequestCreateManySubmittedByInputEnvelope = {
    data: RetirementRequestCreateManySubmittedByInput | RetirementRequestCreateManySubmittedByInput[]
    skipDuplicates?: boolean
  }

  export type SeparationRequestCreateWithoutReviewedByInput = {
    id?: string
    type: string
    status: string
    reviewStage: string
    reason: string
    documents?: SeparationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutSeparationRequestsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedSeparationsInput
  }

  export type SeparationRequestUncheckedCreateWithoutReviewedByInput = {
    id?: string
    type: string
    status: string
    reviewStage: string
    reason: string
    documents?: SeparationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SeparationRequestCreateOrConnectWithoutReviewedByInput = {
    where: SeparationRequestWhereUniqueInput
    create: XOR<SeparationRequestCreateWithoutReviewedByInput, SeparationRequestUncheckedCreateWithoutReviewedByInput>
  }

  export type SeparationRequestCreateManyReviewedByInputEnvelope = {
    data: SeparationRequestCreateManyReviewedByInput | SeparationRequestCreateManyReviewedByInput[]
    skipDuplicates?: boolean
  }

  export type SeparationRequestCreateWithoutSubmittedByInput = {
    id?: string
    type: string
    status: string
    reviewStage: string
    reason: string
    documents?: SeparationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutSeparationRequestsInput
    reviewedBy?: UserCreateNestedOneWithoutReviewedSeparationsInput
  }

  export type SeparationRequestUncheckedCreateWithoutSubmittedByInput = {
    id?: string
    type: string
    status: string
    reviewStage: string
    reason: string
    documents?: SeparationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SeparationRequestCreateOrConnectWithoutSubmittedByInput = {
    where: SeparationRequestWhereUniqueInput
    create: XOR<SeparationRequestCreateWithoutSubmittedByInput, SeparationRequestUncheckedCreateWithoutSubmittedByInput>
  }

  export type SeparationRequestCreateManySubmittedByInputEnvelope = {
    data: SeparationRequestCreateManySubmittedByInput | SeparationRequestCreateManySubmittedByInput[]
    skipDuplicates?: boolean
  }

  export type ServiceExtensionRequestCreateWithoutReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    currentRetirementDate: Date | string
    requestedExtensionPeriod: string
    justification: string
    documents?: ServiceExtensionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutServiceExtensionRequestsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedServiceExtensionsInput
  }

  export type ServiceExtensionRequestUncheckedCreateWithoutReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    currentRetirementDate: Date | string
    requestedExtensionPeriod: string
    justification: string
    documents?: ServiceExtensionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ServiceExtensionRequestCreateOrConnectWithoutReviewedByInput = {
    where: ServiceExtensionRequestWhereUniqueInput
    create: XOR<ServiceExtensionRequestCreateWithoutReviewedByInput, ServiceExtensionRequestUncheckedCreateWithoutReviewedByInput>
  }

  export type ServiceExtensionRequestCreateManyReviewedByInputEnvelope = {
    data: ServiceExtensionRequestCreateManyReviewedByInput | ServiceExtensionRequestCreateManyReviewedByInput[]
    skipDuplicates?: boolean
  }

  export type ServiceExtensionRequestCreateWithoutSubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    currentRetirementDate: Date | string
    requestedExtensionPeriod: string
    justification: string
    documents?: ServiceExtensionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    employee: EmployeeCreateNestedOneWithoutServiceExtensionRequestsInput
    reviewedBy?: UserCreateNestedOneWithoutReviewedServiceExtensionsInput
  }

  export type ServiceExtensionRequestUncheckedCreateWithoutSubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    currentRetirementDate: Date | string
    requestedExtensionPeriod: string
    justification: string
    documents?: ServiceExtensionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ServiceExtensionRequestCreateOrConnectWithoutSubmittedByInput = {
    where: ServiceExtensionRequestWhereUniqueInput
    create: XOR<ServiceExtensionRequestCreateWithoutSubmittedByInput, ServiceExtensionRequestUncheckedCreateWithoutSubmittedByInput>
  }

  export type ServiceExtensionRequestCreateManySubmittedByInputEnvelope = {
    data: ServiceExtensionRequestCreateManySubmittedByInput | ServiceExtensionRequestCreateManySubmittedByInput[]
    skipDuplicates?: boolean
  }

  export type EmployeeCreateWithoutUserInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    cadreChangeRequests?: CadreChangeRequestCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestCreateNestedManyWithoutEmployeeInput
    institution: InstitutionCreateNestedOneWithoutEmployeesInput
    certificates?: EmployeeCertificateCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestCreateNestedManyWithoutEmployeeInput
  }

  export type EmployeeUncheckedCreateWithoutUserInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    institutionId: string
    cadreChangeRequests?: CadreChangeRequestUncheckedCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    certificates?: EmployeeCertificateUncheckedCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestUncheckedCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestUncheckedCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutEmployeeInput
  }

  export type EmployeeCreateOrConnectWithoutUserInput = {
    where: EmployeeWhereUniqueInput
    create: XOR<EmployeeCreateWithoutUserInput, EmployeeUncheckedCreateWithoutUserInput>
  }

  export type InstitutionCreateWithoutUsersInput = {
    id?: string
    name: string
    employees?: EmployeeCreateNestedManyWithoutInstitutionInput
  }

  export type InstitutionUncheckedCreateWithoutUsersInput = {
    id?: string
    name: string
    employees?: EmployeeUncheckedCreateNestedManyWithoutInstitutionInput
  }

  export type InstitutionCreateOrConnectWithoutUsersInput = {
    where: InstitutionWhereUniqueInput
    create: XOR<InstitutionCreateWithoutUsersInput, InstitutionUncheckedCreateWithoutUsersInput>
  }

  export type CadreChangeRequestUpsertWithWhereUniqueWithoutReviewedByInput = {
    where: CadreChangeRequestWhereUniqueInput
    update: XOR<CadreChangeRequestUpdateWithoutReviewedByInput, CadreChangeRequestUncheckedUpdateWithoutReviewedByInput>
    create: XOR<CadreChangeRequestCreateWithoutReviewedByInput, CadreChangeRequestUncheckedCreateWithoutReviewedByInput>
  }

  export type CadreChangeRequestUpdateWithWhereUniqueWithoutReviewedByInput = {
    where: CadreChangeRequestWhereUniqueInput
    data: XOR<CadreChangeRequestUpdateWithoutReviewedByInput, CadreChangeRequestUncheckedUpdateWithoutReviewedByInput>
  }

  export type CadreChangeRequestUpdateManyWithWhereWithoutReviewedByInput = {
    where: CadreChangeRequestScalarWhereInput
    data: XOR<CadreChangeRequestUpdateManyMutationInput, CadreChangeRequestUncheckedUpdateManyWithoutReviewedByInput>
  }

  export type CadreChangeRequestScalarWhereInput = {
    AND?: CadreChangeRequestScalarWhereInput | CadreChangeRequestScalarWhereInput[]
    OR?: CadreChangeRequestScalarWhereInput[]
    NOT?: CadreChangeRequestScalarWhereInput | CadreChangeRequestScalarWhereInput[]
    id?: StringFilter<"CadreChangeRequest"> | string
    status?: StringFilter<"CadreChangeRequest"> | string
    reviewStage?: StringFilter<"CadreChangeRequest"> | string
    newCadre?: StringFilter<"CadreChangeRequest"> | string
    reason?: StringNullableFilter<"CadreChangeRequest"> | string | null
    studiedOutsideCountry?: BoolNullableFilter<"CadreChangeRequest"> | boolean | null
    documents?: StringNullableListFilter<"CadreChangeRequest">
    rejectionReason?: StringNullableFilter<"CadreChangeRequest"> | string | null
    employeeId?: StringFilter<"CadreChangeRequest"> | string
    submittedById?: StringFilter<"CadreChangeRequest"> | string
    reviewedById?: StringNullableFilter<"CadreChangeRequest"> | string | null
    createdAt?: DateTimeFilter<"CadreChangeRequest"> | Date | string
    updatedAt?: DateTimeFilter<"CadreChangeRequest"> | Date | string
  }

  export type CadreChangeRequestUpsertWithWhereUniqueWithoutSubmittedByInput = {
    where: CadreChangeRequestWhereUniqueInput
    update: XOR<CadreChangeRequestUpdateWithoutSubmittedByInput, CadreChangeRequestUncheckedUpdateWithoutSubmittedByInput>
    create: XOR<CadreChangeRequestCreateWithoutSubmittedByInput, CadreChangeRequestUncheckedCreateWithoutSubmittedByInput>
  }

  export type CadreChangeRequestUpdateWithWhereUniqueWithoutSubmittedByInput = {
    where: CadreChangeRequestWhereUniqueInput
    data: XOR<CadreChangeRequestUpdateWithoutSubmittedByInput, CadreChangeRequestUncheckedUpdateWithoutSubmittedByInput>
  }

  export type CadreChangeRequestUpdateManyWithWhereWithoutSubmittedByInput = {
    where: CadreChangeRequestScalarWhereInput
    data: XOR<CadreChangeRequestUpdateManyMutationInput, CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByInput>
  }

  export type ComplaintUpsertWithWhereUniqueWithoutComplainantInput = {
    where: ComplaintWhereUniqueInput
    update: XOR<ComplaintUpdateWithoutComplainantInput, ComplaintUncheckedUpdateWithoutComplainantInput>
    create: XOR<ComplaintCreateWithoutComplainantInput, ComplaintUncheckedCreateWithoutComplainantInput>
  }

  export type ComplaintUpdateWithWhereUniqueWithoutComplainantInput = {
    where: ComplaintWhereUniqueInput
    data: XOR<ComplaintUpdateWithoutComplainantInput, ComplaintUncheckedUpdateWithoutComplainantInput>
  }

  export type ComplaintUpdateManyWithWhereWithoutComplainantInput = {
    where: ComplaintScalarWhereInput
    data: XOR<ComplaintUpdateManyMutationInput, ComplaintUncheckedUpdateManyWithoutComplainantInput>
  }

  export type ComplaintScalarWhereInput = {
    AND?: ComplaintScalarWhereInput | ComplaintScalarWhereInput[]
    OR?: ComplaintScalarWhereInput[]
    NOT?: ComplaintScalarWhereInput | ComplaintScalarWhereInput[]
    id?: StringFilter<"Complaint"> | string
    complaintType?: StringFilter<"Complaint"> | string
    subject?: StringFilter<"Complaint"> | string
    details?: StringFilter<"Complaint"> | string
    complainantPhoneNumber?: StringFilter<"Complaint"> | string
    nextOfKinPhoneNumber?: StringFilter<"Complaint"> | string
    attachments?: StringNullableListFilter<"Complaint">
    status?: StringFilter<"Complaint"> | string
    reviewStage?: StringFilter<"Complaint"> | string
    officerComments?: StringNullableFilter<"Complaint"> | string | null
    internalNotes?: StringNullableFilter<"Complaint"> | string | null
    rejectionReason?: StringNullableFilter<"Complaint"> | string | null
    complainantId?: StringFilter<"Complaint"> | string
    assignedOfficerRole?: StringFilter<"Complaint"> | string
    reviewedById?: StringNullableFilter<"Complaint"> | string | null
    createdAt?: DateTimeFilter<"Complaint"> | Date | string
    updatedAt?: DateTimeFilter<"Complaint"> | Date | string
  }

  export type ComplaintUpsertWithWhereUniqueWithoutReviewedByInput = {
    where: ComplaintWhereUniqueInput
    update: XOR<ComplaintUpdateWithoutReviewedByInput, ComplaintUncheckedUpdateWithoutReviewedByInput>
    create: XOR<ComplaintCreateWithoutReviewedByInput, ComplaintUncheckedCreateWithoutReviewedByInput>
  }

  export type ComplaintUpdateWithWhereUniqueWithoutReviewedByInput = {
    where: ComplaintWhereUniqueInput
    data: XOR<ComplaintUpdateWithoutReviewedByInput, ComplaintUncheckedUpdateWithoutReviewedByInput>
  }

  export type ComplaintUpdateManyWithWhereWithoutReviewedByInput = {
    where: ComplaintScalarWhereInput
    data: XOR<ComplaintUpdateManyMutationInput, ComplaintUncheckedUpdateManyWithoutReviewedByInput>
  }

  export type ConfirmationRequestUpsertWithWhereUniqueWithoutReviewedByInput = {
    where: ConfirmationRequestWhereUniqueInput
    update: XOR<ConfirmationRequestUpdateWithoutReviewedByInput, ConfirmationRequestUncheckedUpdateWithoutReviewedByInput>
    create: XOR<ConfirmationRequestCreateWithoutReviewedByInput, ConfirmationRequestUncheckedCreateWithoutReviewedByInput>
  }

  export type ConfirmationRequestUpdateWithWhereUniqueWithoutReviewedByInput = {
    where: ConfirmationRequestWhereUniqueInput
    data: XOR<ConfirmationRequestUpdateWithoutReviewedByInput, ConfirmationRequestUncheckedUpdateWithoutReviewedByInput>
  }

  export type ConfirmationRequestUpdateManyWithWhereWithoutReviewedByInput = {
    where: ConfirmationRequestScalarWhereInput
    data: XOR<ConfirmationRequestUpdateManyMutationInput, ConfirmationRequestUncheckedUpdateManyWithoutReviewedByInput>
  }

  export type ConfirmationRequestScalarWhereInput = {
    AND?: ConfirmationRequestScalarWhereInput | ConfirmationRequestScalarWhereInput[]
    OR?: ConfirmationRequestScalarWhereInput[]
    NOT?: ConfirmationRequestScalarWhereInput | ConfirmationRequestScalarWhereInput[]
    id?: StringFilter<"ConfirmationRequest"> | string
    status?: StringFilter<"ConfirmationRequest"> | string
    reviewStage?: StringFilter<"ConfirmationRequest"> | string
    documents?: StringNullableListFilter<"ConfirmationRequest">
    rejectionReason?: StringNullableFilter<"ConfirmationRequest"> | string | null
    employeeId?: StringFilter<"ConfirmationRequest"> | string
    submittedById?: StringFilter<"ConfirmationRequest"> | string
    reviewedById?: StringNullableFilter<"ConfirmationRequest"> | string | null
    decisionDate?: DateTimeNullableFilter<"ConfirmationRequest"> | Date | string | null
    commissionDecisionDate?: DateTimeNullableFilter<"ConfirmationRequest"> | Date | string | null
    createdAt?: DateTimeFilter<"ConfirmationRequest"> | Date | string
    updatedAt?: DateTimeFilter<"ConfirmationRequest"> | Date | string
  }

  export type ConfirmationRequestUpsertWithWhereUniqueWithoutSubmittedByInput = {
    where: ConfirmationRequestWhereUniqueInput
    update: XOR<ConfirmationRequestUpdateWithoutSubmittedByInput, ConfirmationRequestUncheckedUpdateWithoutSubmittedByInput>
    create: XOR<ConfirmationRequestCreateWithoutSubmittedByInput, ConfirmationRequestUncheckedCreateWithoutSubmittedByInput>
  }

  export type ConfirmationRequestUpdateWithWhereUniqueWithoutSubmittedByInput = {
    where: ConfirmationRequestWhereUniqueInput
    data: XOR<ConfirmationRequestUpdateWithoutSubmittedByInput, ConfirmationRequestUncheckedUpdateWithoutSubmittedByInput>
  }

  export type ConfirmationRequestUpdateManyWithWhereWithoutSubmittedByInput = {
    where: ConfirmationRequestScalarWhereInput
    data: XOR<ConfirmationRequestUpdateManyMutationInput, ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByInput>
  }

  export type LwopRequestUpsertWithWhereUniqueWithoutReviewedByInput = {
    where: LwopRequestWhereUniqueInput
    update: XOR<LwopRequestUpdateWithoutReviewedByInput, LwopRequestUncheckedUpdateWithoutReviewedByInput>
    create: XOR<LwopRequestCreateWithoutReviewedByInput, LwopRequestUncheckedCreateWithoutReviewedByInput>
  }

  export type LwopRequestUpdateWithWhereUniqueWithoutReviewedByInput = {
    where: LwopRequestWhereUniqueInput
    data: XOR<LwopRequestUpdateWithoutReviewedByInput, LwopRequestUncheckedUpdateWithoutReviewedByInput>
  }

  export type LwopRequestUpdateManyWithWhereWithoutReviewedByInput = {
    where: LwopRequestScalarWhereInput
    data: XOR<LwopRequestUpdateManyMutationInput, LwopRequestUncheckedUpdateManyWithoutReviewedByInput>
  }

  export type LwopRequestScalarWhereInput = {
    AND?: LwopRequestScalarWhereInput | LwopRequestScalarWhereInput[]
    OR?: LwopRequestScalarWhereInput[]
    NOT?: LwopRequestScalarWhereInput | LwopRequestScalarWhereInput[]
    id?: StringFilter<"LwopRequest"> | string
    status?: StringFilter<"LwopRequest"> | string
    reviewStage?: StringFilter<"LwopRequest"> | string
    duration?: StringFilter<"LwopRequest"> | string
    reason?: StringFilter<"LwopRequest"> | string
    documents?: StringNullableListFilter<"LwopRequest">
    rejectionReason?: StringNullableFilter<"LwopRequest"> | string | null
    employeeId?: StringFilter<"LwopRequest"> | string
    submittedById?: StringFilter<"LwopRequest"> | string
    reviewedById?: StringNullableFilter<"LwopRequest"> | string | null
    createdAt?: DateTimeFilter<"LwopRequest"> | Date | string
    updatedAt?: DateTimeFilter<"LwopRequest"> | Date | string
    endDate?: DateTimeNullableFilter<"LwopRequest"> | Date | string | null
    startDate?: DateTimeNullableFilter<"LwopRequest"> | Date | string | null
  }

  export type LwopRequestUpsertWithWhereUniqueWithoutSubmittedByInput = {
    where: LwopRequestWhereUniqueInput
    update: XOR<LwopRequestUpdateWithoutSubmittedByInput, LwopRequestUncheckedUpdateWithoutSubmittedByInput>
    create: XOR<LwopRequestCreateWithoutSubmittedByInput, LwopRequestUncheckedCreateWithoutSubmittedByInput>
  }

  export type LwopRequestUpdateWithWhereUniqueWithoutSubmittedByInput = {
    where: LwopRequestWhereUniqueInput
    data: XOR<LwopRequestUpdateWithoutSubmittedByInput, LwopRequestUncheckedUpdateWithoutSubmittedByInput>
  }

  export type LwopRequestUpdateManyWithWhereWithoutSubmittedByInput = {
    where: LwopRequestScalarWhereInput
    data: XOR<LwopRequestUpdateManyMutationInput, LwopRequestUncheckedUpdateManyWithoutSubmittedByInput>
  }

  export type NotificationUpsertWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
  }

  export type NotificationUpdateManyWithWhereWithoutUserInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutUserInput>
  }

  export type NotificationScalarWhereInput = {
    AND?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    OR?: NotificationScalarWhereInput[]
    NOT?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    id?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    link?: StringNullableFilter<"Notification"> | string | null
    isRead?: BoolFilter<"Notification"> | boolean
    userId?: StringFilter<"Notification"> | string
    createdAt?: DateTimeFilter<"Notification"> | Date | string
  }

  export type PromotionRequestUpsertWithWhereUniqueWithoutReviewedByInput = {
    where: PromotionRequestWhereUniqueInput
    update: XOR<PromotionRequestUpdateWithoutReviewedByInput, PromotionRequestUncheckedUpdateWithoutReviewedByInput>
    create: XOR<PromotionRequestCreateWithoutReviewedByInput, PromotionRequestUncheckedCreateWithoutReviewedByInput>
  }

  export type PromotionRequestUpdateWithWhereUniqueWithoutReviewedByInput = {
    where: PromotionRequestWhereUniqueInput
    data: XOR<PromotionRequestUpdateWithoutReviewedByInput, PromotionRequestUncheckedUpdateWithoutReviewedByInput>
  }

  export type PromotionRequestUpdateManyWithWhereWithoutReviewedByInput = {
    where: PromotionRequestScalarWhereInput
    data: XOR<PromotionRequestUpdateManyMutationInput, PromotionRequestUncheckedUpdateManyWithoutReviewedByInput>
  }

  export type PromotionRequestScalarWhereInput = {
    AND?: PromotionRequestScalarWhereInput | PromotionRequestScalarWhereInput[]
    OR?: PromotionRequestScalarWhereInput[]
    NOT?: PromotionRequestScalarWhereInput | PromotionRequestScalarWhereInput[]
    id?: StringFilter<"PromotionRequest"> | string
    status?: StringFilter<"PromotionRequest"> | string
    reviewStage?: StringFilter<"PromotionRequest"> | string
    proposedCadre?: StringFilter<"PromotionRequest"> | string
    promotionType?: StringFilter<"PromotionRequest"> | string
    studiedOutsideCountry?: BoolNullableFilter<"PromotionRequest"> | boolean | null
    documents?: StringNullableListFilter<"PromotionRequest">
    rejectionReason?: StringNullableFilter<"PromotionRequest"> | string | null
    employeeId?: StringFilter<"PromotionRequest"> | string
    submittedById?: StringFilter<"PromotionRequest"> | string
    reviewedById?: StringNullableFilter<"PromotionRequest"> | string | null
    createdAt?: DateTimeFilter<"PromotionRequest"> | Date | string
    updatedAt?: DateTimeFilter<"PromotionRequest"> | Date | string
    commissionDecisionReason?: StringNullableFilter<"PromotionRequest"> | string | null
  }

  export type PromotionRequestUpsertWithWhereUniqueWithoutSubmittedByInput = {
    where: PromotionRequestWhereUniqueInput
    update: XOR<PromotionRequestUpdateWithoutSubmittedByInput, PromotionRequestUncheckedUpdateWithoutSubmittedByInput>
    create: XOR<PromotionRequestCreateWithoutSubmittedByInput, PromotionRequestUncheckedCreateWithoutSubmittedByInput>
  }

  export type PromotionRequestUpdateWithWhereUniqueWithoutSubmittedByInput = {
    where: PromotionRequestWhereUniqueInput
    data: XOR<PromotionRequestUpdateWithoutSubmittedByInput, PromotionRequestUncheckedUpdateWithoutSubmittedByInput>
  }

  export type PromotionRequestUpdateManyWithWhereWithoutSubmittedByInput = {
    where: PromotionRequestScalarWhereInput
    data: XOR<PromotionRequestUpdateManyMutationInput, PromotionRequestUncheckedUpdateManyWithoutSubmittedByInput>
  }

  export type ResignationRequestUpsertWithWhereUniqueWithoutReviewedByInput = {
    where: ResignationRequestWhereUniqueInput
    update: XOR<ResignationRequestUpdateWithoutReviewedByInput, ResignationRequestUncheckedUpdateWithoutReviewedByInput>
    create: XOR<ResignationRequestCreateWithoutReviewedByInput, ResignationRequestUncheckedCreateWithoutReviewedByInput>
  }

  export type ResignationRequestUpdateWithWhereUniqueWithoutReviewedByInput = {
    where: ResignationRequestWhereUniqueInput
    data: XOR<ResignationRequestUpdateWithoutReviewedByInput, ResignationRequestUncheckedUpdateWithoutReviewedByInput>
  }

  export type ResignationRequestUpdateManyWithWhereWithoutReviewedByInput = {
    where: ResignationRequestScalarWhereInput
    data: XOR<ResignationRequestUpdateManyMutationInput, ResignationRequestUncheckedUpdateManyWithoutReviewedByInput>
  }

  export type ResignationRequestScalarWhereInput = {
    AND?: ResignationRequestScalarWhereInput | ResignationRequestScalarWhereInput[]
    OR?: ResignationRequestScalarWhereInput[]
    NOT?: ResignationRequestScalarWhereInput | ResignationRequestScalarWhereInput[]
    id?: StringFilter<"ResignationRequest"> | string
    status?: StringFilter<"ResignationRequest"> | string
    reviewStage?: StringFilter<"ResignationRequest"> | string
    effectiveDate?: DateTimeFilter<"ResignationRequest"> | Date | string
    reason?: StringNullableFilter<"ResignationRequest"> | string | null
    documents?: StringNullableListFilter<"ResignationRequest">
    rejectionReason?: StringNullableFilter<"ResignationRequest"> | string | null
    employeeId?: StringFilter<"ResignationRequest"> | string
    submittedById?: StringFilter<"ResignationRequest"> | string
    reviewedById?: StringNullableFilter<"ResignationRequest"> | string | null
    createdAt?: DateTimeFilter<"ResignationRequest"> | Date | string
    updatedAt?: DateTimeFilter<"ResignationRequest"> | Date | string
  }

  export type ResignationRequestUpsertWithWhereUniqueWithoutSubmittedByInput = {
    where: ResignationRequestWhereUniqueInput
    update: XOR<ResignationRequestUpdateWithoutSubmittedByInput, ResignationRequestUncheckedUpdateWithoutSubmittedByInput>
    create: XOR<ResignationRequestCreateWithoutSubmittedByInput, ResignationRequestUncheckedCreateWithoutSubmittedByInput>
  }

  export type ResignationRequestUpdateWithWhereUniqueWithoutSubmittedByInput = {
    where: ResignationRequestWhereUniqueInput
    data: XOR<ResignationRequestUpdateWithoutSubmittedByInput, ResignationRequestUncheckedUpdateWithoutSubmittedByInput>
  }

  export type ResignationRequestUpdateManyWithWhereWithoutSubmittedByInput = {
    where: ResignationRequestScalarWhereInput
    data: XOR<ResignationRequestUpdateManyMutationInput, ResignationRequestUncheckedUpdateManyWithoutSubmittedByInput>
  }

  export type RetirementRequestUpsertWithWhereUniqueWithoutReviewedByInput = {
    where: RetirementRequestWhereUniqueInput
    update: XOR<RetirementRequestUpdateWithoutReviewedByInput, RetirementRequestUncheckedUpdateWithoutReviewedByInput>
    create: XOR<RetirementRequestCreateWithoutReviewedByInput, RetirementRequestUncheckedCreateWithoutReviewedByInput>
  }

  export type RetirementRequestUpdateWithWhereUniqueWithoutReviewedByInput = {
    where: RetirementRequestWhereUniqueInput
    data: XOR<RetirementRequestUpdateWithoutReviewedByInput, RetirementRequestUncheckedUpdateWithoutReviewedByInput>
  }

  export type RetirementRequestUpdateManyWithWhereWithoutReviewedByInput = {
    where: RetirementRequestScalarWhereInput
    data: XOR<RetirementRequestUpdateManyMutationInput, RetirementRequestUncheckedUpdateManyWithoutReviewedByInput>
  }

  export type RetirementRequestScalarWhereInput = {
    AND?: RetirementRequestScalarWhereInput | RetirementRequestScalarWhereInput[]
    OR?: RetirementRequestScalarWhereInput[]
    NOT?: RetirementRequestScalarWhereInput | RetirementRequestScalarWhereInput[]
    id?: StringFilter<"RetirementRequest"> | string
    status?: StringFilter<"RetirementRequest"> | string
    reviewStage?: StringFilter<"RetirementRequest"> | string
    retirementType?: StringFilter<"RetirementRequest"> | string
    illnessDescription?: StringNullableFilter<"RetirementRequest"> | string | null
    proposedDate?: DateTimeFilter<"RetirementRequest"> | Date | string
    delayReason?: StringNullableFilter<"RetirementRequest"> | string | null
    documents?: StringNullableListFilter<"RetirementRequest">
    rejectionReason?: StringNullableFilter<"RetirementRequest"> | string | null
    employeeId?: StringFilter<"RetirementRequest"> | string
    submittedById?: StringFilter<"RetirementRequest"> | string
    reviewedById?: StringNullableFilter<"RetirementRequest"> | string | null
    createdAt?: DateTimeFilter<"RetirementRequest"> | Date | string
    updatedAt?: DateTimeFilter<"RetirementRequest"> | Date | string
  }

  export type RetirementRequestUpsertWithWhereUniqueWithoutSubmittedByInput = {
    where: RetirementRequestWhereUniqueInput
    update: XOR<RetirementRequestUpdateWithoutSubmittedByInput, RetirementRequestUncheckedUpdateWithoutSubmittedByInput>
    create: XOR<RetirementRequestCreateWithoutSubmittedByInput, RetirementRequestUncheckedCreateWithoutSubmittedByInput>
  }

  export type RetirementRequestUpdateWithWhereUniqueWithoutSubmittedByInput = {
    where: RetirementRequestWhereUniqueInput
    data: XOR<RetirementRequestUpdateWithoutSubmittedByInput, RetirementRequestUncheckedUpdateWithoutSubmittedByInput>
  }

  export type RetirementRequestUpdateManyWithWhereWithoutSubmittedByInput = {
    where: RetirementRequestScalarWhereInput
    data: XOR<RetirementRequestUpdateManyMutationInput, RetirementRequestUncheckedUpdateManyWithoutSubmittedByInput>
  }

  export type SeparationRequestUpsertWithWhereUniqueWithoutReviewedByInput = {
    where: SeparationRequestWhereUniqueInput
    update: XOR<SeparationRequestUpdateWithoutReviewedByInput, SeparationRequestUncheckedUpdateWithoutReviewedByInput>
    create: XOR<SeparationRequestCreateWithoutReviewedByInput, SeparationRequestUncheckedCreateWithoutReviewedByInput>
  }

  export type SeparationRequestUpdateWithWhereUniqueWithoutReviewedByInput = {
    where: SeparationRequestWhereUniqueInput
    data: XOR<SeparationRequestUpdateWithoutReviewedByInput, SeparationRequestUncheckedUpdateWithoutReviewedByInput>
  }

  export type SeparationRequestUpdateManyWithWhereWithoutReviewedByInput = {
    where: SeparationRequestScalarWhereInput
    data: XOR<SeparationRequestUpdateManyMutationInput, SeparationRequestUncheckedUpdateManyWithoutReviewedByInput>
  }

  export type SeparationRequestScalarWhereInput = {
    AND?: SeparationRequestScalarWhereInput | SeparationRequestScalarWhereInput[]
    OR?: SeparationRequestScalarWhereInput[]
    NOT?: SeparationRequestScalarWhereInput | SeparationRequestScalarWhereInput[]
    id?: StringFilter<"SeparationRequest"> | string
    type?: StringFilter<"SeparationRequest"> | string
    status?: StringFilter<"SeparationRequest"> | string
    reviewStage?: StringFilter<"SeparationRequest"> | string
    reason?: StringFilter<"SeparationRequest"> | string
    documents?: StringNullableListFilter<"SeparationRequest">
    rejectionReason?: StringNullableFilter<"SeparationRequest"> | string | null
    employeeId?: StringFilter<"SeparationRequest"> | string
    submittedById?: StringFilter<"SeparationRequest"> | string
    reviewedById?: StringNullableFilter<"SeparationRequest"> | string | null
    createdAt?: DateTimeFilter<"SeparationRequest"> | Date | string
    updatedAt?: DateTimeFilter<"SeparationRequest"> | Date | string
  }

  export type SeparationRequestUpsertWithWhereUniqueWithoutSubmittedByInput = {
    where: SeparationRequestWhereUniqueInput
    update: XOR<SeparationRequestUpdateWithoutSubmittedByInput, SeparationRequestUncheckedUpdateWithoutSubmittedByInput>
    create: XOR<SeparationRequestCreateWithoutSubmittedByInput, SeparationRequestUncheckedCreateWithoutSubmittedByInput>
  }

  export type SeparationRequestUpdateWithWhereUniqueWithoutSubmittedByInput = {
    where: SeparationRequestWhereUniqueInput
    data: XOR<SeparationRequestUpdateWithoutSubmittedByInput, SeparationRequestUncheckedUpdateWithoutSubmittedByInput>
  }

  export type SeparationRequestUpdateManyWithWhereWithoutSubmittedByInput = {
    where: SeparationRequestScalarWhereInput
    data: XOR<SeparationRequestUpdateManyMutationInput, SeparationRequestUncheckedUpdateManyWithoutSubmittedByInput>
  }

  export type ServiceExtensionRequestUpsertWithWhereUniqueWithoutReviewedByInput = {
    where: ServiceExtensionRequestWhereUniqueInput
    update: XOR<ServiceExtensionRequestUpdateWithoutReviewedByInput, ServiceExtensionRequestUncheckedUpdateWithoutReviewedByInput>
    create: XOR<ServiceExtensionRequestCreateWithoutReviewedByInput, ServiceExtensionRequestUncheckedCreateWithoutReviewedByInput>
  }

  export type ServiceExtensionRequestUpdateWithWhereUniqueWithoutReviewedByInput = {
    where: ServiceExtensionRequestWhereUniqueInput
    data: XOR<ServiceExtensionRequestUpdateWithoutReviewedByInput, ServiceExtensionRequestUncheckedUpdateWithoutReviewedByInput>
  }

  export type ServiceExtensionRequestUpdateManyWithWhereWithoutReviewedByInput = {
    where: ServiceExtensionRequestScalarWhereInput
    data: XOR<ServiceExtensionRequestUpdateManyMutationInput, ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByInput>
  }

  export type ServiceExtensionRequestScalarWhereInput = {
    AND?: ServiceExtensionRequestScalarWhereInput | ServiceExtensionRequestScalarWhereInput[]
    OR?: ServiceExtensionRequestScalarWhereInput[]
    NOT?: ServiceExtensionRequestScalarWhereInput | ServiceExtensionRequestScalarWhereInput[]
    id?: StringFilter<"ServiceExtensionRequest"> | string
    status?: StringFilter<"ServiceExtensionRequest"> | string
    reviewStage?: StringFilter<"ServiceExtensionRequest"> | string
    currentRetirementDate?: DateTimeFilter<"ServiceExtensionRequest"> | Date | string
    requestedExtensionPeriod?: StringFilter<"ServiceExtensionRequest"> | string
    justification?: StringFilter<"ServiceExtensionRequest"> | string
    documents?: StringNullableListFilter<"ServiceExtensionRequest">
    rejectionReason?: StringNullableFilter<"ServiceExtensionRequest"> | string | null
    employeeId?: StringFilter<"ServiceExtensionRequest"> | string
    submittedById?: StringFilter<"ServiceExtensionRequest"> | string
    reviewedById?: StringNullableFilter<"ServiceExtensionRequest"> | string | null
    createdAt?: DateTimeFilter<"ServiceExtensionRequest"> | Date | string
    updatedAt?: DateTimeFilter<"ServiceExtensionRequest"> | Date | string
  }

  export type ServiceExtensionRequestUpsertWithWhereUniqueWithoutSubmittedByInput = {
    where: ServiceExtensionRequestWhereUniqueInput
    update: XOR<ServiceExtensionRequestUpdateWithoutSubmittedByInput, ServiceExtensionRequestUncheckedUpdateWithoutSubmittedByInput>
    create: XOR<ServiceExtensionRequestCreateWithoutSubmittedByInput, ServiceExtensionRequestUncheckedCreateWithoutSubmittedByInput>
  }

  export type ServiceExtensionRequestUpdateWithWhereUniqueWithoutSubmittedByInput = {
    where: ServiceExtensionRequestWhereUniqueInput
    data: XOR<ServiceExtensionRequestUpdateWithoutSubmittedByInput, ServiceExtensionRequestUncheckedUpdateWithoutSubmittedByInput>
  }

  export type ServiceExtensionRequestUpdateManyWithWhereWithoutSubmittedByInput = {
    where: ServiceExtensionRequestScalarWhereInput
    data: XOR<ServiceExtensionRequestUpdateManyMutationInput, ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByInput>
  }

  export type EmployeeUpsertWithoutUserInput = {
    update: XOR<EmployeeUpdateWithoutUserInput, EmployeeUncheckedUpdateWithoutUserInput>
    create: XOR<EmployeeCreateWithoutUserInput, EmployeeUncheckedCreateWithoutUserInput>
    where?: EmployeeWhereInput
  }

  export type EmployeeUpdateToOneWithWhereWithoutUserInput = {
    where?: EmployeeWhereInput
    data: XOR<EmployeeUpdateWithoutUserInput, EmployeeUncheckedUpdateWithoutUserInput>
  }

  export type EmployeeUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    cadreChangeRequests?: CadreChangeRequestUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUpdateManyWithoutEmployeeNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutEmployeesNestedInput
    certificates?: EmployeeCertificateUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUpdateManyWithoutEmployeeNestedInput
  }

  export type EmployeeUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    cadreChangeRequests?: CadreChangeRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    certificates?: EmployeeCertificateUncheckedUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
  }

  export type InstitutionUpsertWithoutUsersInput = {
    update: XOR<InstitutionUpdateWithoutUsersInput, InstitutionUncheckedUpdateWithoutUsersInput>
    create: XOR<InstitutionCreateWithoutUsersInput, InstitutionUncheckedCreateWithoutUsersInput>
    where?: InstitutionWhereInput
  }

  export type InstitutionUpdateToOneWithWhereWithoutUsersInput = {
    where?: InstitutionWhereInput
    data: XOR<InstitutionUpdateWithoutUsersInput, InstitutionUncheckedUpdateWithoutUsersInput>
  }

  export type InstitutionUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    employees?: EmployeeUpdateManyWithoutInstitutionNestedInput
  }

  export type InstitutionUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    employees?: EmployeeUncheckedUpdateManyWithoutInstitutionNestedInput
  }

  export type EmployeeCreateWithoutInstitutionInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    cadreChangeRequests?: CadreChangeRequestCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestCreateNestedManyWithoutEmployeeInput
    certificates?: EmployeeCertificateCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestCreateNestedManyWithoutEmployeeInput
    user?: UserCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeUncheckedCreateWithoutInstitutionInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    cadreChangeRequests?: CadreChangeRequestUncheckedCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    certificates?: EmployeeCertificateUncheckedCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestUncheckedCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestUncheckedCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    user?: UserUncheckedCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeCreateOrConnectWithoutInstitutionInput = {
    where: EmployeeWhereUniqueInput
    create: XOR<EmployeeCreateWithoutInstitutionInput, EmployeeUncheckedCreateWithoutInstitutionInput>
  }

  export type EmployeeCreateManyInstitutionInputEnvelope = {
    data: EmployeeCreateManyInstitutionInput | EmployeeCreateManyInstitutionInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutInstitutionInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutInstitutionInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutInstitutionInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutInstitutionInput, UserUncheckedCreateWithoutInstitutionInput>
  }

  export type UserCreateManyInstitutionInputEnvelope = {
    data: UserCreateManyInstitutionInput | UserCreateManyInstitutionInput[]
    skipDuplicates?: boolean
  }

  export type EmployeeUpsertWithWhereUniqueWithoutInstitutionInput = {
    where: EmployeeWhereUniqueInput
    update: XOR<EmployeeUpdateWithoutInstitutionInput, EmployeeUncheckedUpdateWithoutInstitutionInput>
    create: XOR<EmployeeCreateWithoutInstitutionInput, EmployeeUncheckedCreateWithoutInstitutionInput>
  }

  export type EmployeeUpdateWithWhereUniqueWithoutInstitutionInput = {
    where: EmployeeWhereUniqueInput
    data: XOR<EmployeeUpdateWithoutInstitutionInput, EmployeeUncheckedUpdateWithoutInstitutionInput>
  }

  export type EmployeeUpdateManyWithWhereWithoutInstitutionInput = {
    where: EmployeeScalarWhereInput
    data: XOR<EmployeeUpdateManyMutationInput, EmployeeUncheckedUpdateManyWithoutInstitutionInput>
  }

  export type EmployeeScalarWhereInput = {
    AND?: EmployeeScalarWhereInput | EmployeeScalarWhereInput[]
    OR?: EmployeeScalarWhereInput[]
    NOT?: EmployeeScalarWhereInput | EmployeeScalarWhereInput[]
    id?: StringFilter<"Employee"> | string
    employeeEntityId?: StringNullableFilter<"Employee"> | string | null
    name?: StringFilter<"Employee"> | string
    gender?: StringFilter<"Employee"> | string
    profileImageUrl?: StringNullableFilter<"Employee"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"Employee"> | Date | string | null
    placeOfBirth?: StringNullableFilter<"Employee"> | string | null
    region?: StringNullableFilter<"Employee"> | string | null
    countryOfBirth?: StringNullableFilter<"Employee"> | string | null
    zanId?: StringFilter<"Employee"> | string
    phoneNumber?: StringNullableFilter<"Employee"> | string | null
    contactAddress?: StringNullableFilter<"Employee"> | string | null
    zssfNumber?: StringNullableFilter<"Employee"> | string | null
    payrollNumber?: StringNullableFilter<"Employee"> | string | null
    cadre?: StringNullableFilter<"Employee"> | string | null
    salaryScale?: StringNullableFilter<"Employee"> | string | null
    ministry?: StringNullableFilter<"Employee"> | string | null
    department?: StringNullableFilter<"Employee"> | string | null
    appointmentType?: StringNullableFilter<"Employee"> | string | null
    contractType?: StringNullableFilter<"Employee"> | string | null
    recentTitleDate?: DateTimeNullableFilter<"Employee"> | Date | string | null
    currentReportingOffice?: StringNullableFilter<"Employee"> | string | null
    currentWorkplace?: StringNullableFilter<"Employee"> | string | null
    employmentDate?: DateTimeNullableFilter<"Employee"> | Date | string | null
    confirmationDate?: DateTimeNullableFilter<"Employee"> | Date | string | null
    retirementDate?: DateTimeNullableFilter<"Employee"> | Date | string | null
    status?: StringNullableFilter<"Employee"> | string | null
    ardhilHaliUrl?: StringNullableFilter<"Employee"> | string | null
    confirmationLetterUrl?: StringNullableFilter<"Employee"> | string | null
    jobContractUrl?: StringNullableFilter<"Employee"> | string | null
    birthCertificateUrl?: StringNullableFilter<"Employee"> | string | null
    institutionId?: StringFilter<"Employee"> | string
  }

  export type UserUpsertWithWhereUniqueWithoutInstitutionInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutInstitutionInput, UserUncheckedUpdateWithoutInstitutionInput>
    create: XOR<UserCreateWithoutInstitutionInput, UserUncheckedCreateWithoutInstitutionInput>
  }

  export type UserUpdateWithWhereUniqueWithoutInstitutionInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutInstitutionInput, UserUncheckedUpdateWithoutInstitutionInput>
  }

  export type UserUpdateManyWithWhereWithoutInstitutionInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutInstitutionInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    role?: StringFilter<"User"> | string
    active?: BoolFilter<"User"> | boolean
    employeeId?: StringNullableFilter<"User"> | string | null
    institutionId?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
  }

  export type CadreChangeRequestCreateWithoutEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    newCadre: string
    reason?: string | null
    studiedOutsideCountry?: boolean | null
    documents?: CadreChangeRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedBy?: UserCreateNestedOneWithoutReviewedCadreChangesInput
    submittedBy: UserCreateNestedOneWithoutSubmittedCadreChangesInput
  }

  export type CadreChangeRequestUncheckedCreateWithoutEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    newCadre: string
    reason?: string | null
    studiedOutsideCountry?: boolean | null
    documents?: CadreChangeRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CadreChangeRequestCreateOrConnectWithoutEmployeeInput = {
    where: CadreChangeRequestWhereUniqueInput
    create: XOR<CadreChangeRequestCreateWithoutEmployeeInput, CadreChangeRequestUncheckedCreateWithoutEmployeeInput>
  }

  export type CadreChangeRequestCreateManyEmployeeInputEnvelope = {
    data: CadreChangeRequestCreateManyEmployeeInput | CadreChangeRequestCreateManyEmployeeInput[]
    skipDuplicates?: boolean
  }

  export type ConfirmationRequestCreateWithoutEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    documents?: ConfirmationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    decisionDate?: Date | string | null
    commissionDecisionDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedBy?: UserCreateNestedOneWithoutReviewedConfirmationsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedConfirmationsInput
  }

  export type ConfirmationRequestUncheckedCreateWithoutEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    documents?: ConfirmationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    submittedById: string
    reviewedById?: string | null
    decisionDate?: Date | string | null
    commissionDecisionDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfirmationRequestCreateOrConnectWithoutEmployeeInput = {
    where: ConfirmationRequestWhereUniqueInput
    create: XOR<ConfirmationRequestCreateWithoutEmployeeInput, ConfirmationRequestUncheckedCreateWithoutEmployeeInput>
  }

  export type ConfirmationRequestCreateManyEmployeeInputEnvelope = {
    data: ConfirmationRequestCreateManyEmployeeInput | ConfirmationRequestCreateManyEmployeeInput[]
    skipDuplicates?: boolean
  }

  export type InstitutionCreateWithoutEmployeesInput = {
    id?: string
    name: string
    users?: UserCreateNestedManyWithoutInstitutionInput
  }

  export type InstitutionUncheckedCreateWithoutEmployeesInput = {
    id?: string
    name: string
    users?: UserUncheckedCreateNestedManyWithoutInstitutionInput
  }

  export type InstitutionCreateOrConnectWithoutEmployeesInput = {
    where: InstitutionWhereUniqueInput
    create: XOR<InstitutionCreateWithoutEmployeesInput, InstitutionUncheckedCreateWithoutEmployeesInput>
  }

  export type EmployeeCertificateCreateWithoutEmployeeInput = {
    id?: string
    type: string
    name: string
    url?: string | null
  }

  export type EmployeeCertificateUncheckedCreateWithoutEmployeeInput = {
    id?: string
    type: string
    name: string
    url?: string | null
  }

  export type EmployeeCertificateCreateOrConnectWithoutEmployeeInput = {
    where: EmployeeCertificateWhereUniqueInput
    create: XOR<EmployeeCertificateCreateWithoutEmployeeInput, EmployeeCertificateUncheckedCreateWithoutEmployeeInput>
  }

  export type EmployeeCertificateCreateManyEmployeeInputEnvelope = {
    data: EmployeeCertificateCreateManyEmployeeInput | EmployeeCertificateCreateManyEmployeeInput[]
    skipDuplicates?: boolean
  }

  export type LwopRequestCreateWithoutEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    duration: string
    reason: string
    documents?: LwopRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    endDate?: Date | string | null
    startDate?: Date | string | null
    reviewedBy?: UserCreateNestedOneWithoutReviewedLWOPsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedLWOPsInput
  }

  export type LwopRequestUncheckedCreateWithoutEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    duration: string
    reason: string
    documents?: LwopRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    endDate?: Date | string | null
    startDate?: Date | string | null
  }

  export type LwopRequestCreateOrConnectWithoutEmployeeInput = {
    where: LwopRequestWhereUniqueInput
    create: XOR<LwopRequestCreateWithoutEmployeeInput, LwopRequestUncheckedCreateWithoutEmployeeInput>
  }

  export type LwopRequestCreateManyEmployeeInputEnvelope = {
    data: LwopRequestCreateManyEmployeeInput | LwopRequestCreateManyEmployeeInput[]
    skipDuplicates?: boolean
  }

  export type PromotionRequestCreateWithoutEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    proposedCadre: string
    promotionType: string
    studiedOutsideCountry?: boolean | null
    documents?: PromotionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    commissionDecisionReason?: string | null
    reviewedBy?: UserCreateNestedOneWithoutReviewedPromotionsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedPromotionsInput
  }

  export type PromotionRequestUncheckedCreateWithoutEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    proposedCadre: string
    promotionType: string
    studiedOutsideCountry?: boolean | null
    documents?: PromotionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    commissionDecisionReason?: string | null
  }

  export type PromotionRequestCreateOrConnectWithoutEmployeeInput = {
    where: PromotionRequestWhereUniqueInput
    create: XOR<PromotionRequestCreateWithoutEmployeeInput, PromotionRequestUncheckedCreateWithoutEmployeeInput>
  }

  export type PromotionRequestCreateManyEmployeeInputEnvelope = {
    data: PromotionRequestCreateManyEmployeeInput | PromotionRequestCreateManyEmployeeInput[]
    skipDuplicates?: boolean
  }

  export type ResignationRequestCreateWithoutEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    effectiveDate: Date | string
    reason?: string | null
    documents?: ResignationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedBy?: UserCreateNestedOneWithoutReviewedResignationsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedResignationsInput
  }

  export type ResignationRequestUncheckedCreateWithoutEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    effectiveDate: Date | string
    reason?: string | null
    documents?: ResignationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ResignationRequestCreateOrConnectWithoutEmployeeInput = {
    where: ResignationRequestWhereUniqueInput
    create: XOR<ResignationRequestCreateWithoutEmployeeInput, ResignationRequestUncheckedCreateWithoutEmployeeInput>
  }

  export type ResignationRequestCreateManyEmployeeInputEnvelope = {
    data: ResignationRequestCreateManyEmployeeInput | ResignationRequestCreateManyEmployeeInput[]
    skipDuplicates?: boolean
  }

  export type RetirementRequestCreateWithoutEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    retirementType: string
    illnessDescription?: string | null
    proposedDate: Date | string
    delayReason?: string | null
    documents?: RetirementRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedBy?: UserCreateNestedOneWithoutReviewedRetirementsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedRetirementsInput
  }

  export type RetirementRequestUncheckedCreateWithoutEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    retirementType: string
    illnessDescription?: string | null
    proposedDate: Date | string
    delayReason?: string | null
    documents?: RetirementRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RetirementRequestCreateOrConnectWithoutEmployeeInput = {
    where: RetirementRequestWhereUniqueInput
    create: XOR<RetirementRequestCreateWithoutEmployeeInput, RetirementRequestUncheckedCreateWithoutEmployeeInput>
  }

  export type RetirementRequestCreateManyEmployeeInputEnvelope = {
    data: RetirementRequestCreateManyEmployeeInput | RetirementRequestCreateManyEmployeeInput[]
    skipDuplicates?: boolean
  }

  export type SeparationRequestCreateWithoutEmployeeInput = {
    id?: string
    type: string
    status: string
    reviewStage: string
    reason: string
    documents?: SeparationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedBy?: UserCreateNestedOneWithoutReviewedSeparationsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedSeparationsInput
  }

  export type SeparationRequestUncheckedCreateWithoutEmployeeInput = {
    id?: string
    type: string
    status: string
    reviewStage: string
    reason: string
    documents?: SeparationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SeparationRequestCreateOrConnectWithoutEmployeeInput = {
    where: SeparationRequestWhereUniqueInput
    create: XOR<SeparationRequestCreateWithoutEmployeeInput, SeparationRequestUncheckedCreateWithoutEmployeeInput>
  }

  export type SeparationRequestCreateManyEmployeeInputEnvelope = {
    data: SeparationRequestCreateManyEmployeeInput | SeparationRequestCreateManyEmployeeInput[]
    skipDuplicates?: boolean
  }

  export type ServiceExtensionRequestCreateWithoutEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    currentRetirementDate: Date | string
    requestedExtensionPeriod: string
    justification: string
    documents?: ServiceExtensionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedBy?: UserCreateNestedOneWithoutReviewedServiceExtensionsInput
    submittedBy: UserCreateNestedOneWithoutSubmittedServiceExtensionsInput
  }

  export type ServiceExtensionRequestUncheckedCreateWithoutEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    currentRetirementDate: Date | string
    requestedExtensionPeriod: string
    justification: string
    documents?: ServiceExtensionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ServiceExtensionRequestCreateOrConnectWithoutEmployeeInput = {
    where: ServiceExtensionRequestWhereUniqueInput
    create: XOR<ServiceExtensionRequestCreateWithoutEmployeeInput, ServiceExtensionRequestUncheckedCreateWithoutEmployeeInput>
  }

  export type ServiceExtensionRequestCreateManyEmployeeInputEnvelope = {
    data: ServiceExtensionRequestCreateManyEmployeeInput | ServiceExtensionRequestCreateManyEmployeeInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutEmployeeInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutEmployeeInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutEmployeeInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEmployeeInput, UserUncheckedCreateWithoutEmployeeInput>
  }

  export type CadreChangeRequestUpsertWithWhereUniqueWithoutEmployeeInput = {
    where: CadreChangeRequestWhereUniqueInput
    update: XOR<CadreChangeRequestUpdateWithoutEmployeeInput, CadreChangeRequestUncheckedUpdateWithoutEmployeeInput>
    create: XOR<CadreChangeRequestCreateWithoutEmployeeInput, CadreChangeRequestUncheckedCreateWithoutEmployeeInput>
  }

  export type CadreChangeRequestUpdateWithWhereUniqueWithoutEmployeeInput = {
    where: CadreChangeRequestWhereUniqueInput
    data: XOR<CadreChangeRequestUpdateWithoutEmployeeInput, CadreChangeRequestUncheckedUpdateWithoutEmployeeInput>
  }

  export type CadreChangeRequestUpdateManyWithWhereWithoutEmployeeInput = {
    where: CadreChangeRequestScalarWhereInput
    data: XOR<CadreChangeRequestUpdateManyMutationInput, CadreChangeRequestUncheckedUpdateManyWithoutEmployeeInput>
  }

  export type ConfirmationRequestUpsertWithWhereUniqueWithoutEmployeeInput = {
    where: ConfirmationRequestWhereUniqueInput
    update: XOR<ConfirmationRequestUpdateWithoutEmployeeInput, ConfirmationRequestUncheckedUpdateWithoutEmployeeInput>
    create: XOR<ConfirmationRequestCreateWithoutEmployeeInput, ConfirmationRequestUncheckedCreateWithoutEmployeeInput>
  }

  export type ConfirmationRequestUpdateWithWhereUniqueWithoutEmployeeInput = {
    where: ConfirmationRequestWhereUniqueInput
    data: XOR<ConfirmationRequestUpdateWithoutEmployeeInput, ConfirmationRequestUncheckedUpdateWithoutEmployeeInput>
  }

  export type ConfirmationRequestUpdateManyWithWhereWithoutEmployeeInput = {
    where: ConfirmationRequestScalarWhereInput
    data: XOR<ConfirmationRequestUpdateManyMutationInput, ConfirmationRequestUncheckedUpdateManyWithoutEmployeeInput>
  }

  export type InstitutionUpsertWithoutEmployeesInput = {
    update: XOR<InstitutionUpdateWithoutEmployeesInput, InstitutionUncheckedUpdateWithoutEmployeesInput>
    create: XOR<InstitutionCreateWithoutEmployeesInput, InstitutionUncheckedCreateWithoutEmployeesInput>
    where?: InstitutionWhereInput
  }

  export type InstitutionUpdateToOneWithWhereWithoutEmployeesInput = {
    where?: InstitutionWhereInput
    data: XOR<InstitutionUpdateWithoutEmployeesInput, InstitutionUncheckedUpdateWithoutEmployeesInput>
  }

  export type InstitutionUpdateWithoutEmployeesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    users?: UserUpdateManyWithoutInstitutionNestedInput
  }

  export type InstitutionUncheckedUpdateWithoutEmployeesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    users?: UserUncheckedUpdateManyWithoutInstitutionNestedInput
  }

  export type EmployeeCertificateUpsertWithWhereUniqueWithoutEmployeeInput = {
    where: EmployeeCertificateWhereUniqueInput
    update: XOR<EmployeeCertificateUpdateWithoutEmployeeInput, EmployeeCertificateUncheckedUpdateWithoutEmployeeInput>
    create: XOR<EmployeeCertificateCreateWithoutEmployeeInput, EmployeeCertificateUncheckedCreateWithoutEmployeeInput>
  }

  export type EmployeeCertificateUpdateWithWhereUniqueWithoutEmployeeInput = {
    where: EmployeeCertificateWhereUniqueInput
    data: XOR<EmployeeCertificateUpdateWithoutEmployeeInput, EmployeeCertificateUncheckedUpdateWithoutEmployeeInput>
  }

  export type EmployeeCertificateUpdateManyWithWhereWithoutEmployeeInput = {
    where: EmployeeCertificateScalarWhereInput
    data: XOR<EmployeeCertificateUpdateManyMutationInput, EmployeeCertificateUncheckedUpdateManyWithoutEmployeeInput>
  }

  export type EmployeeCertificateScalarWhereInput = {
    AND?: EmployeeCertificateScalarWhereInput | EmployeeCertificateScalarWhereInput[]
    OR?: EmployeeCertificateScalarWhereInput[]
    NOT?: EmployeeCertificateScalarWhereInput | EmployeeCertificateScalarWhereInput[]
    id?: StringFilter<"EmployeeCertificate"> | string
    type?: StringFilter<"EmployeeCertificate"> | string
    name?: StringFilter<"EmployeeCertificate"> | string
    url?: StringNullableFilter<"EmployeeCertificate"> | string | null
    employeeId?: StringFilter<"EmployeeCertificate"> | string
  }

  export type LwopRequestUpsertWithWhereUniqueWithoutEmployeeInput = {
    where: LwopRequestWhereUniqueInput
    update: XOR<LwopRequestUpdateWithoutEmployeeInput, LwopRequestUncheckedUpdateWithoutEmployeeInput>
    create: XOR<LwopRequestCreateWithoutEmployeeInput, LwopRequestUncheckedCreateWithoutEmployeeInput>
  }

  export type LwopRequestUpdateWithWhereUniqueWithoutEmployeeInput = {
    where: LwopRequestWhereUniqueInput
    data: XOR<LwopRequestUpdateWithoutEmployeeInput, LwopRequestUncheckedUpdateWithoutEmployeeInput>
  }

  export type LwopRequestUpdateManyWithWhereWithoutEmployeeInput = {
    where: LwopRequestScalarWhereInput
    data: XOR<LwopRequestUpdateManyMutationInput, LwopRequestUncheckedUpdateManyWithoutEmployeeInput>
  }

  export type PromotionRequestUpsertWithWhereUniqueWithoutEmployeeInput = {
    where: PromotionRequestWhereUniqueInput
    update: XOR<PromotionRequestUpdateWithoutEmployeeInput, PromotionRequestUncheckedUpdateWithoutEmployeeInput>
    create: XOR<PromotionRequestCreateWithoutEmployeeInput, PromotionRequestUncheckedCreateWithoutEmployeeInput>
  }

  export type PromotionRequestUpdateWithWhereUniqueWithoutEmployeeInput = {
    where: PromotionRequestWhereUniqueInput
    data: XOR<PromotionRequestUpdateWithoutEmployeeInput, PromotionRequestUncheckedUpdateWithoutEmployeeInput>
  }

  export type PromotionRequestUpdateManyWithWhereWithoutEmployeeInput = {
    where: PromotionRequestScalarWhereInput
    data: XOR<PromotionRequestUpdateManyMutationInput, PromotionRequestUncheckedUpdateManyWithoutEmployeeInput>
  }

  export type ResignationRequestUpsertWithWhereUniqueWithoutEmployeeInput = {
    where: ResignationRequestWhereUniqueInput
    update: XOR<ResignationRequestUpdateWithoutEmployeeInput, ResignationRequestUncheckedUpdateWithoutEmployeeInput>
    create: XOR<ResignationRequestCreateWithoutEmployeeInput, ResignationRequestUncheckedCreateWithoutEmployeeInput>
  }

  export type ResignationRequestUpdateWithWhereUniqueWithoutEmployeeInput = {
    where: ResignationRequestWhereUniqueInput
    data: XOR<ResignationRequestUpdateWithoutEmployeeInput, ResignationRequestUncheckedUpdateWithoutEmployeeInput>
  }

  export type ResignationRequestUpdateManyWithWhereWithoutEmployeeInput = {
    where: ResignationRequestScalarWhereInput
    data: XOR<ResignationRequestUpdateManyMutationInput, ResignationRequestUncheckedUpdateManyWithoutEmployeeInput>
  }

  export type RetirementRequestUpsertWithWhereUniqueWithoutEmployeeInput = {
    where: RetirementRequestWhereUniqueInput
    update: XOR<RetirementRequestUpdateWithoutEmployeeInput, RetirementRequestUncheckedUpdateWithoutEmployeeInput>
    create: XOR<RetirementRequestCreateWithoutEmployeeInput, RetirementRequestUncheckedCreateWithoutEmployeeInput>
  }

  export type RetirementRequestUpdateWithWhereUniqueWithoutEmployeeInput = {
    where: RetirementRequestWhereUniqueInput
    data: XOR<RetirementRequestUpdateWithoutEmployeeInput, RetirementRequestUncheckedUpdateWithoutEmployeeInput>
  }

  export type RetirementRequestUpdateManyWithWhereWithoutEmployeeInput = {
    where: RetirementRequestScalarWhereInput
    data: XOR<RetirementRequestUpdateManyMutationInput, RetirementRequestUncheckedUpdateManyWithoutEmployeeInput>
  }

  export type SeparationRequestUpsertWithWhereUniqueWithoutEmployeeInput = {
    where: SeparationRequestWhereUniqueInput
    update: XOR<SeparationRequestUpdateWithoutEmployeeInput, SeparationRequestUncheckedUpdateWithoutEmployeeInput>
    create: XOR<SeparationRequestCreateWithoutEmployeeInput, SeparationRequestUncheckedCreateWithoutEmployeeInput>
  }

  export type SeparationRequestUpdateWithWhereUniqueWithoutEmployeeInput = {
    where: SeparationRequestWhereUniqueInput
    data: XOR<SeparationRequestUpdateWithoutEmployeeInput, SeparationRequestUncheckedUpdateWithoutEmployeeInput>
  }

  export type SeparationRequestUpdateManyWithWhereWithoutEmployeeInput = {
    where: SeparationRequestScalarWhereInput
    data: XOR<SeparationRequestUpdateManyMutationInput, SeparationRequestUncheckedUpdateManyWithoutEmployeeInput>
  }

  export type ServiceExtensionRequestUpsertWithWhereUniqueWithoutEmployeeInput = {
    where: ServiceExtensionRequestWhereUniqueInput
    update: XOR<ServiceExtensionRequestUpdateWithoutEmployeeInput, ServiceExtensionRequestUncheckedUpdateWithoutEmployeeInput>
    create: XOR<ServiceExtensionRequestCreateWithoutEmployeeInput, ServiceExtensionRequestUncheckedCreateWithoutEmployeeInput>
  }

  export type ServiceExtensionRequestUpdateWithWhereUniqueWithoutEmployeeInput = {
    where: ServiceExtensionRequestWhereUniqueInput
    data: XOR<ServiceExtensionRequestUpdateWithoutEmployeeInput, ServiceExtensionRequestUncheckedUpdateWithoutEmployeeInput>
  }

  export type ServiceExtensionRequestUpdateManyWithWhereWithoutEmployeeInput = {
    where: ServiceExtensionRequestScalarWhereInput
    data: XOR<ServiceExtensionRequestUpdateManyMutationInput, ServiceExtensionRequestUncheckedUpdateManyWithoutEmployeeInput>
  }

  export type UserUpsertWithoutEmployeeInput = {
    update: XOR<UserUpdateWithoutEmployeeInput, UserUncheckedUpdateWithoutEmployeeInput>
    create: XOR<UserCreateWithoutEmployeeInput, UserUncheckedCreateWithoutEmployeeInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutEmployeeInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutEmployeeInput, UserUncheckedUpdateWithoutEmployeeInput>
  }

  export type UserUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type EmployeeCreateWithoutCertificatesInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    cadreChangeRequests?: CadreChangeRequestCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestCreateNestedManyWithoutEmployeeInput
    institution: InstitutionCreateNestedOneWithoutEmployeesInput
    lwopRequests?: LwopRequestCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestCreateNestedManyWithoutEmployeeInput
    user?: UserCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeUncheckedCreateWithoutCertificatesInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    institutionId: string
    cadreChangeRequests?: CadreChangeRequestUncheckedCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestUncheckedCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestUncheckedCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    user?: UserUncheckedCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeCreateOrConnectWithoutCertificatesInput = {
    where: EmployeeWhereUniqueInput
    create: XOR<EmployeeCreateWithoutCertificatesInput, EmployeeUncheckedCreateWithoutCertificatesInput>
  }

  export type EmployeeUpsertWithoutCertificatesInput = {
    update: XOR<EmployeeUpdateWithoutCertificatesInput, EmployeeUncheckedUpdateWithoutCertificatesInput>
    create: XOR<EmployeeCreateWithoutCertificatesInput, EmployeeUncheckedCreateWithoutCertificatesInput>
    where?: EmployeeWhereInput
  }

  export type EmployeeUpdateToOneWithWhereWithoutCertificatesInput = {
    where?: EmployeeWhereInput
    data: XOR<EmployeeUpdateWithoutCertificatesInput, EmployeeUncheckedUpdateWithoutCertificatesInput>
  }

  export type EmployeeUpdateWithoutCertificatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    cadreChangeRequests?: CadreChangeRequestUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUpdateManyWithoutEmployeeNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutEmployeesNestedInput
    lwopRequests?: LwopRequestUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUpdateManyWithoutEmployeeNestedInput
    user?: UserUpdateOneWithoutEmployeeNestedInput
  }

  export type EmployeeUncheckedUpdateWithoutCertificatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    cadreChangeRequests?: CadreChangeRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    user?: UserUncheckedUpdateOneWithoutEmployeeNestedInput
  }

  export type EmployeeCreateWithoutConfirmationRequestsInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    cadreChangeRequests?: CadreChangeRequestCreateNestedManyWithoutEmployeeInput
    institution: InstitutionCreateNestedOneWithoutEmployeesInput
    certificates?: EmployeeCertificateCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestCreateNestedManyWithoutEmployeeInput
    user?: UserCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeUncheckedCreateWithoutConfirmationRequestsInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    institutionId: string
    cadreChangeRequests?: CadreChangeRequestUncheckedCreateNestedManyWithoutEmployeeInput
    certificates?: EmployeeCertificateUncheckedCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestUncheckedCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestUncheckedCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    user?: UserUncheckedCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeCreateOrConnectWithoutConfirmationRequestsInput = {
    where: EmployeeWhereUniqueInput
    create: XOR<EmployeeCreateWithoutConfirmationRequestsInput, EmployeeUncheckedCreateWithoutConfirmationRequestsInput>
  }

  export type UserCreateWithoutReviewedConfirmationsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutReviewedConfirmationsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutReviewedConfirmationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewedConfirmationsInput, UserUncheckedCreateWithoutReviewedConfirmationsInput>
  }

  export type UserCreateWithoutSubmittedConfirmationsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutSubmittedConfirmationsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutSubmittedConfirmationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubmittedConfirmationsInput, UserUncheckedCreateWithoutSubmittedConfirmationsInput>
  }

  export type EmployeeUpsertWithoutConfirmationRequestsInput = {
    update: XOR<EmployeeUpdateWithoutConfirmationRequestsInput, EmployeeUncheckedUpdateWithoutConfirmationRequestsInput>
    create: XOR<EmployeeCreateWithoutConfirmationRequestsInput, EmployeeUncheckedCreateWithoutConfirmationRequestsInput>
    where?: EmployeeWhereInput
  }

  export type EmployeeUpdateToOneWithWhereWithoutConfirmationRequestsInput = {
    where?: EmployeeWhereInput
    data: XOR<EmployeeUpdateWithoutConfirmationRequestsInput, EmployeeUncheckedUpdateWithoutConfirmationRequestsInput>
  }

  export type EmployeeUpdateWithoutConfirmationRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    cadreChangeRequests?: CadreChangeRequestUpdateManyWithoutEmployeeNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutEmployeesNestedInput
    certificates?: EmployeeCertificateUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUpdateManyWithoutEmployeeNestedInput
    user?: UserUpdateOneWithoutEmployeeNestedInput
  }

  export type EmployeeUncheckedUpdateWithoutConfirmationRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    cadreChangeRequests?: CadreChangeRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    certificates?: EmployeeCertificateUncheckedUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    user?: UserUncheckedUpdateOneWithoutEmployeeNestedInput
  }

  export type UserUpsertWithoutReviewedConfirmationsInput = {
    update: XOR<UserUpdateWithoutReviewedConfirmationsInput, UserUncheckedUpdateWithoutReviewedConfirmationsInput>
    create: XOR<UserCreateWithoutReviewedConfirmationsInput, UserUncheckedCreateWithoutReviewedConfirmationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewedConfirmationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewedConfirmationsInput, UserUncheckedUpdateWithoutReviewedConfirmationsInput>
  }

  export type UserUpdateWithoutReviewedConfirmationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewedConfirmationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type UserUpsertWithoutSubmittedConfirmationsInput = {
    update: XOR<UserUpdateWithoutSubmittedConfirmationsInput, UserUncheckedUpdateWithoutSubmittedConfirmationsInput>
    create: XOR<UserCreateWithoutSubmittedConfirmationsInput, UserUncheckedCreateWithoutSubmittedConfirmationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSubmittedConfirmationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSubmittedConfirmationsInput, UserUncheckedUpdateWithoutSubmittedConfirmationsInput>
  }

  export type UserUpdateWithoutSubmittedConfirmationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSubmittedConfirmationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type EmployeeCreateWithoutPromotionRequestsInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    cadreChangeRequests?: CadreChangeRequestCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestCreateNestedManyWithoutEmployeeInput
    institution: InstitutionCreateNestedOneWithoutEmployeesInput
    certificates?: EmployeeCertificateCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestCreateNestedManyWithoutEmployeeInput
    user?: UserCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeUncheckedCreateWithoutPromotionRequestsInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    institutionId: string
    cadreChangeRequests?: CadreChangeRequestUncheckedCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    certificates?: EmployeeCertificateUncheckedCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestUncheckedCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestUncheckedCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    user?: UserUncheckedCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeCreateOrConnectWithoutPromotionRequestsInput = {
    where: EmployeeWhereUniqueInput
    create: XOR<EmployeeCreateWithoutPromotionRequestsInput, EmployeeUncheckedCreateWithoutPromotionRequestsInput>
  }

  export type UserCreateWithoutReviewedPromotionsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutReviewedPromotionsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutReviewedPromotionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewedPromotionsInput, UserUncheckedCreateWithoutReviewedPromotionsInput>
  }

  export type UserCreateWithoutSubmittedPromotionsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutSubmittedPromotionsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutSubmittedPromotionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubmittedPromotionsInput, UserUncheckedCreateWithoutSubmittedPromotionsInput>
  }

  export type EmployeeUpsertWithoutPromotionRequestsInput = {
    update: XOR<EmployeeUpdateWithoutPromotionRequestsInput, EmployeeUncheckedUpdateWithoutPromotionRequestsInput>
    create: XOR<EmployeeCreateWithoutPromotionRequestsInput, EmployeeUncheckedCreateWithoutPromotionRequestsInput>
    where?: EmployeeWhereInput
  }

  export type EmployeeUpdateToOneWithWhereWithoutPromotionRequestsInput = {
    where?: EmployeeWhereInput
    data: XOR<EmployeeUpdateWithoutPromotionRequestsInput, EmployeeUncheckedUpdateWithoutPromotionRequestsInput>
  }

  export type EmployeeUpdateWithoutPromotionRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    cadreChangeRequests?: CadreChangeRequestUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUpdateManyWithoutEmployeeNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutEmployeesNestedInput
    certificates?: EmployeeCertificateUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUpdateManyWithoutEmployeeNestedInput
    user?: UserUpdateOneWithoutEmployeeNestedInput
  }

  export type EmployeeUncheckedUpdateWithoutPromotionRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    cadreChangeRequests?: CadreChangeRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    certificates?: EmployeeCertificateUncheckedUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    user?: UserUncheckedUpdateOneWithoutEmployeeNestedInput
  }

  export type UserUpsertWithoutReviewedPromotionsInput = {
    update: XOR<UserUpdateWithoutReviewedPromotionsInput, UserUncheckedUpdateWithoutReviewedPromotionsInput>
    create: XOR<UserCreateWithoutReviewedPromotionsInput, UserUncheckedCreateWithoutReviewedPromotionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewedPromotionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewedPromotionsInput, UserUncheckedUpdateWithoutReviewedPromotionsInput>
  }

  export type UserUpdateWithoutReviewedPromotionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewedPromotionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type UserUpsertWithoutSubmittedPromotionsInput = {
    update: XOR<UserUpdateWithoutSubmittedPromotionsInput, UserUncheckedUpdateWithoutSubmittedPromotionsInput>
    create: XOR<UserCreateWithoutSubmittedPromotionsInput, UserUncheckedCreateWithoutSubmittedPromotionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSubmittedPromotionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSubmittedPromotionsInput, UserUncheckedUpdateWithoutSubmittedPromotionsInput>
  }

  export type UserUpdateWithoutSubmittedPromotionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSubmittedPromotionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type EmployeeCreateWithoutLwopRequestsInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    cadreChangeRequests?: CadreChangeRequestCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestCreateNestedManyWithoutEmployeeInput
    institution: InstitutionCreateNestedOneWithoutEmployeesInput
    certificates?: EmployeeCertificateCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestCreateNestedManyWithoutEmployeeInput
    user?: UserCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeUncheckedCreateWithoutLwopRequestsInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    institutionId: string
    cadreChangeRequests?: CadreChangeRequestUncheckedCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    certificates?: EmployeeCertificateUncheckedCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestUncheckedCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    user?: UserUncheckedCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeCreateOrConnectWithoutLwopRequestsInput = {
    where: EmployeeWhereUniqueInput
    create: XOR<EmployeeCreateWithoutLwopRequestsInput, EmployeeUncheckedCreateWithoutLwopRequestsInput>
  }

  export type UserCreateWithoutReviewedLWOPsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutReviewedLWOPsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutReviewedLWOPsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewedLWOPsInput, UserUncheckedCreateWithoutReviewedLWOPsInput>
  }

  export type UserCreateWithoutSubmittedLWOPsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutSubmittedLWOPsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutSubmittedLWOPsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubmittedLWOPsInput, UserUncheckedCreateWithoutSubmittedLWOPsInput>
  }

  export type EmployeeUpsertWithoutLwopRequestsInput = {
    update: XOR<EmployeeUpdateWithoutLwopRequestsInput, EmployeeUncheckedUpdateWithoutLwopRequestsInput>
    create: XOR<EmployeeCreateWithoutLwopRequestsInput, EmployeeUncheckedCreateWithoutLwopRequestsInput>
    where?: EmployeeWhereInput
  }

  export type EmployeeUpdateToOneWithWhereWithoutLwopRequestsInput = {
    where?: EmployeeWhereInput
    data: XOR<EmployeeUpdateWithoutLwopRequestsInput, EmployeeUncheckedUpdateWithoutLwopRequestsInput>
  }

  export type EmployeeUpdateWithoutLwopRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    cadreChangeRequests?: CadreChangeRequestUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUpdateManyWithoutEmployeeNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutEmployeesNestedInput
    certificates?: EmployeeCertificateUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUpdateManyWithoutEmployeeNestedInput
    user?: UserUpdateOneWithoutEmployeeNestedInput
  }

  export type EmployeeUncheckedUpdateWithoutLwopRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    cadreChangeRequests?: CadreChangeRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    certificates?: EmployeeCertificateUncheckedUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    user?: UserUncheckedUpdateOneWithoutEmployeeNestedInput
  }

  export type UserUpsertWithoutReviewedLWOPsInput = {
    update: XOR<UserUpdateWithoutReviewedLWOPsInput, UserUncheckedUpdateWithoutReviewedLWOPsInput>
    create: XOR<UserCreateWithoutReviewedLWOPsInput, UserUncheckedCreateWithoutReviewedLWOPsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewedLWOPsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewedLWOPsInput, UserUncheckedUpdateWithoutReviewedLWOPsInput>
  }

  export type UserUpdateWithoutReviewedLWOPsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewedLWOPsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type UserUpsertWithoutSubmittedLWOPsInput = {
    update: XOR<UserUpdateWithoutSubmittedLWOPsInput, UserUncheckedUpdateWithoutSubmittedLWOPsInput>
    create: XOR<UserCreateWithoutSubmittedLWOPsInput, UserUncheckedCreateWithoutSubmittedLWOPsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSubmittedLWOPsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSubmittedLWOPsInput, UserUncheckedUpdateWithoutSubmittedLWOPsInput>
  }

  export type UserUpdateWithoutSubmittedLWOPsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSubmittedLWOPsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type EmployeeCreateWithoutCadreChangeRequestsInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    confirmationRequests?: ConfirmationRequestCreateNestedManyWithoutEmployeeInput
    institution: InstitutionCreateNestedOneWithoutEmployeesInput
    certificates?: EmployeeCertificateCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestCreateNestedManyWithoutEmployeeInput
    user?: UserCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeUncheckedCreateWithoutCadreChangeRequestsInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    institutionId: string
    confirmationRequests?: ConfirmationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    certificates?: EmployeeCertificateUncheckedCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestUncheckedCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestUncheckedCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    user?: UserUncheckedCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeCreateOrConnectWithoutCadreChangeRequestsInput = {
    where: EmployeeWhereUniqueInput
    create: XOR<EmployeeCreateWithoutCadreChangeRequestsInput, EmployeeUncheckedCreateWithoutCadreChangeRequestsInput>
  }

  export type UserCreateWithoutReviewedCadreChangesInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutReviewedCadreChangesInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutReviewedCadreChangesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewedCadreChangesInput, UserUncheckedCreateWithoutReviewedCadreChangesInput>
  }

  export type UserCreateWithoutSubmittedCadreChangesInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutSubmittedCadreChangesInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutSubmittedCadreChangesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubmittedCadreChangesInput, UserUncheckedCreateWithoutSubmittedCadreChangesInput>
  }

  export type EmployeeUpsertWithoutCadreChangeRequestsInput = {
    update: XOR<EmployeeUpdateWithoutCadreChangeRequestsInput, EmployeeUncheckedUpdateWithoutCadreChangeRequestsInput>
    create: XOR<EmployeeCreateWithoutCadreChangeRequestsInput, EmployeeUncheckedCreateWithoutCadreChangeRequestsInput>
    where?: EmployeeWhereInput
  }

  export type EmployeeUpdateToOneWithWhereWithoutCadreChangeRequestsInput = {
    where?: EmployeeWhereInput
    data: XOR<EmployeeUpdateWithoutCadreChangeRequestsInput, EmployeeUncheckedUpdateWithoutCadreChangeRequestsInput>
  }

  export type EmployeeUpdateWithoutCadreChangeRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationRequests?: ConfirmationRequestUpdateManyWithoutEmployeeNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutEmployeesNestedInput
    certificates?: EmployeeCertificateUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUpdateManyWithoutEmployeeNestedInput
    user?: UserUpdateOneWithoutEmployeeNestedInput
  }

  export type EmployeeUncheckedUpdateWithoutCadreChangeRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    confirmationRequests?: ConfirmationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    certificates?: EmployeeCertificateUncheckedUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    user?: UserUncheckedUpdateOneWithoutEmployeeNestedInput
  }

  export type UserUpsertWithoutReviewedCadreChangesInput = {
    update: XOR<UserUpdateWithoutReviewedCadreChangesInput, UserUncheckedUpdateWithoutReviewedCadreChangesInput>
    create: XOR<UserCreateWithoutReviewedCadreChangesInput, UserUncheckedCreateWithoutReviewedCadreChangesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewedCadreChangesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewedCadreChangesInput, UserUncheckedUpdateWithoutReviewedCadreChangesInput>
  }

  export type UserUpdateWithoutReviewedCadreChangesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewedCadreChangesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type UserUpsertWithoutSubmittedCadreChangesInput = {
    update: XOR<UserUpdateWithoutSubmittedCadreChangesInput, UserUncheckedUpdateWithoutSubmittedCadreChangesInput>
    create: XOR<UserCreateWithoutSubmittedCadreChangesInput, UserUncheckedCreateWithoutSubmittedCadreChangesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSubmittedCadreChangesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSubmittedCadreChangesInput, UserUncheckedUpdateWithoutSubmittedCadreChangesInput>
  }

  export type UserUpdateWithoutSubmittedCadreChangesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSubmittedCadreChangesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type EmployeeCreateWithoutRetirementRequestsInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    cadreChangeRequests?: CadreChangeRequestCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestCreateNestedManyWithoutEmployeeInput
    institution: InstitutionCreateNestedOneWithoutEmployeesInput
    certificates?: EmployeeCertificateCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestCreateNestedManyWithoutEmployeeInput
    user?: UserCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeUncheckedCreateWithoutRetirementRequestsInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    institutionId: string
    cadreChangeRequests?: CadreChangeRequestUncheckedCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    certificates?: EmployeeCertificateUncheckedCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestUncheckedCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    user?: UserUncheckedCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeCreateOrConnectWithoutRetirementRequestsInput = {
    where: EmployeeWhereUniqueInput
    create: XOR<EmployeeCreateWithoutRetirementRequestsInput, EmployeeUncheckedCreateWithoutRetirementRequestsInput>
  }

  export type UserCreateWithoutReviewedRetirementsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutReviewedRetirementsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutReviewedRetirementsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewedRetirementsInput, UserUncheckedCreateWithoutReviewedRetirementsInput>
  }

  export type UserCreateWithoutSubmittedRetirementsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutSubmittedRetirementsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutSubmittedRetirementsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubmittedRetirementsInput, UserUncheckedCreateWithoutSubmittedRetirementsInput>
  }

  export type EmployeeUpsertWithoutRetirementRequestsInput = {
    update: XOR<EmployeeUpdateWithoutRetirementRequestsInput, EmployeeUncheckedUpdateWithoutRetirementRequestsInput>
    create: XOR<EmployeeCreateWithoutRetirementRequestsInput, EmployeeUncheckedCreateWithoutRetirementRequestsInput>
    where?: EmployeeWhereInput
  }

  export type EmployeeUpdateToOneWithWhereWithoutRetirementRequestsInput = {
    where?: EmployeeWhereInput
    data: XOR<EmployeeUpdateWithoutRetirementRequestsInput, EmployeeUncheckedUpdateWithoutRetirementRequestsInput>
  }

  export type EmployeeUpdateWithoutRetirementRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    cadreChangeRequests?: CadreChangeRequestUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUpdateManyWithoutEmployeeNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutEmployeesNestedInput
    certificates?: EmployeeCertificateUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUpdateManyWithoutEmployeeNestedInput
    user?: UserUpdateOneWithoutEmployeeNestedInput
  }

  export type EmployeeUncheckedUpdateWithoutRetirementRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    cadreChangeRequests?: CadreChangeRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    certificates?: EmployeeCertificateUncheckedUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    user?: UserUncheckedUpdateOneWithoutEmployeeNestedInput
  }

  export type UserUpsertWithoutReviewedRetirementsInput = {
    update: XOR<UserUpdateWithoutReviewedRetirementsInput, UserUncheckedUpdateWithoutReviewedRetirementsInput>
    create: XOR<UserCreateWithoutReviewedRetirementsInput, UserUncheckedCreateWithoutReviewedRetirementsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewedRetirementsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewedRetirementsInput, UserUncheckedUpdateWithoutReviewedRetirementsInput>
  }

  export type UserUpdateWithoutReviewedRetirementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewedRetirementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type UserUpsertWithoutSubmittedRetirementsInput = {
    update: XOR<UserUpdateWithoutSubmittedRetirementsInput, UserUncheckedUpdateWithoutSubmittedRetirementsInput>
    create: XOR<UserCreateWithoutSubmittedRetirementsInput, UserUncheckedCreateWithoutSubmittedRetirementsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSubmittedRetirementsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSubmittedRetirementsInput, UserUncheckedUpdateWithoutSubmittedRetirementsInput>
  }

  export type UserUpdateWithoutSubmittedRetirementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSubmittedRetirementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type EmployeeCreateWithoutResignationRequestsInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    cadreChangeRequests?: CadreChangeRequestCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestCreateNestedManyWithoutEmployeeInput
    institution: InstitutionCreateNestedOneWithoutEmployeesInput
    certificates?: EmployeeCertificateCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestCreateNestedManyWithoutEmployeeInput
    user?: UserCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeUncheckedCreateWithoutResignationRequestsInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    institutionId: string
    cadreChangeRequests?: CadreChangeRequestUncheckedCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    certificates?: EmployeeCertificateUncheckedCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestUncheckedCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestUncheckedCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    user?: UserUncheckedCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeCreateOrConnectWithoutResignationRequestsInput = {
    where: EmployeeWhereUniqueInput
    create: XOR<EmployeeCreateWithoutResignationRequestsInput, EmployeeUncheckedCreateWithoutResignationRequestsInput>
  }

  export type UserCreateWithoutReviewedResignationsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutReviewedResignationsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutReviewedResignationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewedResignationsInput, UserUncheckedCreateWithoutReviewedResignationsInput>
  }

  export type UserCreateWithoutSubmittedResignationsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutSubmittedResignationsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutSubmittedResignationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubmittedResignationsInput, UserUncheckedCreateWithoutSubmittedResignationsInput>
  }

  export type EmployeeUpsertWithoutResignationRequestsInput = {
    update: XOR<EmployeeUpdateWithoutResignationRequestsInput, EmployeeUncheckedUpdateWithoutResignationRequestsInput>
    create: XOR<EmployeeCreateWithoutResignationRequestsInput, EmployeeUncheckedCreateWithoutResignationRequestsInput>
    where?: EmployeeWhereInput
  }

  export type EmployeeUpdateToOneWithWhereWithoutResignationRequestsInput = {
    where?: EmployeeWhereInput
    data: XOR<EmployeeUpdateWithoutResignationRequestsInput, EmployeeUncheckedUpdateWithoutResignationRequestsInput>
  }

  export type EmployeeUpdateWithoutResignationRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    cadreChangeRequests?: CadreChangeRequestUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUpdateManyWithoutEmployeeNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutEmployeesNestedInput
    certificates?: EmployeeCertificateUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUpdateManyWithoutEmployeeNestedInput
    user?: UserUpdateOneWithoutEmployeeNestedInput
  }

  export type EmployeeUncheckedUpdateWithoutResignationRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    cadreChangeRequests?: CadreChangeRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    certificates?: EmployeeCertificateUncheckedUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    user?: UserUncheckedUpdateOneWithoutEmployeeNestedInput
  }

  export type UserUpsertWithoutReviewedResignationsInput = {
    update: XOR<UserUpdateWithoutReviewedResignationsInput, UserUncheckedUpdateWithoutReviewedResignationsInput>
    create: XOR<UserCreateWithoutReviewedResignationsInput, UserUncheckedCreateWithoutReviewedResignationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewedResignationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewedResignationsInput, UserUncheckedUpdateWithoutReviewedResignationsInput>
  }

  export type UserUpdateWithoutReviewedResignationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewedResignationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type UserUpsertWithoutSubmittedResignationsInput = {
    update: XOR<UserUpdateWithoutSubmittedResignationsInput, UserUncheckedUpdateWithoutSubmittedResignationsInput>
    create: XOR<UserCreateWithoutSubmittedResignationsInput, UserUncheckedCreateWithoutSubmittedResignationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSubmittedResignationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSubmittedResignationsInput, UserUncheckedUpdateWithoutSubmittedResignationsInput>
  }

  export type UserUpdateWithoutSubmittedResignationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSubmittedResignationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type EmployeeCreateWithoutServiceExtensionRequestsInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    cadreChangeRequests?: CadreChangeRequestCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestCreateNestedManyWithoutEmployeeInput
    institution: InstitutionCreateNestedOneWithoutEmployeesInput
    certificates?: EmployeeCertificateCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestCreateNestedManyWithoutEmployeeInput
    user?: UserCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeUncheckedCreateWithoutServiceExtensionRequestsInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    institutionId: string
    cadreChangeRequests?: CadreChangeRequestUncheckedCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    certificates?: EmployeeCertificateUncheckedCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestUncheckedCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestUncheckedCreateNestedManyWithoutEmployeeInput
    separationRequests?: SeparationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    user?: UserUncheckedCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeCreateOrConnectWithoutServiceExtensionRequestsInput = {
    where: EmployeeWhereUniqueInput
    create: XOR<EmployeeCreateWithoutServiceExtensionRequestsInput, EmployeeUncheckedCreateWithoutServiceExtensionRequestsInput>
  }

  export type UserCreateWithoutReviewedServiceExtensionsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutReviewedServiceExtensionsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutReviewedServiceExtensionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewedServiceExtensionsInput, UserUncheckedCreateWithoutReviewedServiceExtensionsInput>
  }

  export type UserCreateWithoutSubmittedServiceExtensionsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutSubmittedServiceExtensionsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
  }

  export type UserCreateOrConnectWithoutSubmittedServiceExtensionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubmittedServiceExtensionsInput, UserUncheckedCreateWithoutSubmittedServiceExtensionsInput>
  }

  export type EmployeeUpsertWithoutServiceExtensionRequestsInput = {
    update: XOR<EmployeeUpdateWithoutServiceExtensionRequestsInput, EmployeeUncheckedUpdateWithoutServiceExtensionRequestsInput>
    create: XOR<EmployeeCreateWithoutServiceExtensionRequestsInput, EmployeeUncheckedCreateWithoutServiceExtensionRequestsInput>
    where?: EmployeeWhereInput
  }

  export type EmployeeUpdateToOneWithWhereWithoutServiceExtensionRequestsInput = {
    where?: EmployeeWhereInput
    data: XOR<EmployeeUpdateWithoutServiceExtensionRequestsInput, EmployeeUncheckedUpdateWithoutServiceExtensionRequestsInput>
  }

  export type EmployeeUpdateWithoutServiceExtensionRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    cadreChangeRequests?: CadreChangeRequestUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUpdateManyWithoutEmployeeNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutEmployeesNestedInput
    certificates?: EmployeeCertificateUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUpdateManyWithoutEmployeeNestedInput
    user?: UserUpdateOneWithoutEmployeeNestedInput
  }

  export type EmployeeUncheckedUpdateWithoutServiceExtensionRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    cadreChangeRequests?: CadreChangeRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    certificates?: EmployeeCertificateUncheckedUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    user?: UserUncheckedUpdateOneWithoutEmployeeNestedInput
  }

  export type UserUpsertWithoutReviewedServiceExtensionsInput = {
    update: XOR<UserUpdateWithoutReviewedServiceExtensionsInput, UserUncheckedUpdateWithoutReviewedServiceExtensionsInput>
    create: XOR<UserCreateWithoutReviewedServiceExtensionsInput, UserUncheckedCreateWithoutReviewedServiceExtensionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewedServiceExtensionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewedServiceExtensionsInput, UserUncheckedUpdateWithoutReviewedServiceExtensionsInput>
  }

  export type UserUpdateWithoutReviewedServiceExtensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewedServiceExtensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type UserUpsertWithoutSubmittedServiceExtensionsInput = {
    update: XOR<UserUpdateWithoutSubmittedServiceExtensionsInput, UserUncheckedUpdateWithoutSubmittedServiceExtensionsInput>
    create: XOR<UserCreateWithoutSubmittedServiceExtensionsInput, UserUncheckedCreateWithoutSubmittedServiceExtensionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSubmittedServiceExtensionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSubmittedServiceExtensionsInput, UserUncheckedUpdateWithoutSubmittedServiceExtensionsInput>
  }

  export type UserUpdateWithoutSubmittedServiceExtensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSubmittedServiceExtensionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
  }

  export type EmployeeCreateWithoutSeparationRequestsInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    cadreChangeRequests?: CadreChangeRequestCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestCreateNestedManyWithoutEmployeeInput
    institution: InstitutionCreateNestedOneWithoutEmployeesInput
    certificates?: EmployeeCertificateCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestCreateNestedManyWithoutEmployeeInput
    user?: UserCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeUncheckedCreateWithoutSeparationRequestsInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
    institutionId: string
    cadreChangeRequests?: CadreChangeRequestUncheckedCreateNestedManyWithoutEmployeeInput
    confirmationRequests?: ConfirmationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    certificates?: EmployeeCertificateUncheckedCreateNestedManyWithoutEmployeeInput
    lwopRequests?: LwopRequestUncheckedCreateNestedManyWithoutEmployeeInput
    promotionRequests?: PromotionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    resignationRequests?: ResignationRequestUncheckedCreateNestedManyWithoutEmployeeInput
    retirementRequests?: RetirementRequestUncheckedCreateNestedManyWithoutEmployeeInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutEmployeeInput
    user?: UserUncheckedCreateNestedOneWithoutEmployeeInput
  }

  export type EmployeeCreateOrConnectWithoutSeparationRequestsInput = {
    where: EmployeeWhereUniqueInput
    create: XOR<EmployeeCreateWithoutSeparationRequestsInput, EmployeeUncheckedCreateWithoutSeparationRequestsInput>
  }

  export type UserCreateWithoutReviewedSeparationsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutReviewedSeparationsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutReviewedSeparationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewedSeparationsInput, UserUncheckedCreateWithoutReviewedSeparationsInput>
  }

  export type UserCreateWithoutSubmittedSeparationsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutSubmittedSeparationsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutSubmittedSeparationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubmittedSeparationsInput, UserUncheckedCreateWithoutSubmittedSeparationsInput>
  }

  export type EmployeeUpsertWithoutSeparationRequestsInput = {
    update: XOR<EmployeeUpdateWithoutSeparationRequestsInput, EmployeeUncheckedUpdateWithoutSeparationRequestsInput>
    create: XOR<EmployeeCreateWithoutSeparationRequestsInput, EmployeeUncheckedCreateWithoutSeparationRequestsInput>
    where?: EmployeeWhereInput
  }

  export type EmployeeUpdateToOneWithWhereWithoutSeparationRequestsInput = {
    where?: EmployeeWhereInput
    data: XOR<EmployeeUpdateWithoutSeparationRequestsInput, EmployeeUncheckedUpdateWithoutSeparationRequestsInput>
  }

  export type EmployeeUpdateWithoutSeparationRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    cadreChangeRequests?: CadreChangeRequestUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUpdateManyWithoutEmployeeNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutEmployeesNestedInput
    certificates?: EmployeeCertificateUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUpdateManyWithoutEmployeeNestedInput
    user?: UserUpdateOneWithoutEmployeeNestedInput
  }

  export type EmployeeUncheckedUpdateWithoutSeparationRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    cadreChangeRequests?: CadreChangeRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    certificates?: EmployeeCertificateUncheckedUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    user?: UserUncheckedUpdateOneWithoutEmployeeNestedInput
  }

  export type UserUpsertWithoutReviewedSeparationsInput = {
    update: XOR<UserUpdateWithoutReviewedSeparationsInput, UserUncheckedUpdateWithoutReviewedSeparationsInput>
    create: XOR<UserCreateWithoutReviewedSeparationsInput, UserUncheckedCreateWithoutReviewedSeparationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewedSeparationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewedSeparationsInput, UserUncheckedUpdateWithoutReviewedSeparationsInput>
  }

  export type UserUpdateWithoutReviewedSeparationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewedSeparationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type UserUpsertWithoutSubmittedSeparationsInput = {
    update: XOR<UserUpdateWithoutSubmittedSeparationsInput, UserUncheckedUpdateWithoutSubmittedSeparationsInput>
    create: XOR<UserCreateWithoutSubmittedSeparationsInput, UserUncheckedCreateWithoutSubmittedSeparationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSubmittedSeparationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSubmittedSeparationsInput, UserUncheckedUpdateWithoutSubmittedSeparationsInput>
  }

  export type UserUpdateWithoutSubmittedSeparationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSubmittedSeparationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type UserCreateWithoutComplaintsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutComplaintsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutComplaintsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutComplaintsInput, UserUncheckedCreateWithoutComplaintsInput>
  }

  export type UserCreateWithoutReviewedComplaintsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutReviewedComplaintsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutReviewedComplaintsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewedComplaintsInput, UserUncheckedCreateWithoutReviewedComplaintsInput>
  }

  export type UserUpsertWithoutComplaintsInput = {
    update: XOR<UserUpdateWithoutComplaintsInput, UserUncheckedUpdateWithoutComplaintsInput>
    create: XOR<UserCreateWithoutComplaintsInput, UserUncheckedCreateWithoutComplaintsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutComplaintsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutComplaintsInput, UserUncheckedUpdateWithoutComplaintsInput>
  }

  export type UserUpdateWithoutComplaintsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutComplaintsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type UserUpsertWithoutReviewedComplaintsInput = {
    update: XOR<UserUpdateWithoutReviewedComplaintsInput, UserUncheckedUpdateWithoutReviewedComplaintsInput>
    create: XOR<UserCreateWithoutReviewedComplaintsInput, UserUncheckedCreateWithoutReviewedComplaintsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewedComplaintsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewedComplaintsInput, UserUncheckedUpdateWithoutReviewedComplaintsInput>
  }

  export type UserUpdateWithoutReviewedComplaintsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewedComplaintsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type UserCreateWithoutNotificationsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestCreateNestedManyWithoutSubmittedByInput
    reviewedPromotions?: PromotionRequestCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestCreateNestedManyWithoutSubmittedByInput
    employee?: EmployeeCreateNestedOneWithoutUserInput
    institution: InstitutionCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutNotificationsInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    institutionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedCadreChanges?: CadreChangeRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    complaints?: ComplaintUncheckedCreateNestedManyWithoutComplainantInput
    reviewedComplaints?: ComplaintUncheckedCreateNestedManyWithoutReviewedByInput
    reviewedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedConfirmations?: ConfirmationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedLWOPs?: LwopRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedPromotions?: PromotionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedResignations?: ResignationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedRetirements?: RetirementRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedSeparations?: SeparationRequestUncheckedCreateNestedManyWithoutSubmittedByInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutReviewedByInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedCreateNestedManyWithoutSubmittedByInput
  }

  export type UserCreateOrConnectWithoutNotificationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
  }

  export type UserUpsertWithoutNotificationsInput = {
    update: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type UserUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
    institution?: InstitutionUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    institutionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type CadreChangeRequestCreateManyReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    newCadre: string
    reason?: string | null
    studiedOutsideCountry?: boolean | null
    documents?: CadreChangeRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CadreChangeRequestCreateManySubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    newCadre: string
    reason?: string | null
    studiedOutsideCountry?: boolean | null
    documents?: CadreChangeRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ComplaintCreateManyComplainantInput = {
    id?: string
    complaintType: string
    subject: string
    details: string
    complainantPhoneNumber: string
    nextOfKinPhoneNumber: string
    attachments?: ComplaintCreateattachmentsInput | string[]
    status: string
    reviewStage: string
    officerComments?: string | null
    internalNotes?: string | null
    rejectionReason?: string | null
    assignedOfficerRole: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ComplaintCreateManyReviewedByInput = {
    id?: string
    complaintType: string
    subject: string
    details: string
    complainantPhoneNumber: string
    nextOfKinPhoneNumber: string
    attachments?: ComplaintCreateattachmentsInput | string[]
    status: string
    reviewStage: string
    officerComments?: string | null
    internalNotes?: string | null
    rejectionReason?: string | null
    complainantId: string
    assignedOfficerRole: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfirmationRequestCreateManyReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    documents?: ConfirmationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    decisionDate?: Date | string | null
    commissionDecisionDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfirmationRequestCreateManySubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    documents?: ConfirmationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    reviewedById?: string | null
    decisionDate?: Date | string | null
    commissionDecisionDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type LwopRequestCreateManyReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    duration: string
    reason: string
    documents?: LwopRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    endDate?: Date | string | null
    startDate?: Date | string | null
  }

  export type LwopRequestCreateManySubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    duration: string
    reason: string
    documents?: LwopRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    endDate?: Date | string | null
    startDate?: Date | string | null
  }

  export type NotificationCreateManyUserInput = {
    id?: string
    message: string
    link?: string | null
    isRead?: boolean
    createdAt?: Date | string
  }

  export type PromotionRequestCreateManyReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    proposedCadre: string
    promotionType: string
    studiedOutsideCountry?: boolean | null
    documents?: PromotionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    commissionDecisionReason?: string | null
  }

  export type PromotionRequestCreateManySubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    proposedCadre: string
    promotionType: string
    studiedOutsideCountry?: boolean | null
    documents?: PromotionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    commissionDecisionReason?: string | null
  }

  export type ResignationRequestCreateManyReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    effectiveDate: Date | string
    reason?: string | null
    documents?: ResignationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ResignationRequestCreateManySubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    effectiveDate: Date | string
    reason?: string | null
    documents?: ResignationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RetirementRequestCreateManyReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    retirementType: string
    illnessDescription?: string | null
    proposedDate: Date | string
    delayReason?: string | null
    documents?: RetirementRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RetirementRequestCreateManySubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    retirementType: string
    illnessDescription?: string | null
    proposedDate: Date | string
    delayReason?: string | null
    documents?: RetirementRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SeparationRequestCreateManyReviewedByInput = {
    id?: string
    type: string
    status: string
    reviewStage: string
    reason: string
    documents?: SeparationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SeparationRequestCreateManySubmittedByInput = {
    id?: string
    type: string
    status: string
    reviewStage: string
    reason: string
    documents?: SeparationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ServiceExtensionRequestCreateManyReviewedByInput = {
    id?: string
    status: string
    reviewStage: string
    currentRetirementDate: Date | string
    requestedExtensionPeriod: string
    justification: string
    documents?: ServiceExtensionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    submittedById: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ServiceExtensionRequestCreateManySubmittedByInput = {
    id?: string
    status: string
    reviewStage: string
    currentRetirementDate: Date | string
    requestedExtensionPeriod: string
    justification: string
    documents?: ServiceExtensionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    employeeId: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CadreChangeRequestUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    newCadre?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: CadreChangeRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutCadreChangeRequestsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedCadreChangesNestedInput
  }

  export type CadreChangeRequestUncheckedUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    newCadre?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: CadreChangeRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CadreChangeRequestUncheckedUpdateManyWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    newCadre?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: CadreChangeRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CadreChangeRequestUpdateWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    newCadre?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: CadreChangeRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutCadreChangeRequestsNestedInput
    reviewedBy?: UserUpdateOneWithoutReviewedCadreChangesNestedInput
  }

  export type CadreChangeRequestUncheckedUpdateWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    newCadre?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: CadreChangeRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    newCadre?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: CadreChangeRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComplaintUpdateWithoutComplainantInput = {
    id?: StringFieldUpdateOperationsInput | string
    complaintType?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    details?: StringFieldUpdateOperationsInput | string
    complainantPhoneNumber?: StringFieldUpdateOperationsInput | string
    nextOfKinPhoneNumber?: StringFieldUpdateOperationsInput | string
    attachments?: ComplaintUpdateattachmentsInput | string[]
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    officerComments?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    assignedOfficerRole?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedBy?: UserUpdateOneWithoutReviewedComplaintsNestedInput
  }

  export type ComplaintUncheckedUpdateWithoutComplainantInput = {
    id?: StringFieldUpdateOperationsInput | string
    complaintType?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    details?: StringFieldUpdateOperationsInput | string
    complainantPhoneNumber?: StringFieldUpdateOperationsInput | string
    nextOfKinPhoneNumber?: StringFieldUpdateOperationsInput | string
    attachments?: ComplaintUpdateattachmentsInput | string[]
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    officerComments?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    assignedOfficerRole?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComplaintUncheckedUpdateManyWithoutComplainantInput = {
    id?: StringFieldUpdateOperationsInput | string
    complaintType?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    details?: StringFieldUpdateOperationsInput | string
    complainantPhoneNumber?: StringFieldUpdateOperationsInput | string
    nextOfKinPhoneNumber?: StringFieldUpdateOperationsInput | string
    attachments?: ComplaintUpdateattachmentsInput | string[]
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    officerComments?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    assignedOfficerRole?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComplaintUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    complaintType?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    details?: StringFieldUpdateOperationsInput | string
    complainantPhoneNumber?: StringFieldUpdateOperationsInput | string
    nextOfKinPhoneNumber?: StringFieldUpdateOperationsInput | string
    attachments?: ComplaintUpdateattachmentsInput | string[]
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    officerComments?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    assignedOfficerRole?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    complainant?: UserUpdateOneRequiredWithoutComplaintsNestedInput
  }

  export type ComplaintUncheckedUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    complaintType?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    details?: StringFieldUpdateOperationsInput | string
    complainantPhoneNumber?: StringFieldUpdateOperationsInput | string
    nextOfKinPhoneNumber?: StringFieldUpdateOperationsInput | string
    attachments?: ComplaintUpdateattachmentsInput | string[]
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    officerComments?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    complainantId?: StringFieldUpdateOperationsInput | string
    assignedOfficerRole?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComplaintUncheckedUpdateManyWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    complaintType?: StringFieldUpdateOperationsInput | string
    subject?: StringFieldUpdateOperationsInput | string
    details?: StringFieldUpdateOperationsInput | string
    complainantPhoneNumber?: StringFieldUpdateOperationsInput | string
    nextOfKinPhoneNumber?: StringFieldUpdateOperationsInput | string
    attachments?: ComplaintUpdateattachmentsInput | string[]
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    officerComments?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    complainantId?: StringFieldUpdateOperationsInput | string
    assignedOfficerRole?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfirmationRequestUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    documents?: ConfirmationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commissionDecisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutConfirmationRequestsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedConfirmationsNestedInput
  }

  export type ConfirmationRequestUncheckedUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    documents?: ConfirmationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commissionDecisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfirmationRequestUncheckedUpdateManyWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    documents?: ConfirmationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commissionDecisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfirmationRequestUpdateWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    documents?: ConfirmationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commissionDecisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutConfirmationRequestsNestedInput
    reviewedBy?: UserUpdateOneWithoutReviewedConfirmationsNestedInput
  }

  export type ConfirmationRequestUncheckedUpdateWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    documents?: ConfirmationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commissionDecisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    documents?: ConfirmationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commissionDecisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LwopRequestUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    duration?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: LwopRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    employee?: EmployeeUpdateOneRequiredWithoutLwopRequestsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedLWOPsNestedInput
  }

  export type LwopRequestUncheckedUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    duration?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: LwopRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LwopRequestUncheckedUpdateManyWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    duration?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: LwopRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LwopRequestUpdateWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    duration?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: LwopRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    employee?: EmployeeUpdateOneRequiredWithoutLwopRequestsNestedInput
    reviewedBy?: UserUpdateOneWithoutReviewedLWOPsNestedInput
  }

  export type LwopRequestUncheckedUpdateWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    duration?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: LwopRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LwopRequestUncheckedUpdateManyWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    duration?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: LwopRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionRequestUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    proposedCadre?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: PromotionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    commissionDecisionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employee?: EmployeeUpdateOneRequiredWithoutPromotionRequestsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedPromotionsNestedInput
  }

  export type PromotionRequestUncheckedUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    proposedCadre?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: PromotionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    commissionDecisionReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromotionRequestUncheckedUpdateManyWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    proposedCadre?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: PromotionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    commissionDecisionReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromotionRequestUpdateWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    proposedCadre?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: PromotionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    commissionDecisionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employee?: EmployeeUpdateOneRequiredWithoutPromotionRequestsNestedInput
    reviewedBy?: UserUpdateOneWithoutReviewedPromotionsNestedInput
  }

  export type PromotionRequestUncheckedUpdateWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    proposedCadre?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: PromotionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    commissionDecisionReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromotionRequestUncheckedUpdateManyWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    proposedCadre?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: PromotionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    commissionDecisionReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ResignationRequestUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: ResignationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutResignationRequestsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedResignationsNestedInput
  }

  export type ResignationRequestUncheckedUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: ResignationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResignationRequestUncheckedUpdateManyWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: ResignationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResignationRequestUpdateWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: ResignationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutResignationRequestsNestedInput
    reviewedBy?: UserUpdateOneWithoutReviewedResignationsNestedInput
  }

  export type ResignationRequestUncheckedUpdateWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: ResignationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResignationRequestUncheckedUpdateManyWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: ResignationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RetirementRequestUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    retirementType?: StringFieldUpdateOperationsInput | string
    illnessDescription?: NullableStringFieldUpdateOperationsInput | string | null
    proposedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: RetirementRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutRetirementRequestsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedRetirementsNestedInput
  }

  export type RetirementRequestUncheckedUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    retirementType?: StringFieldUpdateOperationsInput | string
    illnessDescription?: NullableStringFieldUpdateOperationsInput | string | null
    proposedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: RetirementRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RetirementRequestUncheckedUpdateManyWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    retirementType?: StringFieldUpdateOperationsInput | string
    illnessDescription?: NullableStringFieldUpdateOperationsInput | string | null
    proposedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: RetirementRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RetirementRequestUpdateWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    retirementType?: StringFieldUpdateOperationsInput | string
    illnessDescription?: NullableStringFieldUpdateOperationsInput | string | null
    proposedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: RetirementRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutRetirementRequestsNestedInput
    reviewedBy?: UserUpdateOneWithoutReviewedRetirementsNestedInput
  }

  export type RetirementRequestUncheckedUpdateWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    retirementType?: StringFieldUpdateOperationsInput | string
    illnessDescription?: NullableStringFieldUpdateOperationsInput | string | null
    proposedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: RetirementRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RetirementRequestUncheckedUpdateManyWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    retirementType?: StringFieldUpdateOperationsInput | string
    illnessDescription?: NullableStringFieldUpdateOperationsInput | string | null
    proposedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: RetirementRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeparationRequestUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: SeparationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutSeparationRequestsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedSeparationsNestedInput
  }

  export type SeparationRequestUncheckedUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: SeparationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeparationRequestUncheckedUpdateManyWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: SeparationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeparationRequestUpdateWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: SeparationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutSeparationRequestsNestedInput
    reviewedBy?: UserUpdateOneWithoutReviewedSeparationsNestedInput
  }

  export type SeparationRequestUncheckedUpdateWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: SeparationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeparationRequestUncheckedUpdateManyWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: SeparationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServiceExtensionRequestUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    currentRetirementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requestedExtensionPeriod?: StringFieldUpdateOperationsInput | string
    justification?: StringFieldUpdateOperationsInput | string
    documents?: ServiceExtensionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutServiceExtensionRequestsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedServiceExtensionsNestedInput
  }

  export type ServiceExtensionRequestUncheckedUpdateWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    currentRetirementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requestedExtensionPeriod?: StringFieldUpdateOperationsInput | string
    justification?: StringFieldUpdateOperationsInput | string
    documents?: ServiceExtensionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    currentRetirementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requestedExtensionPeriod?: StringFieldUpdateOperationsInput | string
    justification?: StringFieldUpdateOperationsInput | string
    documents?: ServiceExtensionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    submittedById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServiceExtensionRequestUpdateWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    currentRetirementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requestedExtensionPeriod?: StringFieldUpdateOperationsInput | string
    justification?: StringFieldUpdateOperationsInput | string
    documents?: ServiceExtensionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    employee?: EmployeeUpdateOneRequiredWithoutServiceExtensionRequestsNestedInput
    reviewedBy?: UserUpdateOneWithoutReviewedServiceExtensionsNestedInput
  }

  export type ServiceExtensionRequestUncheckedUpdateWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    currentRetirementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requestedExtensionPeriod?: StringFieldUpdateOperationsInput | string
    justification?: StringFieldUpdateOperationsInput | string
    documents?: ServiceExtensionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    currentRetirementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requestedExtensionPeriod?: StringFieldUpdateOperationsInput | string
    justification?: StringFieldUpdateOperationsInput | string
    documents?: ServiceExtensionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    employeeId?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EmployeeCreateManyInstitutionInput = {
    id?: string
    employeeEntityId?: string | null
    name: string
    gender: string
    profileImageUrl?: string | null
    dateOfBirth?: Date | string | null
    placeOfBirth?: string | null
    region?: string | null
    countryOfBirth?: string | null
    zanId: string
    phoneNumber?: string | null
    contactAddress?: string | null
    zssfNumber?: string | null
    payrollNumber?: string | null
    cadre?: string | null
    salaryScale?: string | null
    ministry?: string | null
    department?: string | null
    appointmentType?: string | null
    contractType?: string | null
    recentTitleDate?: Date | string | null
    currentReportingOffice?: string | null
    currentWorkplace?: string | null
    employmentDate?: Date | string | null
    confirmationDate?: Date | string | null
    retirementDate?: Date | string | null
    status?: string | null
    ardhilHaliUrl?: string | null
    confirmationLetterUrl?: string | null
    jobContractUrl?: string | null
    birthCertificateUrl?: string | null
  }

  export type UserCreateManyInstitutionInput = {
    id?: string
    name: string
    username: string
    password: string
    role: string
    active?: boolean
    employeeId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EmployeeUpdateWithoutInstitutionInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    cadreChangeRequests?: CadreChangeRequestUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUpdateManyWithoutEmployeeNestedInput
    certificates?: EmployeeCertificateUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUpdateManyWithoutEmployeeNestedInput
    user?: UserUpdateOneWithoutEmployeeNestedInput
  }

  export type EmployeeUncheckedUpdateWithoutInstitutionInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
    cadreChangeRequests?: CadreChangeRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    confirmationRequests?: ConfirmationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    certificates?: EmployeeCertificateUncheckedUpdateManyWithoutEmployeeNestedInput
    lwopRequests?: LwopRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    promotionRequests?: PromotionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    resignationRequests?: ResignationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    retirementRequests?: RetirementRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    separationRequests?: SeparationRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    serviceExtensionRequests?: ServiceExtensionRequestUncheckedUpdateManyWithoutEmployeeNestedInput
    user?: UserUncheckedUpdateOneWithoutEmployeeNestedInput
  }

  export type EmployeeUncheckedUpdateManyWithoutInstitutionInput = {
    id?: StringFieldUpdateOperationsInput | string
    employeeEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    placeOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    countryOfBirth?: NullableStringFieldUpdateOperationsInput | string | null
    zanId?: StringFieldUpdateOperationsInput | string
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    contactAddress?: NullableStringFieldUpdateOperationsInput | string | null
    zssfNumber?: NullableStringFieldUpdateOperationsInput | string | null
    payrollNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cadre?: NullableStringFieldUpdateOperationsInput | string | null
    salaryScale?: NullableStringFieldUpdateOperationsInput | string | null
    ministry?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    appointmentType?: NullableStringFieldUpdateOperationsInput | string | null
    contractType?: NullableStringFieldUpdateOperationsInput | string | null
    recentTitleDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentReportingOffice?: NullableStringFieldUpdateOperationsInput | string | null
    currentWorkplace?: NullableStringFieldUpdateOperationsInput | string | null
    employmentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    retirementDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    ardhilHaliUrl?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationLetterUrl?: NullableStringFieldUpdateOperationsInput | string | null
    jobContractUrl?: NullableStringFieldUpdateOperationsInput | string | null
    birthCertificateUrl?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUpdateWithoutInstitutionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUpdateManyWithoutSubmittedByNestedInput
    employee?: EmployeeUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutInstitutionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedCadreChanges?: CadreChangeRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    complaints?: ComplaintUncheckedUpdateManyWithoutComplainantNestedInput
    reviewedComplaints?: ComplaintUncheckedUpdateManyWithoutReviewedByNestedInput
    reviewedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedConfirmations?: ConfirmationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedLWOPs?: LwopRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedLWOPs?: LwopRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reviewedPromotions?: PromotionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedPromotions?: PromotionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedResignations?: ResignationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedResignations?: ResignationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedRetirements?: RetirementRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedRetirements?: RetirementRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedSeparations?: SeparationRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedSeparations?: SeparationRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
    reviewedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutReviewedByNestedInput
    submittedServiceExtensions?: ServiceExtensionRequestUncheckedUpdateManyWithoutSubmittedByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutInstitutionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CadreChangeRequestCreateManyEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    newCadre: string
    reason?: string | null
    studiedOutsideCountry?: boolean | null
    documents?: CadreChangeRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConfirmationRequestCreateManyEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    documents?: ConfirmationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    submittedById: string
    reviewedById?: string | null
    decisionDate?: Date | string | null
    commissionDecisionDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EmployeeCertificateCreateManyEmployeeInput = {
    id?: string
    type: string
    name: string
    url?: string | null
  }

  export type LwopRequestCreateManyEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    duration: string
    reason: string
    documents?: LwopRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    endDate?: Date | string | null
    startDate?: Date | string | null
  }

  export type PromotionRequestCreateManyEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    proposedCadre: string
    promotionType: string
    studiedOutsideCountry?: boolean | null
    documents?: PromotionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    commissionDecisionReason?: string | null
  }

  export type ResignationRequestCreateManyEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    effectiveDate: Date | string
    reason?: string | null
    documents?: ResignationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RetirementRequestCreateManyEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    retirementType: string
    illnessDescription?: string | null
    proposedDate: Date | string
    delayReason?: string | null
    documents?: RetirementRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SeparationRequestCreateManyEmployeeInput = {
    id?: string
    type: string
    status: string
    reviewStage: string
    reason: string
    documents?: SeparationRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ServiceExtensionRequestCreateManyEmployeeInput = {
    id?: string
    status: string
    reviewStage: string
    currentRetirementDate: Date | string
    requestedExtensionPeriod: string
    justification: string
    documents?: ServiceExtensionRequestCreatedocumentsInput | string[]
    rejectionReason?: string | null
    submittedById: string
    reviewedById?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CadreChangeRequestUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    newCadre?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: CadreChangeRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedBy?: UserUpdateOneWithoutReviewedCadreChangesNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedCadreChangesNestedInput
  }

  export type CadreChangeRequestUncheckedUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    newCadre?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: CadreChangeRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CadreChangeRequestUncheckedUpdateManyWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    newCadre?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: CadreChangeRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfirmationRequestUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    documents?: ConfirmationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commissionDecisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedBy?: UserUpdateOneWithoutReviewedConfirmationsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedConfirmationsNestedInput
  }

  export type ConfirmationRequestUncheckedUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    documents?: ConfirmationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commissionDecisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConfirmationRequestUncheckedUpdateManyWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    documents?: ConfirmationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    commissionDecisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EmployeeCertificateUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EmployeeCertificateUncheckedUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EmployeeCertificateUncheckedUpdateManyWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LwopRequestUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    duration?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: LwopRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: UserUpdateOneWithoutReviewedLWOPsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedLWOPsNestedInput
  }

  export type LwopRequestUncheckedUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    duration?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: LwopRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LwopRequestUncheckedUpdateManyWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    duration?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: LwopRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PromotionRequestUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    proposedCadre?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: PromotionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    commissionDecisionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: UserUpdateOneWithoutReviewedPromotionsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedPromotionsNestedInput
  }

  export type PromotionRequestUncheckedUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    proposedCadre?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: PromotionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    commissionDecisionReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromotionRequestUncheckedUpdateManyWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    proposedCadre?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    studiedOutsideCountry?: NullableBoolFieldUpdateOperationsInput | boolean | null
    documents?: PromotionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    commissionDecisionReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ResignationRequestUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: ResignationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedBy?: UserUpdateOneWithoutReviewedResignationsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedResignationsNestedInput
  }

  export type ResignationRequestUncheckedUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: ResignationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResignationRequestUncheckedUpdateManyWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: ResignationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RetirementRequestUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    retirementType?: StringFieldUpdateOperationsInput | string
    illnessDescription?: NullableStringFieldUpdateOperationsInput | string | null
    proposedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: RetirementRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedBy?: UserUpdateOneWithoutReviewedRetirementsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedRetirementsNestedInput
  }

  export type RetirementRequestUncheckedUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    retirementType?: StringFieldUpdateOperationsInput | string
    illnessDescription?: NullableStringFieldUpdateOperationsInput | string | null
    proposedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: RetirementRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RetirementRequestUncheckedUpdateManyWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    retirementType?: StringFieldUpdateOperationsInput | string
    illnessDescription?: NullableStringFieldUpdateOperationsInput | string | null
    proposedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    delayReason?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: RetirementRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeparationRequestUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: SeparationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedBy?: UserUpdateOneWithoutReviewedSeparationsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedSeparationsNestedInput
  }

  export type SeparationRequestUncheckedUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: SeparationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeparationRequestUncheckedUpdateManyWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    documents?: SeparationRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServiceExtensionRequestUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    currentRetirementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requestedExtensionPeriod?: StringFieldUpdateOperationsInput | string
    justification?: StringFieldUpdateOperationsInput | string
    documents?: ServiceExtensionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedBy?: UserUpdateOneWithoutReviewedServiceExtensionsNestedInput
    submittedBy?: UserUpdateOneRequiredWithoutSubmittedServiceExtensionsNestedInput
  }

  export type ServiceExtensionRequestUncheckedUpdateWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    currentRetirementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requestedExtensionPeriod?: StringFieldUpdateOperationsInput | string
    justification?: StringFieldUpdateOperationsInput | string
    documents?: ServiceExtensionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServiceExtensionRequestUncheckedUpdateManyWithoutEmployeeInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    reviewStage?: StringFieldUpdateOperationsInput | string
    currentRetirementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    requestedExtensionPeriod?: StringFieldUpdateOperationsInput | string
    justification?: StringFieldUpdateOperationsInput | string
    documents?: ServiceExtensionRequestUpdatedocumentsInput | string[]
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedById?: StringFieldUpdateOperationsInput | string
    reviewedById?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}